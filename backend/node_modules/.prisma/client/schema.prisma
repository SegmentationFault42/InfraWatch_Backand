generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================================
// AUTENTICAÇÃO E USUÁRIOS
// =============================================

model sessions {
  sid    String   @id @db.VarChar(255)
  sess   Json
  expire DateTime

  @@index([expire], name: "IDX_session_expire")
}

model users {
  id                String   @id @default(uuid())
  email             String   @unique @db.VarChar(255)
  senha             String   @db.VarChar(255)
  first_name        String   @db.VarChar(255)
  last_name         String   @db.VarChar(255)
  profile_image_url String?  @db.VarChar(255)
  role              String   @default("viewer") @db.VarChar(50)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // relações
  systems_created systems[]    @relation("UserSystemsCreated")
  systems_updated systems[]    @relation("UserSystemsUpdated")
  alerts_ack      alerts[]     @relation("AlertAcknowledged")
  audit_logs      audit_logs[]
}

// =============================================
// SISTEMAS MONITORADOS
// =============================================

model systems {
  id             String       @id @default(uuid())
  name           String       @db.VarChar(255)
  url            String       @db.Text
  monitor_type   monitor_type
  check_interval Int          @default(60)
  timeout        Int          @default(30)
  status         status       @default(unknown)
  is_enabled     Boolean      @default(true)
  alert_email    String       @db.VarChar(255)
  description    String       @db.Text
  created_by     String?
  updated_by     String?
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt

  // relações
  user_created users?        @relation("UserSystemsCreated", fields: [created_by], references: [id])
  user_updated users?        @relation("UserSystemsUpdated", fields: [updated_by], references: [id])
  status_logs  status_logs[]
  alerts       alerts[]
  sla_configs  sla_configs?
  sla_reports  sla_reports[]
}

// =============================================
// MONITORAMENTO CONTÍNUO (LOGS DE STATUS)
// =============================================

model status_logs {
  id            String   @id @default(uuid())
  system_id     String
  status        status
  response_time Int?
  status_code   Int?
  error_message String?  @db.Text
  checked_at    DateTime @default(now())

  system systems @relation(fields: [system_id], references: [id])

  @@index([checked_at], name: "IDX_status_logs_checked_at")
}

// =============================================
// ALERTAS E INCIDENTES
// =============================================

model alerts {
  id              String       @id @default(uuid())
  system_id       String
  severity        severity
  status          alert_status @default(active)
  title           String       @db.VarChar(255)
  message         String       @db.Text
  acknowledged_by String?
  acknowledged_at DateTime?
  resolved_at     DateTime?
  created_at      DateTime     @default(now())

  system   systems @relation(fields: [system_id], references: [id])
  ack_user users?  @relation("AlertAcknowledged", fields: [acknowledged_by], references: [id])

  @@index([status], name: "IDX_alerts_status")
}

// =============================================
// GESTÃO DE SLA
// =============================================

model sla_configs {
  id                      String   @id @default(uuid())
  system_id               String   @unique
  uptime_target           Float    @default(99.9)
  response_time_target    Int      @default(1000)
  alert_on_sla_violation  Boolean  @default(true)
  alert_threshold_minutes Int      @default(5)
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt

  system systems @relation(fields: [system_id], references: [id])
}

model sla_reports {
  id                    String   @id @default(uuid())
  system_id             String
  month                 Int
  year                  Int
  total_checks          Int      @default(0)
  successful_checks     Int      @default(0)
  uptime_percentage     Float    @default(0)
  average_response_time Float?
  total_downtime        Int      @default(0)
  created_at            DateTime @default(now())

  system systems @relation(fields: [system_id], references: [id])

  @@index([created_at], name: "IDX_sla_reports_created_at")
}

// =============================================
// AUDITORIA E SEGURANÇA
// =============================================

model audit_logs {
  id          String   @id @default(uuid())
  user_id     String?
  action      String   @db.VarChar(255)
  object_type String?  @db.VarChar(100)
  object_id   String?
  details     Json?
  created_at  DateTime @default(now())

  user users? @relation(fields: [user_id], references: [id])
}

// =============================================
// ENUMS
// =============================================

enum monitor_type {
  http
  https
  ping
  tcp
}

enum status {
  up
  down
  warning
  unknown
}

enum severity {
  critical
  warning
  info
}

enum alert_status {
  active
  resolved
  acknowledged
}
