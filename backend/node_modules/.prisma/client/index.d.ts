
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model sessions
 * 
 */
export type sessions = $Result.DefaultSelection<Prisma.$sessionsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model systems
 * 
 */
export type systems = $Result.DefaultSelection<Prisma.$systemsPayload>
/**
 * Model status_logs
 * 
 */
export type status_logs = $Result.DefaultSelection<Prisma.$status_logsPayload>
/**
 * Model alerts
 * 
 */
export type alerts = $Result.DefaultSelection<Prisma.$alertsPayload>
/**
 * Model sla_configs
 * 
 */
export type sla_configs = $Result.DefaultSelection<Prisma.$sla_configsPayload>
/**
 * Model sla_reports
 * 
 */
export type sla_reports = $Result.DefaultSelection<Prisma.$sla_reportsPayload>
/**
 * Model audit_logs
 * 
 */
export type audit_logs = $Result.DefaultSelection<Prisma.$audit_logsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const monitor_type: {
  http: 'http',
  https: 'https',
  ping: 'ping',
  tcp: 'tcp'
};

export type monitor_type = (typeof monitor_type)[keyof typeof monitor_type]


export const status: {
  up: 'up',
  down: 'down',
  warning: 'warning',
  unknown: 'unknown'
};

export type status = (typeof status)[keyof typeof status]


export const severity: {
  critical: 'critical',
  warning: 'warning',
  info: 'info'
};

export type severity = (typeof severity)[keyof typeof severity]


export const alert_status: {
  active: 'active',
  resolved: 'resolved',
  acknowledged: 'acknowledged'
};

export type alert_status = (typeof alert_status)[keyof typeof alert_status]

}

export type monitor_type = $Enums.monitor_type

export const monitor_type: typeof $Enums.monitor_type

export type status = $Enums.status

export const status: typeof $Enums.status

export type severity = $Enums.severity

export const severity: typeof $Enums.severity

export type alert_status = $Enums.alert_status

export const alert_status: typeof $Enums.alert_status

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Sessions
 * const sessions = await prisma.sessions.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Sessions
   * const sessions = await prisma.sessions.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.sessions`: Exposes CRUD operations for the **sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.sessions.findMany()
    * ```
    */
  get sessions(): Prisma.sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.systems`: Exposes CRUD operations for the **systems** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Systems
    * const systems = await prisma.systems.findMany()
    * ```
    */
  get systems(): Prisma.systemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.status_logs`: Exposes CRUD operations for the **status_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Status_logs
    * const status_logs = await prisma.status_logs.findMany()
    * ```
    */
  get status_logs(): Prisma.status_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alerts`: Exposes CRUD operations for the **alerts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alerts
    * const alerts = await prisma.alerts.findMany()
    * ```
    */
  get alerts(): Prisma.alertsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sla_configs`: Exposes CRUD operations for the **sla_configs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sla_configs
    * const sla_configs = await prisma.sla_configs.findMany()
    * ```
    */
  get sla_configs(): Prisma.sla_configsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sla_reports`: Exposes CRUD operations for the **sla_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sla_reports
    * const sla_reports = await prisma.sla_reports.findMany()
    * ```
    */
  get sla_reports(): Prisma.sla_reportsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.audit_logs`: Exposes CRUD operations for the **audit_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Audit_logs
    * const audit_logs = await prisma.audit_logs.findMany()
    * ```
    */
  get audit_logs(): Prisma.audit_logsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    sessions: 'sessions',
    users: 'users',
    systems: 'systems',
    status_logs: 'status_logs',
    alerts: 'alerts',
    sla_configs: 'sla_configs',
    sla_reports: 'sla_reports',
    audit_logs: 'audit_logs'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "sessions" | "users" | "systems" | "status_logs" | "alerts" | "sla_configs" | "sla_reports" | "audit_logs"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      sessions: {
        payload: Prisma.$sessionsPayload<ExtArgs>
        fields: Prisma.sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findFirst: {
            args: Prisma.sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findMany: {
            args: Prisma.sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          create: {
            args: Prisma.sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          createMany: {
            args: Prisma.sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          delete: {
            args: Prisma.sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          update: {
            args: Prisma.sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          deleteMany: {
            args: Prisma.sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          upsert: {
            args: Prisma.sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          aggregate: {
            args: Prisma.SessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSessions>
          }
          groupBy: {
            args: Prisma.sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<SessionsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      systems: {
        payload: Prisma.$systemsPayload<ExtArgs>
        fields: Prisma.systemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.systemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.systemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>
          }
          findFirst: {
            args: Prisma.systemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.systemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>
          }
          findMany: {
            args: Prisma.systemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>[]
          }
          create: {
            args: Prisma.systemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>
          }
          createMany: {
            args: Prisma.systemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.systemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>[]
          }
          delete: {
            args: Prisma.systemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>
          }
          update: {
            args: Prisma.systemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>
          }
          deleteMany: {
            args: Prisma.systemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.systemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.systemsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>[]
          }
          upsert: {
            args: Prisma.systemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$systemsPayload>
          }
          aggregate: {
            args: Prisma.SystemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystems>
          }
          groupBy: {
            args: Prisma.systemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.systemsCountArgs<ExtArgs>
            result: $Utils.Optional<SystemsCountAggregateOutputType> | number
          }
        }
      }
      status_logs: {
        payload: Prisma.$status_logsPayload<ExtArgs>
        fields: Prisma.status_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.status_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.status_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>
          }
          findFirst: {
            args: Prisma.status_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.status_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>
          }
          findMany: {
            args: Prisma.status_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>[]
          }
          create: {
            args: Prisma.status_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>
          }
          createMany: {
            args: Prisma.status_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.status_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>[]
          }
          delete: {
            args: Prisma.status_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>
          }
          update: {
            args: Prisma.status_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>
          }
          deleteMany: {
            args: Prisma.status_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.status_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.status_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>[]
          }
          upsert: {
            args: Prisma.status_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$status_logsPayload>
          }
          aggregate: {
            args: Prisma.Status_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStatus_logs>
          }
          groupBy: {
            args: Prisma.status_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Status_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.status_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Status_logsCountAggregateOutputType> | number
          }
        }
      }
      alerts: {
        payload: Prisma.$alertsPayload<ExtArgs>
        fields: Prisma.alertsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alertsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alertsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>
          }
          findFirst: {
            args: Prisma.alertsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alertsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>
          }
          findMany: {
            args: Prisma.alertsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>[]
          }
          create: {
            args: Prisma.alertsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>
          }
          createMany: {
            args: Prisma.alertsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.alertsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>[]
          }
          delete: {
            args: Prisma.alertsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>
          }
          update: {
            args: Prisma.alertsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>
          }
          deleteMany: {
            args: Prisma.alertsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.alertsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.alertsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>[]
          }
          upsert: {
            args: Prisma.alertsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alertsPayload>
          }
          aggregate: {
            args: Prisma.AlertsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlerts>
          }
          groupBy: {
            args: Prisma.alertsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlertsGroupByOutputType>[]
          }
          count: {
            args: Prisma.alertsCountArgs<ExtArgs>
            result: $Utils.Optional<AlertsCountAggregateOutputType> | number
          }
        }
      }
      sla_configs: {
        payload: Prisma.$sla_configsPayload<ExtArgs>
        fields: Prisma.sla_configsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sla_configsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sla_configsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>
          }
          findFirst: {
            args: Prisma.sla_configsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sla_configsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>
          }
          findMany: {
            args: Prisma.sla_configsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>[]
          }
          create: {
            args: Prisma.sla_configsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>
          }
          createMany: {
            args: Prisma.sla_configsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sla_configsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>[]
          }
          delete: {
            args: Prisma.sla_configsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>
          }
          update: {
            args: Prisma.sla_configsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>
          }
          deleteMany: {
            args: Prisma.sla_configsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sla_configsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sla_configsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>[]
          }
          upsert: {
            args: Prisma.sla_configsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_configsPayload>
          }
          aggregate: {
            args: Prisma.Sla_configsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSla_configs>
          }
          groupBy: {
            args: Prisma.sla_configsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sla_configsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sla_configsCountArgs<ExtArgs>
            result: $Utils.Optional<Sla_configsCountAggregateOutputType> | number
          }
        }
      }
      sla_reports: {
        payload: Prisma.$sla_reportsPayload<ExtArgs>
        fields: Prisma.sla_reportsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sla_reportsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sla_reportsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>
          }
          findFirst: {
            args: Prisma.sla_reportsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sla_reportsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>
          }
          findMany: {
            args: Prisma.sla_reportsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>[]
          }
          create: {
            args: Prisma.sla_reportsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>
          }
          createMany: {
            args: Prisma.sla_reportsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sla_reportsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>[]
          }
          delete: {
            args: Prisma.sla_reportsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>
          }
          update: {
            args: Prisma.sla_reportsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>
          }
          deleteMany: {
            args: Prisma.sla_reportsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sla_reportsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sla_reportsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>[]
          }
          upsert: {
            args: Prisma.sla_reportsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sla_reportsPayload>
          }
          aggregate: {
            args: Prisma.Sla_reportsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSla_reports>
          }
          groupBy: {
            args: Prisma.sla_reportsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sla_reportsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sla_reportsCountArgs<ExtArgs>
            result: $Utils.Optional<Sla_reportsCountAggregateOutputType> | number
          }
        }
      }
      audit_logs: {
        payload: Prisma.$audit_logsPayload<ExtArgs>
        fields: Prisma.audit_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.audit_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.audit_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          findFirst: {
            args: Prisma.audit_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.audit_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          findMany: {
            args: Prisma.audit_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>[]
          }
          create: {
            args: Prisma.audit_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          createMany: {
            args: Prisma.audit_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.audit_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>[]
          }
          delete: {
            args: Prisma.audit_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          update: {
            args: Prisma.audit_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          deleteMany: {
            args: Prisma.audit_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.audit_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.audit_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>[]
          }
          upsert: {
            args: Prisma.audit_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_logsPayload>
          }
          aggregate: {
            args: Prisma.Audit_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAudit_logs>
          }
          groupBy: {
            args: Prisma.audit_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Audit_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.audit_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Audit_logsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    sessions?: sessionsOmit
    users?: usersOmit
    systems?: systemsOmit
    status_logs?: status_logsOmit
    alerts?: alertsOmit
    sla_configs?: sla_configsOmit
    sla_reports?: sla_reportsOmit
    audit_logs?: audit_logsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    systems_created: number
    systems_updated: number
    alerts_ack: number
    audit_logs: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    systems_created?: boolean | UsersCountOutputTypeCountSystems_createdArgs
    systems_updated?: boolean | UsersCountOutputTypeCountSystems_updatedArgs
    alerts_ack?: boolean | UsersCountOutputTypeCountAlerts_ackArgs
    audit_logs?: boolean | UsersCountOutputTypeCountAudit_logsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSystems_createdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: systemsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSystems_updatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: systemsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAlerts_ackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alertsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAudit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_logsWhereInput
  }


  /**
   * Count Type SystemsCountOutputType
   */

  export type SystemsCountOutputType = {
    status_logs: number
    alerts: number
    sla_reports: number
  }

  export type SystemsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    status_logs?: boolean | SystemsCountOutputTypeCountStatus_logsArgs
    alerts?: boolean | SystemsCountOutputTypeCountAlertsArgs
    sla_reports?: boolean | SystemsCountOutputTypeCountSla_reportsArgs
  }

  // Custom InputTypes
  /**
   * SystemsCountOutputType without action
   */
  export type SystemsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemsCountOutputType
     */
    select?: SystemsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SystemsCountOutputType without action
   */
  export type SystemsCountOutputTypeCountStatus_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: status_logsWhereInput
  }

  /**
   * SystemsCountOutputType without action
   */
  export type SystemsCountOutputTypeCountAlertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alertsWhereInput
  }

  /**
   * SystemsCountOutputType without action
   */
  export type SystemsCountOutputTypeCountSla_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sla_reportsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model sessions
   */

  export type AggregateSessions = {
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  export type SessionsMinAggregateOutputType = {
    sid: string | null
    expire: Date | null
  }

  export type SessionsMaxAggregateOutputType = {
    sid: string | null
    expire: Date | null
  }

  export type SessionsCountAggregateOutputType = {
    sid: number
    sess: number
    expire: number
    _all: number
  }


  export type SessionsMinAggregateInputType = {
    sid?: true
    expire?: true
  }

  export type SessionsMaxAggregateInputType = {
    sid?: true
    expire?: true
  }

  export type SessionsCountAggregateInputType = {
    sid?: true
    sess?: true
    expire?: true
    _all?: true
  }

  export type SessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to aggregate.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sessions
    **/
    _count?: true | SessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionsMaxAggregateInputType
  }

  export type GetSessionsAggregateType<T extends SessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessions[P]>
      : GetScalarType<T[P], AggregateSessions[P]>
  }




  export type sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithAggregationInput | sessionsOrderByWithAggregationInput[]
    by: SessionsScalarFieldEnum[] | SessionsScalarFieldEnum
    having?: sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionsCountAggregateInputType | true
    _min?: SessionsMinAggregateInputType
    _max?: SessionsMaxAggregateInputType
  }

  export type SessionsGroupByOutputType = {
    sid: string
    sess: JsonValue
    expire: Date
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  type GetSessionsGroupByPayload<T extends sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionsGroupByOutputType[P]>
            : GetScalarType<T[P], SessionsGroupByOutputType[P]>
        }
      >
    >


  export type sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectScalar = {
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }

  export type sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sid" | "sess" | "expire", ExtArgs["result"]["sessions"]>

  export type $sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sessions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      sid: string
      sess: Prisma.JsonValue
      expire: Date
    }, ExtArgs["result"]["sessions"]>
    composites: {}
  }

  type sessionsGetPayload<S extends boolean | null | undefined | sessionsDefaultArgs> = $Result.GetResult<Prisma.$sessionsPayload, S>

  type sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionsCountAggregateInputType | true
    }

  export interface sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sessions'], meta: { name: 'sessions' } }
    /**
     * Find zero or one Sessions that matches the filter.
     * @param {sessionsFindUniqueArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sessionsFindUniqueArgs>(args: SelectSubset<T, sessionsFindUniqueArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sessionsFindUniqueOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sessionsFindFirstArgs>(args?: SelectSubset<T, sessionsFindFirstArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.sessions.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.sessions.findMany({ take: 10 })
     * 
     * // Only select the `sid`
     * const sessionsWithSidOnly = await prisma.sessions.findMany({ select: { sid: true } })
     * 
     */
    findMany<T extends sessionsFindManyArgs>(args?: SelectSubset<T, sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sessions.
     * @param {sessionsCreateArgs} args - Arguments to create a Sessions.
     * @example
     * // Create one Sessions
     * const Sessions = await prisma.sessions.create({
     *   data: {
     *     // ... data to create a Sessions
     *   }
     * })
     * 
     */
    create<T extends sessionsCreateArgs>(args: SelectSubset<T, sessionsCreateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {sessionsCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sessionsCreateManyArgs>(args?: SelectSubset<T, sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {sessionsCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `sid`
     * const sessionsWithSidOnly = await prisma.sessions.createManyAndReturn({
     *   select: { sid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sessions.
     * @param {sessionsDeleteArgs} args - Arguments to delete one Sessions.
     * @example
     * // Delete one Sessions
     * const Sessions = await prisma.sessions.delete({
     *   where: {
     *     // ... filter to delete one Sessions
     *   }
     * })
     * 
     */
    delete<T extends sessionsDeleteArgs>(args: SelectSubset<T, sessionsDeleteArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sessions.
     * @param {sessionsUpdateArgs} args - Arguments to update one Sessions.
     * @example
     * // Update one Sessions
     * const sessions = await prisma.sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sessionsUpdateArgs>(args: SelectSubset<T, sessionsUpdateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {sessionsDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sessionsDeleteManyArgs>(args?: SelectSubset<T, sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sessionsUpdateManyArgs>(args: SelectSubset<T, sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {sessionsUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `sid`
     * const sessionsWithSidOnly = await prisma.sessions.updateManyAndReturn({
     *   select: { sid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sessions.
     * @param {sessionsUpsertArgs} args - Arguments to update or create a Sessions.
     * @example
     * // Update or create a Sessions
     * const sessions = await prisma.sessions.upsert({
     *   create: {
     *     // ... data to create a Sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sessions we want to update
     *   }
     * })
     */
    upsert<T extends sessionsUpsertArgs>(args: SelectSubset<T, sessionsUpsertArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.sessions.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends sessionsCountArgs>(
      args?: Subset<T, sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionsAggregateArgs>(args: Subset<T, SessionsAggregateArgs>): Prisma.PrismaPromise<GetSessionsAggregateType<T>>

    /**
     * Group by Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sessionsGroupByArgs['orderBy'] }
        : { orderBy?: sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sessions model
   */
  readonly fields: sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sessions model
   */
  interface sessionsFieldRefs {
    readonly sid: FieldRef<"sessions", 'String'>
    readonly sess: FieldRef<"sessions", 'Json'>
    readonly expire: FieldRef<"sessions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sessions findUnique
   */
  export type sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findUniqueOrThrow
   */
  export type sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findFirst
   */
  export type sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findFirstOrThrow
   */
  export type sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findMany
   */
  export type sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions create
   */
  export type sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data needed to create a sessions.
     */
    data: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
  }

  /**
   * sessions createMany
   */
  export type sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sessions createManyAndReturn
   */
  export type sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sessions update
   */
  export type sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data needed to update a sessions.
     */
    data: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
    /**
     * Choose, which sessions to update.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions updateMany
   */
  export type sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
  }

  /**
   * sessions updateManyAndReturn
   */
  export type sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
  }

  /**
   * sessions upsert
   */
  export type sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The filter to search for the sessions to update in case it exists.
     */
    where: sessionsWhereUniqueInput
    /**
     * In case the sessions found by the `where` argument doesn't exist, create a new sessions with this data.
     */
    create: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
    /**
     * In case the sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
  }

  /**
   * sessions delete
   */
  export type sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter which sessions to delete.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions deleteMany
   */
  export type sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to delete
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to delete.
     */
    limit?: number
  }

  /**
   * sessions without action
   */
  export type sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    email: string | null
    senha: string | null
    first_name: string | null
    last_name: string | null
    profile_image_url: string | null
    role: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    email: string | null
    senha: string | null
    first_name: string | null
    last_name: string | null
    profile_image_url: string | null
    role: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    email: number
    senha: number
    first_name: number
    last_name: number
    profile_image_url: number
    role: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    email?: true
    senha?: true
    first_name?: true
    last_name?: true
    profile_image_url?: true
    role?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    email?: true
    senha?: true
    first_name?: true
    last_name?: true
    profile_image_url?: true
    role?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    email?: true
    senha?: true
    first_name?: true
    last_name?: true
    profile_image_url?: true
    role?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url: string | null
    role: string
    created_at: Date
    updated_at: Date
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    senha?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_image_url?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    systems_created?: boolean | users$systems_createdArgs<ExtArgs>
    systems_updated?: boolean | users$systems_updatedArgs<ExtArgs>
    alerts_ack?: boolean | users$alerts_ackArgs<ExtArgs>
    audit_logs?: boolean | users$audit_logsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    senha?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_image_url?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    senha?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_image_url?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    email?: boolean
    senha?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_image_url?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "senha" | "first_name" | "last_name" | "profile_image_url" | "role" | "created_at" | "updated_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    systems_created?: boolean | users$systems_createdArgs<ExtArgs>
    systems_updated?: boolean | users$systems_updatedArgs<ExtArgs>
    alerts_ack?: boolean | users$alerts_ackArgs<ExtArgs>
    audit_logs?: boolean | users$audit_logsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      systems_created: Prisma.$systemsPayload<ExtArgs>[]
      systems_updated: Prisma.$systemsPayload<ExtArgs>[]
      alerts_ack: Prisma.$alertsPayload<ExtArgs>[]
      audit_logs: Prisma.$audit_logsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      senha: string
      first_name: string
      last_name: string
      profile_image_url: string | null
      role: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    systems_created<T extends users$systems_createdArgs<ExtArgs> = {}>(args?: Subset<T, users$systems_createdArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    systems_updated<T extends users$systems_updatedArgs<ExtArgs> = {}>(args?: Subset<T, users$systems_updatedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alerts_ack<T extends users$alerts_ackArgs<ExtArgs> = {}>(args?: Subset<T, users$alerts_ackArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    audit_logs<T extends users$audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, users$audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly senha: FieldRef<"users", 'String'>
    readonly first_name: FieldRef<"users", 'String'>
    readonly last_name: FieldRef<"users", 'String'>
    readonly profile_image_url: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.systems_created
   */
  export type users$systems_createdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    where?: systemsWhereInput
    orderBy?: systemsOrderByWithRelationInput | systemsOrderByWithRelationInput[]
    cursor?: systemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemsScalarFieldEnum | SystemsScalarFieldEnum[]
  }

  /**
   * users.systems_updated
   */
  export type users$systems_updatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    where?: systemsWhereInput
    orderBy?: systemsOrderByWithRelationInput | systemsOrderByWithRelationInput[]
    cursor?: systemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemsScalarFieldEnum | SystemsScalarFieldEnum[]
  }

  /**
   * users.alerts_ack
   */
  export type users$alerts_ackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    where?: alertsWhereInput
    orderBy?: alertsOrderByWithRelationInput | alertsOrderByWithRelationInput[]
    cursor?: alertsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlertsScalarFieldEnum | AlertsScalarFieldEnum[]
  }

  /**
   * users.audit_logs
   */
  export type users$audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    where?: audit_logsWhereInput
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    cursor?: audit_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model systems
   */

  export type AggregateSystems = {
    _count: SystemsCountAggregateOutputType | null
    _avg: SystemsAvgAggregateOutputType | null
    _sum: SystemsSumAggregateOutputType | null
    _min: SystemsMinAggregateOutputType | null
    _max: SystemsMaxAggregateOutputType | null
  }

  export type SystemsAvgAggregateOutputType = {
    check_interval: number | null
    timeout: number | null
  }

  export type SystemsSumAggregateOutputType = {
    check_interval: number | null
    timeout: number | null
  }

  export type SystemsMinAggregateOutputType = {
    id: string | null
    name: string | null
    url: string | null
    monitor_type: $Enums.monitor_type | null
    check_interval: number | null
    timeout: number | null
    status: $Enums.status | null
    is_enabled: boolean | null
    alert_email: string | null
    description: string | null
    created_by: string | null
    updated_by: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type SystemsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    url: string | null
    monitor_type: $Enums.monitor_type | null
    check_interval: number | null
    timeout: number | null
    status: $Enums.status | null
    is_enabled: boolean | null
    alert_email: string | null
    description: string | null
    created_by: string | null
    updated_by: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type SystemsCountAggregateOutputType = {
    id: number
    name: number
    url: number
    monitor_type: number
    check_interval: number
    timeout: number
    status: number
    is_enabled: number
    alert_email: number
    description: number
    created_by: number
    updated_by: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type SystemsAvgAggregateInputType = {
    check_interval?: true
    timeout?: true
  }

  export type SystemsSumAggregateInputType = {
    check_interval?: true
    timeout?: true
  }

  export type SystemsMinAggregateInputType = {
    id?: true
    name?: true
    url?: true
    monitor_type?: true
    check_interval?: true
    timeout?: true
    status?: true
    is_enabled?: true
    alert_email?: true
    description?: true
    created_by?: true
    updated_by?: true
    created_at?: true
    updated_at?: true
  }

  export type SystemsMaxAggregateInputType = {
    id?: true
    name?: true
    url?: true
    monitor_type?: true
    check_interval?: true
    timeout?: true
    status?: true
    is_enabled?: true
    alert_email?: true
    description?: true
    created_by?: true
    updated_by?: true
    created_at?: true
    updated_at?: true
  }

  export type SystemsCountAggregateInputType = {
    id?: true
    name?: true
    url?: true
    monitor_type?: true
    check_interval?: true
    timeout?: true
    status?: true
    is_enabled?: true
    alert_email?: true
    description?: true
    created_by?: true
    updated_by?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type SystemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which systems to aggregate.
     */
    where?: systemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of systems to fetch.
     */
    orderBy?: systemsOrderByWithRelationInput | systemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: systemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` systems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned systems
    **/
    _count?: true | SystemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SystemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SystemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemsMaxAggregateInputType
  }

  export type GetSystemsAggregateType<T extends SystemsAggregateArgs> = {
        [P in keyof T & keyof AggregateSystems]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystems[P]>
      : GetScalarType<T[P], AggregateSystems[P]>
  }




  export type systemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: systemsWhereInput
    orderBy?: systemsOrderByWithAggregationInput | systemsOrderByWithAggregationInput[]
    by: SystemsScalarFieldEnum[] | SystemsScalarFieldEnum
    having?: systemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemsCountAggregateInputType | true
    _avg?: SystemsAvgAggregateInputType
    _sum?: SystemsSumAggregateInputType
    _min?: SystemsMinAggregateInputType
    _max?: SystemsMaxAggregateInputType
  }

  export type SystemsGroupByOutputType = {
    id: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval: number
    timeout: number
    status: $Enums.status
    is_enabled: boolean
    alert_email: string
    description: string
    created_by: string | null
    updated_by: string | null
    created_at: Date
    updated_at: Date
    _count: SystemsCountAggregateOutputType | null
    _avg: SystemsAvgAggregateOutputType | null
    _sum: SystemsSumAggregateOutputType | null
    _min: SystemsMinAggregateOutputType | null
    _max: SystemsMaxAggregateOutputType | null
  }

  type GetSystemsGroupByPayload<T extends systemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemsGroupByOutputType[P]>
            : GetScalarType<T[P], SystemsGroupByOutputType[P]>
        }
      >
    >


  export type systemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    monitor_type?: boolean
    check_interval?: boolean
    timeout?: boolean
    status?: boolean
    is_enabled?: boolean
    alert_email?: boolean
    description?: boolean
    created_by?: boolean
    updated_by?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_created?: boolean | systems$user_createdArgs<ExtArgs>
    user_updated?: boolean | systems$user_updatedArgs<ExtArgs>
    status_logs?: boolean | systems$status_logsArgs<ExtArgs>
    alerts?: boolean | systems$alertsArgs<ExtArgs>
    sla_configs?: boolean | systems$sla_configsArgs<ExtArgs>
    sla_reports?: boolean | systems$sla_reportsArgs<ExtArgs>
    _count?: boolean | SystemsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systems"]>

  export type systemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    monitor_type?: boolean
    check_interval?: boolean
    timeout?: boolean
    status?: boolean
    is_enabled?: boolean
    alert_email?: boolean
    description?: boolean
    created_by?: boolean
    updated_by?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_created?: boolean | systems$user_createdArgs<ExtArgs>
    user_updated?: boolean | systems$user_updatedArgs<ExtArgs>
  }, ExtArgs["result"]["systems"]>

  export type systemsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    monitor_type?: boolean
    check_interval?: boolean
    timeout?: boolean
    status?: boolean
    is_enabled?: boolean
    alert_email?: boolean
    description?: boolean
    created_by?: boolean
    updated_by?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_created?: boolean | systems$user_createdArgs<ExtArgs>
    user_updated?: boolean | systems$user_updatedArgs<ExtArgs>
  }, ExtArgs["result"]["systems"]>

  export type systemsSelectScalar = {
    id?: boolean
    name?: boolean
    url?: boolean
    monitor_type?: boolean
    check_interval?: boolean
    timeout?: boolean
    status?: boolean
    is_enabled?: boolean
    alert_email?: boolean
    description?: boolean
    created_by?: boolean
    updated_by?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type systemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "url" | "monitor_type" | "check_interval" | "timeout" | "status" | "is_enabled" | "alert_email" | "description" | "created_by" | "updated_by" | "created_at" | "updated_at", ExtArgs["result"]["systems"]>
  export type systemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_created?: boolean | systems$user_createdArgs<ExtArgs>
    user_updated?: boolean | systems$user_updatedArgs<ExtArgs>
    status_logs?: boolean | systems$status_logsArgs<ExtArgs>
    alerts?: boolean | systems$alertsArgs<ExtArgs>
    sla_configs?: boolean | systems$sla_configsArgs<ExtArgs>
    sla_reports?: boolean | systems$sla_reportsArgs<ExtArgs>
    _count?: boolean | SystemsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type systemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_created?: boolean | systems$user_createdArgs<ExtArgs>
    user_updated?: boolean | systems$user_updatedArgs<ExtArgs>
  }
  export type systemsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_created?: boolean | systems$user_createdArgs<ExtArgs>
    user_updated?: boolean | systems$user_updatedArgs<ExtArgs>
  }

  export type $systemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "systems"
    objects: {
      user_created: Prisma.$usersPayload<ExtArgs> | null
      user_updated: Prisma.$usersPayload<ExtArgs> | null
      status_logs: Prisma.$status_logsPayload<ExtArgs>[]
      alerts: Prisma.$alertsPayload<ExtArgs>[]
      sla_configs: Prisma.$sla_configsPayload<ExtArgs> | null
      sla_reports: Prisma.$sla_reportsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      url: string
      monitor_type: $Enums.monitor_type
      check_interval: number
      timeout: number
      status: $Enums.status
      is_enabled: boolean
      alert_email: string
      description: string
      created_by: string | null
      updated_by: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["systems"]>
    composites: {}
  }

  type systemsGetPayload<S extends boolean | null | undefined | systemsDefaultArgs> = $Result.GetResult<Prisma.$systemsPayload, S>

  type systemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<systemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SystemsCountAggregateInputType | true
    }

  export interface systemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['systems'], meta: { name: 'systems' } }
    /**
     * Find zero or one Systems that matches the filter.
     * @param {systemsFindUniqueArgs} args - Arguments to find a Systems
     * @example
     * // Get one Systems
     * const systems = await prisma.systems.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends systemsFindUniqueArgs>(args: SelectSubset<T, systemsFindUniqueArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Systems that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {systemsFindUniqueOrThrowArgs} args - Arguments to find a Systems
     * @example
     * // Get one Systems
     * const systems = await prisma.systems.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends systemsFindUniqueOrThrowArgs>(args: SelectSubset<T, systemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Systems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {systemsFindFirstArgs} args - Arguments to find a Systems
     * @example
     * // Get one Systems
     * const systems = await prisma.systems.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends systemsFindFirstArgs>(args?: SelectSubset<T, systemsFindFirstArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Systems that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {systemsFindFirstOrThrowArgs} args - Arguments to find a Systems
     * @example
     * // Get one Systems
     * const systems = await prisma.systems.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends systemsFindFirstOrThrowArgs>(args?: SelectSubset<T, systemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Systems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {systemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Systems
     * const systems = await prisma.systems.findMany()
     * 
     * // Get first 10 Systems
     * const systems = await prisma.systems.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemsWithIdOnly = await prisma.systems.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends systemsFindManyArgs>(args?: SelectSubset<T, systemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Systems.
     * @param {systemsCreateArgs} args - Arguments to create a Systems.
     * @example
     * // Create one Systems
     * const Systems = await prisma.systems.create({
     *   data: {
     *     // ... data to create a Systems
     *   }
     * })
     * 
     */
    create<T extends systemsCreateArgs>(args: SelectSubset<T, systemsCreateArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Systems.
     * @param {systemsCreateManyArgs} args - Arguments to create many Systems.
     * @example
     * // Create many Systems
     * const systems = await prisma.systems.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends systemsCreateManyArgs>(args?: SelectSubset<T, systemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Systems and returns the data saved in the database.
     * @param {systemsCreateManyAndReturnArgs} args - Arguments to create many Systems.
     * @example
     * // Create many Systems
     * const systems = await prisma.systems.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Systems and only return the `id`
     * const systemsWithIdOnly = await prisma.systems.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends systemsCreateManyAndReturnArgs>(args?: SelectSubset<T, systemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Systems.
     * @param {systemsDeleteArgs} args - Arguments to delete one Systems.
     * @example
     * // Delete one Systems
     * const Systems = await prisma.systems.delete({
     *   where: {
     *     // ... filter to delete one Systems
     *   }
     * })
     * 
     */
    delete<T extends systemsDeleteArgs>(args: SelectSubset<T, systemsDeleteArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Systems.
     * @param {systemsUpdateArgs} args - Arguments to update one Systems.
     * @example
     * // Update one Systems
     * const systems = await prisma.systems.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends systemsUpdateArgs>(args: SelectSubset<T, systemsUpdateArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Systems.
     * @param {systemsDeleteManyArgs} args - Arguments to filter Systems to delete.
     * @example
     * // Delete a few Systems
     * const { count } = await prisma.systems.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends systemsDeleteManyArgs>(args?: SelectSubset<T, systemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Systems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {systemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Systems
     * const systems = await prisma.systems.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends systemsUpdateManyArgs>(args: SelectSubset<T, systemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Systems and returns the data updated in the database.
     * @param {systemsUpdateManyAndReturnArgs} args - Arguments to update many Systems.
     * @example
     * // Update many Systems
     * const systems = await prisma.systems.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Systems and only return the `id`
     * const systemsWithIdOnly = await prisma.systems.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends systemsUpdateManyAndReturnArgs>(args: SelectSubset<T, systemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Systems.
     * @param {systemsUpsertArgs} args - Arguments to update or create a Systems.
     * @example
     * // Update or create a Systems
     * const systems = await prisma.systems.upsert({
     *   create: {
     *     // ... data to create a Systems
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Systems we want to update
     *   }
     * })
     */
    upsert<T extends systemsUpsertArgs>(args: SelectSubset<T, systemsUpsertArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Systems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {systemsCountArgs} args - Arguments to filter Systems to count.
     * @example
     * // Count the number of Systems
     * const count = await prisma.systems.count({
     *   where: {
     *     // ... the filter for the Systems we want to count
     *   }
     * })
    **/
    count<T extends systemsCountArgs>(
      args?: Subset<T, systemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Systems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemsAggregateArgs>(args: Subset<T, SystemsAggregateArgs>): Prisma.PrismaPromise<GetSystemsAggregateType<T>>

    /**
     * Group by Systems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {systemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends systemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: systemsGroupByArgs['orderBy'] }
        : { orderBy?: systemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, systemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the systems model
   */
  readonly fields: systemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for systems.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__systemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_created<T extends systems$user_createdArgs<ExtArgs> = {}>(args?: Subset<T, systems$user_createdArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_updated<T extends systems$user_updatedArgs<ExtArgs> = {}>(args?: Subset<T, systems$user_updatedArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    status_logs<T extends systems$status_logsArgs<ExtArgs> = {}>(args?: Subset<T, systems$status_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alerts<T extends systems$alertsArgs<ExtArgs> = {}>(args?: Subset<T, systems$alertsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sla_configs<T extends systems$sla_configsArgs<ExtArgs> = {}>(args?: Subset<T, systems$sla_configsArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sla_reports<T extends systems$sla_reportsArgs<ExtArgs> = {}>(args?: Subset<T, systems$sla_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the systems model
   */
  interface systemsFieldRefs {
    readonly id: FieldRef<"systems", 'String'>
    readonly name: FieldRef<"systems", 'String'>
    readonly url: FieldRef<"systems", 'String'>
    readonly monitor_type: FieldRef<"systems", 'monitor_type'>
    readonly check_interval: FieldRef<"systems", 'Int'>
    readonly timeout: FieldRef<"systems", 'Int'>
    readonly status: FieldRef<"systems", 'status'>
    readonly is_enabled: FieldRef<"systems", 'Boolean'>
    readonly alert_email: FieldRef<"systems", 'String'>
    readonly description: FieldRef<"systems", 'String'>
    readonly created_by: FieldRef<"systems", 'String'>
    readonly updated_by: FieldRef<"systems", 'String'>
    readonly created_at: FieldRef<"systems", 'DateTime'>
    readonly updated_at: FieldRef<"systems", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * systems findUnique
   */
  export type systemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * Filter, which systems to fetch.
     */
    where: systemsWhereUniqueInput
  }

  /**
   * systems findUniqueOrThrow
   */
  export type systemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * Filter, which systems to fetch.
     */
    where: systemsWhereUniqueInput
  }

  /**
   * systems findFirst
   */
  export type systemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * Filter, which systems to fetch.
     */
    where?: systemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of systems to fetch.
     */
    orderBy?: systemsOrderByWithRelationInput | systemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for systems.
     */
    cursor?: systemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` systems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of systems.
     */
    distinct?: SystemsScalarFieldEnum | SystemsScalarFieldEnum[]
  }

  /**
   * systems findFirstOrThrow
   */
  export type systemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * Filter, which systems to fetch.
     */
    where?: systemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of systems to fetch.
     */
    orderBy?: systemsOrderByWithRelationInput | systemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for systems.
     */
    cursor?: systemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` systems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of systems.
     */
    distinct?: SystemsScalarFieldEnum | SystemsScalarFieldEnum[]
  }

  /**
   * systems findMany
   */
  export type systemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * Filter, which systems to fetch.
     */
    where?: systemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of systems to fetch.
     */
    orderBy?: systemsOrderByWithRelationInput | systemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing systems.
     */
    cursor?: systemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` systems.
     */
    skip?: number
    distinct?: SystemsScalarFieldEnum | SystemsScalarFieldEnum[]
  }

  /**
   * systems create
   */
  export type systemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * The data needed to create a systems.
     */
    data: XOR<systemsCreateInput, systemsUncheckedCreateInput>
  }

  /**
   * systems createMany
   */
  export type systemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many systems.
     */
    data: systemsCreateManyInput | systemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * systems createManyAndReturn
   */
  export type systemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * The data used to create many systems.
     */
    data: systemsCreateManyInput | systemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * systems update
   */
  export type systemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * The data needed to update a systems.
     */
    data: XOR<systemsUpdateInput, systemsUncheckedUpdateInput>
    /**
     * Choose, which systems to update.
     */
    where: systemsWhereUniqueInput
  }

  /**
   * systems updateMany
   */
  export type systemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update systems.
     */
    data: XOR<systemsUpdateManyMutationInput, systemsUncheckedUpdateManyInput>
    /**
     * Filter which systems to update
     */
    where?: systemsWhereInput
    /**
     * Limit how many systems to update.
     */
    limit?: number
  }

  /**
   * systems updateManyAndReturn
   */
  export type systemsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * The data used to update systems.
     */
    data: XOR<systemsUpdateManyMutationInput, systemsUncheckedUpdateManyInput>
    /**
     * Filter which systems to update
     */
    where?: systemsWhereInput
    /**
     * Limit how many systems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * systems upsert
   */
  export type systemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * The filter to search for the systems to update in case it exists.
     */
    where: systemsWhereUniqueInput
    /**
     * In case the systems found by the `where` argument doesn't exist, create a new systems with this data.
     */
    create: XOR<systemsCreateInput, systemsUncheckedCreateInput>
    /**
     * In case the systems was found with the provided `where` argument, update it with this data.
     */
    update: XOR<systemsUpdateInput, systemsUncheckedUpdateInput>
  }

  /**
   * systems delete
   */
  export type systemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
    /**
     * Filter which systems to delete.
     */
    where: systemsWhereUniqueInput
  }

  /**
   * systems deleteMany
   */
  export type systemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which systems to delete
     */
    where?: systemsWhereInput
    /**
     * Limit how many systems to delete.
     */
    limit?: number
  }

  /**
   * systems.user_created
   */
  export type systems$user_createdArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * systems.user_updated
   */
  export type systems$user_updatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * systems.status_logs
   */
  export type systems$status_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    where?: status_logsWhereInput
    orderBy?: status_logsOrderByWithRelationInput | status_logsOrderByWithRelationInput[]
    cursor?: status_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Status_logsScalarFieldEnum | Status_logsScalarFieldEnum[]
  }

  /**
   * systems.alerts
   */
  export type systems$alertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    where?: alertsWhereInput
    orderBy?: alertsOrderByWithRelationInput | alertsOrderByWithRelationInput[]
    cursor?: alertsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlertsScalarFieldEnum | AlertsScalarFieldEnum[]
  }

  /**
   * systems.sla_configs
   */
  export type systems$sla_configsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    where?: sla_configsWhereInput
  }

  /**
   * systems.sla_reports
   */
  export type systems$sla_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    where?: sla_reportsWhereInput
    orderBy?: sla_reportsOrderByWithRelationInput | sla_reportsOrderByWithRelationInput[]
    cursor?: sla_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sla_reportsScalarFieldEnum | Sla_reportsScalarFieldEnum[]
  }

  /**
   * systems without action
   */
  export type systemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the systems
     */
    select?: systemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the systems
     */
    omit?: systemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: systemsInclude<ExtArgs> | null
  }


  /**
   * Model status_logs
   */

  export type AggregateStatus_logs = {
    _count: Status_logsCountAggregateOutputType | null
    _avg: Status_logsAvgAggregateOutputType | null
    _sum: Status_logsSumAggregateOutputType | null
    _min: Status_logsMinAggregateOutputType | null
    _max: Status_logsMaxAggregateOutputType | null
  }

  export type Status_logsAvgAggregateOutputType = {
    response_time: number | null
    status_code: number | null
  }

  export type Status_logsSumAggregateOutputType = {
    response_time: number | null
    status_code: number | null
  }

  export type Status_logsMinAggregateOutputType = {
    id: string | null
    system_id: string | null
    status: $Enums.status | null
    response_time: number | null
    status_code: number | null
    error_message: string | null
    checked_at: Date | null
  }

  export type Status_logsMaxAggregateOutputType = {
    id: string | null
    system_id: string | null
    status: $Enums.status | null
    response_time: number | null
    status_code: number | null
    error_message: string | null
    checked_at: Date | null
  }

  export type Status_logsCountAggregateOutputType = {
    id: number
    system_id: number
    status: number
    response_time: number
    status_code: number
    error_message: number
    checked_at: number
    _all: number
  }


  export type Status_logsAvgAggregateInputType = {
    response_time?: true
    status_code?: true
  }

  export type Status_logsSumAggregateInputType = {
    response_time?: true
    status_code?: true
  }

  export type Status_logsMinAggregateInputType = {
    id?: true
    system_id?: true
    status?: true
    response_time?: true
    status_code?: true
    error_message?: true
    checked_at?: true
  }

  export type Status_logsMaxAggregateInputType = {
    id?: true
    system_id?: true
    status?: true
    response_time?: true
    status_code?: true
    error_message?: true
    checked_at?: true
  }

  export type Status_logsCountAggregateInputType = {
    id?: true
    system_id?: true
    status?: true
    response_time?: true
    status_code?: true
    error_message?: true
    checked_at?: true
    _all?: true
  }

  export type Status_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which status_logs to aggregate.
     */
    where?: status_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of status_logs to fetch.
     */
    orderBy?: status_logsOrderByWithRelationInput | status_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: status_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` status_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` status_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned status_logs
    **/
    _count?: true | Status_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Status_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Status_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Status_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Status_logsMaxAggregateInputType
  }

  export type GetStatus_logsAggregateType<T extends Status_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateStatus_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStatus_logs[P]>
      : GetScalarType<T[P], AggregateStatus_logs[P]>
  }




  export type status_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: status_logsWhereInput
    orderBy?: status_logsOrderByWithAggregationInput | status_logsOrderByWithAggregationInput[]
    by: Status_logsScalarFieldEnum[] | Status_logsScalarFieldEnum
    having?: status_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Status_logsCountAggregateInputType | true
    _avg?: Status_logsAvgAggregateInputType
    _sum?: Status_logsSumAggregateInputType
    _min?: Status_logsMinAggregateInputType
    _max?: Status_logsMaxAggregateInputType
  }

  export type Status_logsGroupByOutputType = {
    id: string
    system_id: string
    status: $Enums.status
    response_time: number | null
    status_code: number | null
    error_message: string | null
    checked_at: Date
    _count: Status_logsCountAggregateOutputType | null
    _avg: Status_logsAvgAggregateOutputType | null
    _sum: Status_logsSumAggregateOutputType | null
    _min: Status_logsMinAggregateOutputType | null
    _max: Status_logsMaxAggregateOutputType | null
  }

  type GetStatus_logsGroupByPayload<T extends status_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Status_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Status_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Status_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Status_logsGroupByOutputType[P]>
        }
      >
    >


  export type status_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    status?: boolean
    response_time?: boolean
    status_code?: boolean
    error_message?: boolean
    checked_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["status_logs"]>

  export type status_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    status?: boolean
    response_time?: boolean
    status_code?: boolean
    error_message?: boolean
    checked_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["status_logs"]>

  export type status_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    status?: boolean
    response_time?: boolean
    status_code?: boolean
    error_message?: boolean
    checked_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["status_logs"]>

  export type status_logsSelectScalar = {
    id?: boolean
    system_id?: boolean
    status?: boolean
    response_time?: boolean
    status_code?: boolean
    error_message?: boolean
    checked_at?: boolean
  }

  export type status_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "system_id" | "status" | "response_time" | "status_code" | "error_message" | "checked_at", ExtArgs["result"]["status_logs"]>
  export type status_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }
  export type status_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }
  export type status_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }

  export type $status_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "status_logs"
    objects: {
      system: Prisma.$systemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      system_id: string
      status: $Enums.status
      response_time: number | null
      status_code: number | null
      error_message: string | null
      checked_at: Date
    }, ExtArgs["result"]["status_logs"]>
    composites: {}
  }

  type status_logsGetPayload<S extends boolean | null | undefined | status_logsDefaultArgs> = $Result.GetResult<Prisma.$status_logsPayload, S>

  type status_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<status_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Status_logsCountAggregateInputType | true
    }

  export interface status_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['status_logs'], meta: { name: 'status_logs' } }
    /**
     * Find zero or one Status_logs that matches the filter.
     * @param {status_logsFindUniqueArgs} args - Arguments to find a Status_logs
     * @example
     * // Get one Status_logs
     * const status_logs = await prisma.status_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends status_logsFindUniqueArgs>(args: SelectSubset<T, status_logsFindUniqueArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Status_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {status_logsFindUniqueOrThrowArgs} args - Arguments to find a Status_logs
     * @example
     * // Get one Status_logs
     * const status_logs = await prisma.status_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends status_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, status_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Status_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {status_logsFindFirstArgs} args - Arguments to find a Status_logs
     * @example
     * // Get one Status_logs
     * const status_logs = await prisma.status_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends status_logsFindFirstArgs>(args?: SelectSubset<T, status_logsFindFirstArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Status_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {status_logsFindFirstOrThrowArgs} args - Arguments to find a Status_logs
     * @example
     * // Get one Status_logs
     * const status_logs = await prisma.status_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends status_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, status_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Status_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {status_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Status_logs
     * const status_logs = await prisma.status_logs.findMany()
     * 
     * // Get first 10 Status_logs
     * const status_logs = await prisma.status_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const status_logsWithIdOnly = await prisma.status_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends status_logsFindManyArgs>(args?: SelectSubset<T, status_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Status_logs.
     * @param {status_logsCreateArgs} args - Arguments to create a Status_logs.
     * @example
     * // Create one Status_logs
     * const Status_logs = await prisma.status_logs.create({
     *   data: {
     *     // ... data to create a Status_logs
     *   }
     * })
     * 
     */
    create<T extends status_logsCreateArgs>(args: SelectSubset<T, status_logsCreateArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Status_logs.
     * @param {status_logsCreateManyArgs} args - Arguments to create many Status_logs.
     * @example
     * // Create many Status_logs
     * const status_logs = await prisma.status_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends status_logsCreateManyArgs>(args?: SelectSubset<T, status_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Status_logs and returns the data saved in the database.
     * @param {status_logsCreateManyAndReturnArgs} args - Arguments to create many Status_logs.
     * @example
     * // Create many Status_logs
     * const status_logs = await prisma.status_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Status_logs and only return the `id`
     * const status_logsWithIdOnly = await prisma.status_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends status_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, status_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Status_logs.
     * @param {status_logsDeleteArgs} args - Arguments to delete one Status_logs.
     * @example
     * // Delete one Status_logs
     * const Status_logs = await prisma.status_logs.delete({
     *   where: {
     *     // ... filter to delete one Status_logs
     *   }
     * })
     * 
     */
    delete<T extends status_logsDeleteArgs>(args: SelectSubset<T, status_logsDeleteArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Status_logs.
     * @param {status_logsUpdateArgs} args - Arguments to update one Status_logs.
     * @example
     * // Update one Status_logs
     * const status_logs = await prisma.status_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends status_logsUpdateArgs>(args: SelectSubset<T, status_logsUpdateArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Status_logs.
     * @param {status_logsDeleteManyArgs} args - Arguments to filter Status_logs to delete.
     * @example
     * // Delete a few Status_logs
     * const { count } = await prisma.status_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends status_logsDeleteManyArgs>(args?: SelectSubset<T, status_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Status_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {status_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Status_logs
     * const status_logs = await prisma.status_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends status_logsUpdateManyArgs>(args: SelectSubset<T, status_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Status_logs and returns the data updated in the database.
     * @param {status_logsUpdateManyAndReturnArgs} args - Arguments to update many Status_logs.
     * @example
     * // Update many Status_logs
     * const status_logs = await prisma.status_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Status_logs and only return the `id`
     * const status_logsWithIdOnly = await prisma.status_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends status_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, status_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Status_logs.
     * @param {status_logsUpsertArgs} args - Arguments to update or create a Status_logs.
     * @example
     * // Update or create a Status_logs
     * const status_logs = await prisma.status_logs.upsert({
     *   create: {
     *     // ... data to create a Status_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Status_logs we want to update
     *   }
     * })
     */
    upsert<T extends status_logsUpsertArgs>(args: SelectSubset<T, status_logsUpsertArgs<ExtArgs>>): Prisma__status_logsClient<$Result.GetResult<Prisma.$status_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Status_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {status_logsCountArgs} args - Arguments to filter Status_logs to count.
     * @example
     * // Count the number of Status_logs
     * const count = await prisma.status_logs.count({
     *   where: {
     *     // ... the filter for the Status_logs we want to count
     *   }
     * })
    **/
    count<T extends status_logsCountArgs>(
      args?: Subset<T, status_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Status_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Status_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Status_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Status_logsAggregateArgs>(args: Subset<T, Status_logsAggregateArgs>): Prisma.PrismaPromise<GetStatus_logsAggregateType<T>>

    /**
     * Group by Status_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {status_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends status_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: status_logsGroupByArgs['orderBy'] }
        : { orderBy?: status_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, status_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStatus_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the status_logs model
   */
  readonly fields: status_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for status_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__status_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    system<T extends systemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, systemsDefaultArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the status_logs model
   */
  interface status_logsFieldRefs {
    readonly id: FieldRef<"status_logs", 'String'>
    readonly system_id: FieldRef<"status_logs", 'String'>
    readonly status: FieldRef<"status_logs", 'status'>
    readonly response_time: FieldRef<"status_logs", 'Int'>
    readonly status_code: FieldRef<"status_logs", 'Int'>
    readonly error_message: FieldRef<"status_logs", 'String'>
    readonly checked_at: FieldRef<"status_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * status_logs findUnique
   */
  export type status_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * Filter, which status_logs to fetch.
     */
    where: status_logsWhereUniqueInput
  }

  /**
   * status_logs findUniqueOrThrow
   */
  export type status_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * Filter, which status_logs to fetch.
     */
    where: status_logsWhereUniqueInput
  }

  /**
   * status_logs findFirst
   */
  export type status_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * Filter, which status_logs to fetch.
     */
    where?: status_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of status_logs to fetch.
     */
    orderBy?: status_logsOrderByWithRelationInput | status_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for status_logs.
     */
    cursor?: status_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` status_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` status_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of status_logs.
     */
    distinct?: Status_logsScalarFieldEnum | Status_logsScalarFieldEnum[]
  }

  /**
   * status_logs findFirstOrThrow
   */
  export type status_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * Filter, which status_logs to fetch.
     */
    where?: status_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of status_logs to fetch.
     */
    orderBy?: status_logsOrderByWithRelationInput | status_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for status_logs.
     */
    cursor?: status_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` status_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` status_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of status_logs.
     */
    distinct?: Status_logsScalarFieldEnum | Status_logsScalarFieldEnum[]
  }

  /**
   * status_logs findMany
   */
  export type status_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * Filter, which status_logs to fetch.
     */
    where?: status_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of status_logs to fetch.
     */
    orderBy?: status_logsOrderByWithRelationInput | status_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing status_logs.
     */
    cursor?: status_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` status_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` status_logs.
     */
    skip?: number
    distinct?: Status_logsScalarFieldEnum | Status_logsScalarFieldEnum[]
  }

  /**
   * status_logs create
   */
  export type status_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a status_logs.
     */
    data: XOR<status_logsCreateInput, status_logsUncheckedCreateInput>
  }

  /**
   * status_logs createMany
   */
  export type status_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many status_logs.
     */
    data: status_logsCreateManyInput | status_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * status_logs createManyAndReturn
   */
  export type status_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * The data used to create many status_logs.
     */
    data: status_logsCreateManyInput | status_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * status_logs update
   */
  export type status_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a status_logs.
     */
    data: XOR<status_logsUpdateInput, status_logsUncheckedUpdateInput>
    /**
     * Choose, which status_logs to update.
     */
    where: status_logsWhereUniqueInput
  }

  /**
   * status_logs updateMany
   */
  export type status_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update status_logs.
     */
    data: XOR<status_logsUpdateManyMutationInput, status_logsUncheckedUpdateManyInput>
    /**
     * Filter which status_logs to update
     */
    where?: status_logsWhereInput
    /**
     * Limit how many status_logs to update.
     */
    limit?: number
  }

  /**
   * status_logs updateManyAndReturn
   */
  export type status_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * The data used to update status_logs.
     */
    data: XOR<status_logsUpdateManyMutationInput, status_logsUncheckedUpdateManyInput>
    /**
     * Filter which status_logs to update
     */
    where?: status_logsWhereInput
    /**
     * Limit how many status_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * status_logs upsert
   */
  export type status_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the status_logs to update in case it exists.
     */
    where: status_logsWhereUniqueInput
    /**
     * In case the status_logs found by the `where` argument doesn't exist, create a new status_logs with this data.
     */
    create: XOR<status_logsCreateInput, status_logsUncheckedCreateInput>
    /**
     * In case the status_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<status_logsUpdateInput, status_logsUncheckedUpdateInput>
  }

  /**
   * status_logs delete
   */
  export type status_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
    /**
     * Filter which status_logs to delete.
     */
    where: status_logsWhereUniqueInput
  }

  /**
   * status_logs deleteMany
   */
  export type status_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which status_logs to delete
     */
    where?: status_logsWhereInput
    /**
     * Limit how many status_logs to delete.
     */
    limit?: number
  }

  /**
   * status_logs without action
   */
  export type status_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the status_logs
     */
    select?: status_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the status_logs
     */
    omit?: status_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: status_logsInclude<ExtArgs> | null
  }


  /**
   * Model alerts
   */

  export type AggregateAlerts = {
    _count: AlertsCountAggregateOutputType | null
    _min: AlertsMinAggregateOutputType | null
    _max: AlertsMaxAggregateOutputType | null
  }

  export type AlertsMinAggregateOutputType = {
    id: string | null
    system_id: string | null
    severity: $Enums.severity | null
    status: $Enums.alert_status | null
    title: string | null
    message: string | null
    acknowledged_by: string | null
    acknowledged_at: Date | null
    resolved_at: Date | null
    created_at: Date | null
  }

  export type AlertsMaxAggregateOutputType = {
    id: string | null
    system_id: string | null
    severity: $Enums.severity | null
    status: $Enums.alert_status | null
    title: string | null
    message: string | null
    acknowledged_by: string | null
    acknowledged_at: Date | null
    resolved_at: Date | null
    created_at: Date | null
  }

  export type AlertsCountAggregateOutputType = {
    id: number
    system_id: number
    severity: number
    status: number
    title: number
    message: number
    acknowledged_by: number
    acknowledged_at: number
    resolved_at: number
    created_at: number
    _all: number
  }


  export type AlertsMinAggregateInputType = {
    id?: true
    system_id?: true
    severity?: true
    status?: true
    title?: true
    message?: true
    acknowledged_by?: true
    acknowledged_at?: true
    resolved_at?: true
    created_at?: true
  }

  export type AlertsMaxAggregateInputType = {
    id?: true
    system_id?: true
    severity?: true
    status?: true
    title?: true
    message?: true
    acknowledged_by?: true
    acknowledged_at?: true
    resolved_at?: true
    created_at?: true
  }

  export type AlertsCountAggregateInputType = {
    id?: true
    system_id?: true
    severity?: true
    status?: true
    title?: true
    message?: true
    acknowledged_by?: true
    acknowledged_at?: true
    resolved_at?: true
    created_at?: true
    _all?: true
  }

  export type AlertsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alerts to aggregate.
     */
    where?: alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alerts to fetch.
     */
    orderBy?: alertsOrderByWithRelationInput | alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alerts
    **/
    _count?: true | AlertsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlertsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlertsMaxAggregateInputType
  }

  export type GetAlertsAggregateType<T extends AlertsAggregateArgs> = {
        [P in keyof T & keyof AggregateAlerts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlerts[P]>
      : GetScalarType<T[P], AggregateAlerts[P]>
  }




  export type alertsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alertsWhereInput
    orderBy?: alertsOrderByWithAggregationInput | alertsOrderByWithAggregationInput[]
    by: AlertsScalarFieldEnum[] | AlertsScalarFieldEnum
    having?: alertsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlertsCountAggregateInputType | true
    _min?: AlertsMinAggregateInputType
    _max?: AlertsMaxAggregateInputType
  }

  export type AlertsGroupByOutputType = {
    id: string
    system_id: string
    severity: $Enums.severity
    status: $Enums.alert_status
    title: string
    message: string
    acknowledged_by: string | null
    acknowledged_at: Date | null
    resolved_at: Date | null
    created_at: Date
    _count: AlertsCountAggregateOutputType | null
    _min: AlertsMinAggregateOutputType | null
    _max: AlertsMaxAggregateOutputType | null
  }

  type GetAlertsGroupByPayload<T extends alertsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlertsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlertsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlertsGroupByOutputType[P]>
            : GetScalarType<T[P], AlertsGroupByOutputType[P]>
        }
      >
    >


  export type alertsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    severity?: boolean
    status?: boolean
    title?: boolean
    message?: boolean
    acknowledged_by?: boolean
    acknowledged_at?: boolean
    resolved_at?: boolean
    created_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
    ack_user?: boolean | alerts$ack_userArgs<ExtArgs>
  }, ExtArgs["result"]["alerts"]>

  export type alertsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    severity?: boolean
    status?: boolean
    title?: boolean
    message?: boolean
    acknowledged_by?: boolean
    acknowledged_at?: boolean
    resolved_at?: boolean
    created_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
    ack_user?: boolean | alerts$ack_userArgs<ExtArgs>
  }, ExtArgs["result"]["alerts"]>

  export type alertsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    severity?: boolean
    status?: boolean
    title?: boolean
    message?: boolean
    acknowledged_by?: boolean
    acknowledged_at?: boolean
    resolved_at?: boolean
    created_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
    ack_user?: boolean | alerts$ack_userArgs<ExtArgs>
  }, ExtArgs["result"]["alerts"]>

  export type alertsSelectScalar = {
    id?: boolean
    system_id?: boolean
    severity?: boolean
    status?: boolean
    title?: boolean
    message?: boolean
    acknowledged_by?: boolean
    acknowledged_at?: boolean
    resolved_at?: boolean
    created_at?: boolean
  }

  export type alertsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "system_id" | "severity" | "status" | "title" | "message" | "acknowledged_by" | "acknowledged_at" | "resolved_at" | "created_at", ExtArgs["result"]["alerts"]>
  export type alertsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
    ack_user?: boolean | alerts$ack_userArgs<ExtArgs>
  }
  export type alertsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
    ack_user?: boolean | alerts$ack_userArgs<ExtArgs>
  }
  export type alertsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
    ack_user?: boolean | alerts$ack_userArgs<ExtArgs>
  }

  export type $alertsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alerts"
    objects: {
      system: Prisma.$systemsPayload<ExtArgs>
      ack_user: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      system_id: string
      severity: $Enums.severity
      status: $Enums.alert_status
      title: string
      message: string
      acknowledged_by: string | null
      acknowledged_at: Date | null
      resolved_at: Date | null
      created_at: Date
    }, ExtArgs["result"]["alerts"]>
    composites: {}
  }

  type alertsGetPayload<S extends boolean | null | undefined | alertsDefaultArgs> = $Result.GetResult<Prisma.$alertsPayload, S>

  type alertsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<alertsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlertsCountAggregateInputType | true
    }

  export interface alertsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alerts'], meta: { name: 'alerts' } }
    /**
     * Find zero or one Alerts that matches the filter.
     * @param {alertsFindUniqueArgs} args - Arguments to find a Alerts
     * @example
     * // Get one Alerts
     * const alerts = await prisma.alerts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends alertsFindUniqueArgs>(args: SelectSubset<T, alertsFindUniqueArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Alerts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {alertsFindUniqueOrThrowArgs} args - Arguments to find a Alerts
     * @example
     * // Get one Alerts
     * const alerts = await prisma.alerts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends alertsFindUniqueOrThrowArgs>(args: SelectSubset<T, alertsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alerts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertsFindFirstArgs} args - Arguments to find a Alerts
     * @example
     * // Get one Alerts
     * const alerts = await prisma.alerts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends alertsFindFirstArgs>(args?: SelectSubset<T, alertsFindFirstArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alerts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertsFindFirstOrThrowArgs} args - Arguments to find a Alerts
     * @example
     * // Get one Alerts
     * const alerts = await prisma.alerts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends alertsFindFirstOrThrowArgs>(args?: SelectSubset<T, alertsFindFirstOrThrowArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Alerts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alerts
     * const alerts = await prisma.alerts.findMany()
     * 
     * // Get first 10 Alerts
     * const alerts = await prisma.alerts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alertsWithIdOnly = await prisma.alerts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends alertsFindManyArgs>(args?: SelectSubset<T, alertsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Alerts.
     * @param {alertsCreateArgs} args - Arguments to create a Alerts.
     * @example
     * // Create one Alerts
     * const Alerts = await prisma.alerts.create({
     *   data: {
     *     // ... data to create a Alerts
     *   }
     * })
     * 
     */
    create<T extends alertsCreateArgs>(args: SelectSubset<T, alertsCreateArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Alerts.
     * @param {alertsCreateManyArgs} args - Arguments to create many Alerts.
     * @example
     * // Create many Alerts
     * const alerts = await prisma.alerts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends alertsCreateManyArgs>(args?: SelectSubset<T, alertsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alerts and returns the data saved in the database.
     * @param {alertsCreateManyAndReturnArgs} args - Arguments to create many Alerts.
     * @example
     * // Create many Alerts
     * const alerts = await prisma.alerts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alerts and only return the `id`
     * const alertsWithIdOnly = await prisma.alerts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends alertsCreateManyAndReturnArgs>(args?: SelectSubset<T, alertsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Alerts.
     * @param {alertsDeleteArgs} args - Arguments to delete one Alerts.
     * @example
     * // Delete one Alerts
     * const Alerts = await prisma.alerts.delete({
     *   where: {
     *     // ... filter to delete one Alerts
     *   }
     * })
     * 
     */
    delete<T extends alertsDeleteArgs>(args: SelectSubset<T, alertsDeleteArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Alerts.
     * @param {alertsUpdateArgs} args - Arguments to update one Alerts.
     * @example
     * // Update one Alerts
     * const alerts = await prisma.alerts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends alertsUpdateArgs>(args: SelectSubset<T, alertsUpdateArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Alerts.
     * @param {alertsDeleteManyArgs} args - Arguments to filter Alerts to delete.
     * @example
     * // Delete a few Alerts
     * const { count } = await prisma.alerts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends alertsDeleteManyArgs>(args?: SelectSubset<T, alertsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alerts
     * const alerts = await prisma.alerts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends alertsUpdateManyArgs>(args: SelectSubset<T, alertsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alerts and returns the data updated in the database.
     * @param {alertsUpdateManyAndReturnArgs} args - Arguments to update many Alerts.
     * @example
     * // Update many Alerts
     * const alerts = await prisma.alerts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Alerts and only return the `id`
     * const alertsWithIdOnly = await prisma.alerts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends alertsUpdateManyAndReturnArgs>(args: SelectSubset<T, alertsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Alerts.
     * @param {alertsUpsertArgs} args - Arguments to update or create a Alerts.
     * @example
     * // Update or create a Alerts
     * const alerts = await prisma.alerts.upsert({
     *   create: {
     *     // ... data to create a Alerts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alerts we want to update
     *   }
     * })
     */
    upsert<T extends alertsUpsertArgs>(args: SelectSubset<T, alertsUpsertArgs<ExtArgs>>): Prisma__alertsClient<$Result.GetResult<Prisma.$alertsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertsCountArgs} args - Arguments to filter Alerts to count.
     * @example
     * // Count the number of Alerts
     * const count = await prisma.alerts.count({
     *   where: {
     *     // ... the filter for the Alerts we want to count
     *   }
     * })
    **/
    count<T extends alertsCountArgs>(
      args?: Subset<T, alertsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlertsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlertsAggregateArgs>(args: Subset<T, AlertsAggregateArgs>): Prisma.PrismaPromise<GetAlertsAggregateType<T>>

    /**
     * Group by Alerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alertsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alertsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alertsGroupByArgs['orderBy'] }
        : { orderBy?: alertsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alertsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlertsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alerts model
   */
  readonly fields: alertsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alerts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alertsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    system<T extends systemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, systemsDefaultArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ack_user<T extends alerts$ack_userArgs<ExtArgs> = {}>(args?: Subset<T, alerts$ack_userArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the alerts model
   */
  interface alertsFieldRefs {
    readonly id: FieldRef<"alerts", 'String'>
    readonly system_id: FieldRef<"alerts", 'String'>
    readonly severity: FieldRef<"alerts", 'severity'>
    readonly status: FieldRef<"alerts", 'alert_status'>
    readonly title: FieldRef<"alerts", 'String'>
    readonly message: FieldRef<"alerts", 'String'>
    readonly acknowledged_by: FieldRef<"alerts", 'String'>
    readonly acknowledged_at: FieldRef<"alerts", 'DateTime'>
    readonly resolved_at: FieldRef<"alerts", 'DateTime'>
    readonly created_at: FieldRef<"alerts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * alerts findUnique
   */
  export type alertsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * Filter, which alerts to fetch.
     */
    where: alertsWhereUniqueInput
  }

  /**
   * alerts findUniqueOrThrow
   */
  export type alertsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * Filter, which alerts to fetch.
     */
    where: alertsWhereUniqueInput
  }

  /**
   * alerts findFirst
   */
  export type alertsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * Filter, which alerts to fetch.
     */
    where?: alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alerts to fetch.
     */
    orderBy?: alertsOrderByWithRelationInput | alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alerts.
     */
    cursor?: alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alerts.
     */
    distinct?: AlertsScalarFieldEnum | AlertsScalarFieldEnum[]
  }

  /**
   * alerts findFirstOrThrow
   */
  export type alertsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * Filter, which alerts to fetch.
     */
    where?: alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alerts to fetch.
     */
    orderBy?: alertsOrderByWithRelationInput | alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alerts.
     */
    cursor?: alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alerts.
     */
    distinct?: AlertsScalarFieldEnum | AlertsScalarFieldEnum[]
  }

  /**
   * alerts findMany
   */
  export type alertsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * Filter, which alerts to fetch.
     */
    where?: alertsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alerts to fetch.
     */
    orderBy?: alertsOrderByWithRelationInput | alertsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alerts.
     */
    cursor?: alertsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alerts.
     */
    skip?: number
    distinct?: AlertsScalarFieldEnum | AlertsScalarFieldEnum[]
  }

  /**
   * alerts create
   */
  export type alertsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * The data needed to create a alerts.
     */
    data: XOR<alertsCreateInput, alertsUncheckedCreateInput>
  }

  /**
   * alerts createMany
   */
  export type alertsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alerts.
     */
    data: alertsCreateManyInput | alertsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alerts createManyAndReturn
   */
  export type alertsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * The data used to create many alerts.
     */
    data: alertsCreateManyInput | alertsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * alerts update
   */
  export type alertsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * The data needed to update a alerts.
     */
    data: XOR<alertsUpdateInput, alertsUncheckedUpdateInput>
    /**
     * Choose, which alerts to update.
     */
    where: alertsWhereUniqueInput
  }

  /**
   * alerts updateMany
   */
  export type alertsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alerts.
     */
    data: XOR<alertsUpdateManyMutationInput, alertsUncheckedUpdateManyInput>
    /**
     * Filter which alerts to update
     */
    where?: alertsWhereInput
    /**
     * Limit how many alerts to update.
     */
    limit?: number
  }

  /**
   * alerts updateManyAndReturn
   */
  export type alertsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * The data used to update alerts.
     */
    data: XOR<alertsUpdateManyMutationInput, alertsUncheckedUpdateManyInput>
    /**
     * Filter which alerts to update
     */
    where?: alertsWhereInput
    /**
     * Limit how many alerts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * alerts upsert
   */
  export type alertsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * The filter to search for the alerts to update in case it exists.
     */
    where: alertsWhereUniqueInput
    /**
     * In case the alerts found by the `where` argument doesn't exist, create a new alerts with this data.
     */
    create: XOR<alertsCreateInput, alertsUncheckedCreateInput>
    /**
     * In case the alerts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alertsUpdateInput, alertsUncheckedUpdateInput>
  }

  /**
   * alerts delete
   */
  export type alertsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
    /**
     * Filter which alerts to delete.
     */
    where: alertsWhereUniqueInput
  }

  /**
   * alerts deleteMany
   */
  export type alertsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alerts to delete
     */
    where?: alertsWhereInput
    /**
     * Limit how many alerts to delete.
     */
    limit?: number
  }

  /**
   * alerts.ack_user
   */
  export type alerts$ack_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * alerts without action
   */
  export type alertsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alerts
     */
    select?: alertsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alerts
     */
    omit?: alertsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alertsInclude<ExtArgs> | null
  }


  /**
   * Model sla_configs
   */

  export type AggregateSla_configs = {
    _count: Sla_configsCountAggregateOutputType | null
    _avg: Sla_configsAvgAggregateOutputType | null
    _sum: Sla_configsSumAggregateOutputType | null
    _min: Sla_configsMinAggregateOutputType | null
    _max: Sla_configsMaxAggregateOutputType | null
  }

  export type Sla_configsAvgAggregateOutputType = {
    uptime_target: number | null
    response_time_target: number | null
    alert_threshold_minutes: number | null
  }

  export type Sla_configsSumAggregateOutputType = {
    uptime_target: number | null
    response_time_target: number | null
    alert_threshold_minutes: number | null
  }

  export type Sla_configsMinAggregateOutputType = {
    id: string | null
    system_id: string | null
    uptime_target: number | null
    response_time_target: number | null
    alert_on_sla_violation: boolean | null
    alert_threshold_minutes: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sla_configsMaxAggregateOutputType = {
    id: string | null
    system_id: string | null
    uptime_target: number | null
    response_time_target: number | null
    alert_on_sla_violation: boolean | null
    alert_threshold_minutes: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sla_configsCountAggregateOutputType = {
    id: number
    system_id: number
    uptime_target: number
    response_time_target: number
    alert_on_sla_violation: number
    alert_threshold_minutes: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sla_configsAvgAggregateInputType = {
    uptime_target?: true
    response_time_target?: true
    alert_threshold_minutes?: true
  }

  export type Sla_configsSumAggregateInputType = {
    uptime_target?: true
    response_time_target?: true
    alert_threshold_minutes?: true
  }

  export type Sla_configsMinAggregateInputType = {
    id?: true
    system_id?: true
    uptime_target?: true
    response_time_target?: true
    alert_on_sla_violation?: true
    alert_threshold_minutes?: true
    created_at?: true
    updated_at?: true
  }

  export type Sla_configsMaxAggregateInputType = {
    id?: true
    system_id?: true
    uptime_target?: true
    response_time_target?: true
    alert_on_sla_violation?: true
    alert_threshold_minutes?: true
    created_at?: true
    updated_at?: true
  }

  export type Sla_configsCountAggregateInputType = {
    id?: true
    system_id?: true
    uptime_target?: true
    response_time_target?: true
    alert_on_sla_violation?: true
    alert_threshold_minutes?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sla_configsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sla_configs to aggregate.
     */
    where?: sla_configsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_configs to fetch.
     */
    orderBy?: sla_configsOrderByWithRelationInput | sla_configsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sla_configsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sla_configs
    **/
    _count?: true | Sla_configsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sla_configsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sla_configsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sla_configsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sla_configsMaxAggregateInputType
  }

  export type GetSla_configsAggregateType<T extends Sla_configsAggregateArgs> = {
        [P in keyof T & keyof AggregateSla_configs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSla_configs[P]>
      : GetScalarType<T[P], AggregateSla_configs[P]>
  }




  export type sla_configsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sla_configsWhereInput
    orderBy?: sla_configsOrderByWithAggregationInput | sla_configsOrderByWithAggregationInput[]
    by: Sla_configsScalarFieldEnum[] | Sla_configsScalarFieldEnum
    having?: sla_configsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sla_configsCountAggregateInputType | true
    _avg?: Sla_configsAvgAggregateInputType
    _sum?: Sla_configsSumAggregateInputType
    _min?: Sla_configsMinAggregateInputType
    _max?: Sla_configsMaxAggregateInputType
  }

  export type Sla_configsGroupByOutputType = {
    id: string
    system_id: string
    uptime_target: number
    response_time_target: number
    alert_on_sla_violation: boolean
    alert_threshold_minutes: number
    created_at: Date
    updated_at: Date
    _count: Sla_configsCountAggregateOutputType | null
    _avg: Sla_configsAvgAggregateOutputType | null
    _sum: Sla_configsSumAggregateOutputType | null
    _min: Sla_configsMinAggregateOutputType | null
    _max: Sla_configsMaxAggregateOutputType | null
  }

  type GetSla_configsGroupByPayload<T extends sla_configsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sla_configsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sla_configsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sla_configsGroupByOutputType[P]>
            : GetScalarType<T[P], Sla_configsGroupByOutputType[P]>
        }
      >
    >


  export type sla_configsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    uptime_target?: boolean
    response_time_target?: boolean
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: boolean
    created_at?: boolean
    updated_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sla_configs"]>

  export type sla_configsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    uptime_target?: boolean
    response_time_target?: boolean
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: boolean
    created_at?: boolean
    updated_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sla_configs"]>

  export type sla_configsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    uptime_target?: boolean
    response_time_target?: boolean
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: boolean
    created_at?: boolean
    updated_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sla_configs"]>

  export type sla_configsSelectScalar = {
    id?: boolean
    system_id?: boolean
    uptime_target?: boolean
    response_time_target?: boolean
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sla_configsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "system_id" | "uptime_target" | "response_time_target" | "alert_on_sla_violation" | "alert_threshold_minutes" | "created_at" | "updated_at", ExtArgs["result"]["sla_configs"]>
  export type sla_configsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }
  export type sla_configsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }
  export type sla_configsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }

  export type $sla_configsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sla_configs"
    objects: {
      system: Prisma.$systemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      system_id: string
      uptime_target: number
      response_time_target: number
      alert_on_sla_violation: boolean
      alert_threshold_minutes: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["sla_configs"]>
    composites: {}
  }

  type sla_configsGetPayload<S extends boolean | null | undefined | sla_configsDefaultArgs> = $Result.GetResult<Prisma.$sla_configsPayload, S>

  type sla_configsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sla_configsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sla_configsCountAggregateInputType | true
    }

  export interface sla_configsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sla_configs'], meta: { name: 'sla_configs' } }
    /**
     * Find zero or one Sla_configs that matches the filter.
     * @param {sla_configsFindUniqueArgs} args - Arguments to find a Sla_configs
     * @example
     * // Get one Sla_configs
     * const sla_configs = await prisma.sla_configs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sla_configsFindUniqueArgs>(args: SelectSubset<T, sla_configsFindUniqueArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sla_configs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sla_configsFindUniqueOrThrowArgs} args - Arguments to find a Sla_configs
     * @example
     * // Get one Sla_configs
     * const sla_configs = await prisma.sla_configs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sla_configsFindUniqueOrThrowArgs>(args: SelectSubset<T, sla_configsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sla_configs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_configsFindFirstArgs} args - Arguments to find a Sla_configs
     * @example
     * // Get one Sla_configs
     * const sla_configs = await prisma.sla_configs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sla_configsFindFirstArgs>(args?: SelectSubset<T, sla_configsFindFirstArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sla_configs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_configsFindFirstOrThrowArgs} args - Arguments to find a Sla_configs
     * @example
     * // Get one Sla_configs
     * const sla_configs = await prisma.sla_configs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sla_configsFindFirstOrThrowArgs>(args?: SelectSubset<T, sla_configsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sla_configs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_configsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sla_configs
     * const sla_configs = await prisma.sla_configs.findMany()
     * 
     * // Get first 10 Sla_configs
     * const sla_configs = await prisma.sla_configs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sla_configsWithIdOnly = await prisma.sla_configs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sla_configsFindManyArgs>(args?: SelectSubset<T, sla_configsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sla_configs.
     * @param {sla_configsCreateArgs} args - Arguments to create a Sla_configs.
     * @example
     * // Create one Sla_configs
     * const Sla_configs = await prisma.sla_configs.create({
     *   data: {
     *     // ... data to create a Sla_configs
     *   }
     * })
     * 
     */
    create<T extends sla_configsCreateArgs>(args: SelectSubset<T, sla_configsCreateArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sla_configs.
     * @param {sla_configsCreateManyArgs} args - Arguments to create many Sla_configs.
     * @example
     * // Create many Sla_configs
     * const sla_configs = await prisma.sla_configs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sla_configsCreateManyArgs>(args?: SelectSubset<T, sla_configsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sla_configs and returns the data saved in the database.
     * @param {sla_configsCreateManyAndReturnArgs} args - Arguments to create many Sla_configs.
     * @example
     * // Create many Sla_configs
     * const sla_configs = await prisma.sla_configs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sla_configs and only return the `id`
     * const sla_configsWithIdOnly = await prisma.sla_configs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sla_configsCreateManyAndReturnArgs>(args?: SelectSubset<T, sla_configsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sla_configs.
     * @param {sla_configsDeleteArgs} args - Arguments to delete one Sla_configs.
     * @example
     * // Delete one Sla_configs
     * const Sla_configs = await prisma.sla_configs.delete({
     *   where: {
     *     // ... filter to delete one Sla_configs
     *   }
     * })
     * 
     */
    delete<T extends sla_configsDeleteArgs>(args: SelectSubset<T, sla_configsDeleteArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sla_configs.
     * @param {sla_configsUpdateArgs} args - Arguments to update one Sla_configs.
     * @example
     * // Update one Sla_configs
     * const sla_configs = await prisma.sla_configs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sla_configsUpdateArgs>(args: SelectSubset<T, sla_configsUpdateArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sla_configs.
     * @param {sla_configsDeleteManyArgs} args - Arguments to filter Sla_configs to delete.
     * @example
     * // Delete a few Sla_configs
     * const { count } = await prisma.sla_configs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sla_configsDeleteManyArgs>(args?: SelectSubset<T, sla_configsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sla_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_configsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sla_configs
     * const sla_configs = await prisma.sla_configs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sla_configsUpdateManyArgs>(args: SelectSubset<T, sla_configsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sla_configs and returns the data updated in the database.
     * @param {sla_configsUpdateManyAndReturnArgs} args - Arguments to update many Sla_configs.
     * @example
     * // Update many Sla_configs
     * const sla_configs = await prisma.sla_configs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sla_configs and only return the `id`
     * const sla_configsWithIdOnly = await prisma.sla_configs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sla_configsUpdateManyAndReturnArgs>(args: SelectSubset<T, sla_configsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sla_configs.
     * @param {sla_configsUpsertArgs} args - Arguments to update or create a Sla_configs.
     * @example
     * // Update or create a Sla_configs
     * const sla_configs = await prisma.sla_configs.upsert({
     *   create: {
     *     // ... data to create a Sla_configs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sla_configs we want to update
     *   }
     * })
     */
    upsert<T extends sla_configsUpsertArgs>(args: SelectSubset<T, sla_configsUpsertArgs<ExtArgs>>): Prisma__sla_configsClient<$Result.GetResult<Prisma.$sla_configsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sla_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_configsCountArgs} args - Arguments to filter Sla_configs to count.
     * @example
     * // Count the number of Sla_configs
     * const count = await prisma.sla_configs.count({
     *   where: {
     *     // ... the filter for the Sla_configs we want to count
     *   }
     * })
    **/
    count<T extends sla_configsCountArgs>(
      args?: Subset<T, sla_configsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sla_configsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sla_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sla_configsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sla_configsAggregateArgs>(args: Subset<T, Sla_configsAggregateArgs>): Prisma.PrismaPromise<GetSla_configsAggregateType<T>>

    /**
     * Group by Sla_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_configsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sla_configsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sla_configsGroupByArgs['orderBy'] }
        : { orderBy?: sla_configsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sla_configsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSla_configsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sla_configs model
   */
  readonly fields: sla_configsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sla_configs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sla_configsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    system<T extends systemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, systemsDefaultArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sla_configs model
   */
  interface sla_configsFieldRefs {
    readonly id: FieldRef<"sla_configs", 'String'>
    readonly system_id: FieldRef<"sla_configs", 'String'>
    readonly uptime_target: FieldRef<"sla_configs", 'Float'>
    readonly response_time_target: FieldRef<"sla_configs", 'Int'>
    readonly alert_on_sla_violation: FieldRef<"sla_configs", 'Boolean'>
    readonly alert_threshold_minutes: FieldRef<"sla_configs", 'Int'>
    readonly created_at: FieldRef<"sla_configs", 'DateTime'>
    readonly updated_at: FieldRef<"sla_configs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sla_configs findUnique
   */
  export type sla_configsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * Filter, which sla_configs to fetch.
     */
    where: sla_configsWhereUniqueInput
  }

  /**
   * sla_configs findUniqueOrThrow
   */
  export type sla_configsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * Filter, which sla_configs to fetch.
     */
    where: sla_configsWhereUniqueInput
  }

  /**
   * sla_configs findFirst
   */
  export type sla_configsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * Filter, which sla_configs to fetch.
     */
    where?: sla_configsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_configs to fetch.
     */
    orderBy?: sla_configsOrderByWithRelationInput | sla_configsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sla_configs.
     */
    cursor?: sla_configsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sla_configs.
     */
    distinct?: Sla_configsScalarFieldEnum | Sla_configsScalarFieldEnum[]
  }

  /**
   * sla_configs findFirstOrThrow
   */
  export type sla_configsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * Filter, which sla_configs to fetch.
     */
    where?: sla_configsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_configs to fetch.
     */
    orderBy?: sla_configsOrderByWithRelationInput | sla_configsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sla_configs.
     */
    cursor?: sla_configsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sla_configs.
     */
    distinct?: Sla_configsScalarFieldEnum | Sla_configsScalarFieldEnum[]
  }

  /**
   * sla_configs findMany
   */
  export type sla_configsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * Filter, which sla_configs to fetch.
     */
    where?: sla_configsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_configs to fetch.
     */
    orderBy?: sla_configsOrderByWithRelationInput | sla_configsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sla_configs.
     */
    cursor?: sla_configsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_configs.
     */
    skip?: number
    distinct?: Sla_configsScalarFieldEnum | Sla_configsScalarFieldEnum[]
  }

  /**
   * sla_configs create
   */
  export type sla_configsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * The data needed to create a sla_configs.
     */
    data: XOR<sla_configsCreateInput, sla_configsUncheckedCreateInput>
  }

  /**
   * sla_configs createMany
   */
  export type sla_configsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sla_configs.
     */
    data: sla_configsCreateManyInput | sla_configsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sla_configs createManyAndReturn
   */
  export type sla_configsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * The data used to create many sla_configs.
     */
    data: sla_configsCreateManyInput | sla_configsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sla_configs update
   */
  export type sla_configsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * The data needed to update a sla_configs.
     */
    data: XOR<sla_configsUpdateInput, sla_configsUncheckedUpdateInput>
    /**
     * Choose, which sla_configs to update.
     */
    where: sla_configsWhereUniqueInput
  }

  /**
   * sla_configs updateMany
   */
  export type sla_configsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sla_configs.
     */
    data: XOR<sla_configsUpdateManyMutationInput, sla_configsUncheckedUpdateManyInput>
    /**
     * Filter which sla_configs to update
     */
    where?: sla_configsWhereInput
    /**
     * Limit how many sla_configs to update.
     */
    limit?: number
  }

  /**
   * sla_configs updateManyAndReturn
   */
  export type sla_configsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * The data used to update sla_configs.
     */
    data: XOR<sla_configsUpdateManyMutationInput, sla_configsUncheckedUpdateManyInput>
    /**
     * Filter which sla_configs to update
     */
    where?: sla_configsWhereInput
    /**
     * Limit how many sla_configs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * sla_configs upsert
   */
  export type sla_configsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * The filter to search for the sla_configs to update in case it exists.
     */
    where: sla_configsWhereUniqueInput
    /**
     * In case the sla_configs found by the `where` argument doesn't exist, create a new sla_configs with this data.
     */
    create: XOR<sla_configsCreateInput, sla_configsUncheckedCreateInput>
    /**
     * In case the sla_configs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sla_configsUpdateInput, sla_configsUncheckedUpdateInput>
  }

  /**
   * sla_configs delete
   */
  export type sla_configsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
    /**
     * Filter which sla_configs to delete.
     */
    where: sla_configsWhereUniqueInput
  }

  /**
   * sla_configs deleteMany
   */
  export type sla_configsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sla_configs to delete
     */
    where?: sla_configsWhereInput
    /**
     * Limit how many sla_configs to delete.
     */
    limit?: number
  }

  /**
   * sla_configs without action
   */
  export type sla_configsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_configs
     */
    select?: sla_configsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_configs
     */
    omit?: sla_configsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_configsInclude<ExtArgs> | null
  }


  /**
   * Model sla_reports
   */

  export type AggregateSla_reports = {
    _count: Sla_reportsCountAggregateOutputType | null
    _avg: Sla_reportsAvgAggregateOutputType | null
    _sum: Sla_reportsSumAggregateOutputType | null
    _min: Sla_reportsMinAggregateOutputType | null
    _max: Sla_reportsMaxAggregateOutputType | null
  }

  export type Sla_reportsAvgAggregateOutputType = {
    month: number | null
    year: number | null
    total_checks: number | null
    successful_checks: number | null
    uptime_percentage: number | null
    average_response_time: number | null
    total_downtime: number | null
  }

  export type Sla_reportsSumAggregateOutputType = {
    month: number | null
    year: number | null
    total_checks: number | null
    successful_checks: number | null
    uptime_percentage: number | null
    average_response_time: number | null
    total_downtime: number | null
  }

  export type Sla_reportsMinAggregateOutputType = {
    id: string | null
    system_id: string | null
    month: number | null
    year: number | null
    total_checks: number | null
    successful_checks: number | null
    uptime_percentage: number | null
    average_response_time: number | null
    total_downtime: number | null
    created_at: Date | null
  }

  export type Sla_reportsMaxAggregateOutputType = {
    id: string | null
    system_id: string | null
    month: number | null
    year: number | null
    total_checks: number | null
    successful_checks: number | null
    uptime_percentage: number | null
    average_response_time: number | null
    total_downtime: number | null
    created_at: Date | null
  }

  export type Sla_reportsCountAggregateOutputType = {
    id: number
    system_id: number
    month: number
    year: number
    total_checks: number
    successful_checks: number
    uptime_percentage: number
    average_response_time: number
    total_downtime: number
    created_at: number
    _all: number
  }


  export type Sla_reportsAvgAggregateInputType = {
    month?: true
    year?: true
    total_checks?: true
    successful_checks?: true
    uptime_percentage?: true
    average_response_time?: true
    total_downtime?: true
  }

  export type Sla_reportsSumAggregateInputType = {
    month?: true
    year?: true
    total_checks?: true
    successful_checks?: true
    uptime_percentage?: true
    average_response_time?: true
    total_downtime?: true
  }

  export type Sla_reportsMinAggregateInputType = {
    id?: true
    system_id?: true
    month?: true
    year?: true
    total_checks?: true
    successful_checks?: true
    uptime_percentage?: true
    average_response_time?: true
    total_downtime?: true
    created_at?: true
  }

  export type Sla_reportsMaxAggregateInputType = {
    id?: true
    system_id?: true
    month?: true
    year?: true
    total_checks?: true
    successful_checks?: true
    uptime_percentage?: true
    average_response_time?: true
    total_downtime?: true
    created_at?: true
  }

  export type Sla_reportsCountAggregateInputType = {
    id?: true
    system_id?: true
    month?: true
    year?: true
    total_checks?: true
    successful_checks?: true
    uptime_percentage?: true
    average_response_time?: true
    total_downtime?: true
    created_at?: true
    _all?: true
  }

  export type Sla_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sla_reports to aggregate.
     */
    where?: sla_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_reports to fetch.
     */
    orderBy?: sla_reportsOrderByWithRelationInput | sla_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sla_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sla_reports
    **/
    _count?: true | Sla_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sla_reportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sla_reportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sla_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sla_reportsMaxAggregateInputType
  }

  export type GetSla_reportsAggregateType<T extends Sla_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateSla_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSla_reports[P]>
      : GetScalarType<T[P], AggregateSla_reports[P]>
  }




  export type sla_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sla_reportsWhereInput
    orderBy?: sla_reportsOrderByWithAggregationInput | sla_reportsOrderByWithAggregationInput[]
    by: Sla_reportsScalarFieldEnum[] | Sla_reportsScalarFieldEnum
    having?: sla_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sla_reportsCountAggregateInputType | true
    _avg?: Sla_reportsAvgAggregateInputType
    _sum?: Sla_reportsSumAggregateInputType
    _min?: Sla_reportsMinAggregateInputType
    _max?: Sla_reportsMaxAggregateInputType
  }

  export type Sla_reportsGroupByOutputType = {
    id: string
    system_id: string
    month: number
    year: number
    total_checks: number
    successful_checks: number
    uptime_percentage: number
    average_response_time: number | null
    total_downtime: number
    created_at: Date
    _count: Sla_reportsCountAggregateOutputType | null
    _avg: Sla_reportsAvgAggregateOutputType | null
    _sum: Sla_reportsSumAggregateOutputType | null
    _min: Sla_reportsMinAggregateOutputType | null
    _max: Sla_reportsMaxAggregateOutputType | null
  }

  type GetSla_reportsGroupByPayload<T extends sla_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sla_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sla_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sla_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Sla_reportsGroupByOutputType[P]>
        }
      >
    >


  export type sla_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    month?: boolean
    year?: boolean
    total_checks?: boolean
    successful_checks?: boolean
    uptime_percentage?: boolean
    average_response_time?: boolean
    total_downtime?: boolean
    created_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sla_reports"]>

  export type sla_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    month?: boolean
    year?: boolean
    total_checks?: boolean
    successful_checks?: boolean
    uptime_percentage?: boolean
    average_response_time?: boolean
    total_downtime?: boolean
    created_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sla_reports"]>

  export type sla_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    system_id?: boolean
    month?: boolean
    year?: boolean
    total_checks?: boolean
    successful_checks?: boolean
    uptime_percentage?: boolean
    average_response_time?: boolean
    total_downtime?: boolean
    created_at?: boolean
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sla_reports"]>

  export type sla_reportsSelectScalar = {
    id?: boolean
    system_id?: boolean
    month?: boolean
    year?: boolean
    total_checks?: boolean
    successful_checks?: boolean
    uptime_percentage?: boolean
    average_response_time?: boolean
    total_downtime?: boolean
    created_at?: boolean
  }

  export type sla_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "system_id" | "month" | "year" | "total_checks" | "successful_checks" | "uptime_percentage" | "average_response_time" | "total_downtime" | "created_at", ExtArgs["result"]["sla_reports"]>
  export type sla_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }
  export type sla_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }
  export type sla_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    system?: boolean | systemsDefaultArgs<ExtArgs>
  }

  export type $sla_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sla_reports"
    objects: {
      system: Prisma.$systemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      system_id: string
      month: number
      year: number
      total_checks: number
      successful_checks: number
      uptime_percentage: number
      average_response_time: number | null
      total_downtime: number
      created_at: Date
    }, ExtArgs["result"]["sla_reports"]>
    composites: {}
  }

  type sla_reportsGetPayload<S extends boolean | null | undefined | sla_reportsDefaultArgs> = $Result.GetResult<Prisma.$sla_reportsPayload, S>

  type sla_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sla_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sla_reportsCountAggregateInputType | true
    }

  export interface sla_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sla_reports'], meta: { name: 'sla_reports' } }
    /**
     * Find zero or one Sla_reports that matches the filter.
     * @param {sla_reportsFindUniqueArgs} args - Arguments to find a Sla_reports
     * @example
     * // Get one Sla_reports
     * const sla_reports = await prisma.sla_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sla_reportsFindUniqueArgs>(args: SelectSubset<T, sla_reportsFindUniqueArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sla_reports that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sla_reportsFindUniqueOrThrowArgs} args - Arguments to find a Sla_reports
     * @example
     * // Get one Sla_reports
     * const sla_reports = await prisma.sla_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sla_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, sla_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sla_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_reportsFindFirstArgs} args - Arguments to find a Sla_reports
     * @example
     * // Get one Sla_reports
     * const sla_reports = await prisma.sla_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sla_reportsFindFirstArgs>(args?: SelectSubset<T, sla_reportsFindFirstArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sla_reports that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_reportsFindFirstOrThrowArgs} args - Arguments to find a Sla_reports
     * @example
     * // Get one Sla_reports
     * const sla_reports = await prisma.sla_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sla_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, sla_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sla_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_reportsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sla_reports
     * const sla_reports = await prisma.sla_reports.findMany()
     * 
     * // Get first 10 Sla_reports
     * const sla_reports = await prisma.sla_reports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sla_reportsWithIdOnly = await prisma.sla_reports.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sla_reportsFindManyArgs>(args?: SelectSubset<T, sla_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sla_reports.
     * @param {sla_reportsCreateArgs} args - Arguments to create a Sla_reports.
     * @example
     * // Create one Sla_reports
     * const Sla_reports = await prisma.sla_reports.create({
     *   data: {
     *     // ... data to create a Sla_reports
     *   }
     * })
     * 
     */
    create<T extends sla_reportsCreateArgs>(args: SelectSubset<T, sla_reportsCreateArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sla_reports.
     * @param {sla_reportsCreateManyArgs} args - Arguments to create many Sla_reports.
     * @example
     * // Create many Sla_reports
     * const sla_reports = await prisma.sla_reports.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sla_reportsCreateManyArgs>(args?: SelectSubset<T, sla_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sla_reports and returns the data saved in the database.
     * @param {sla_reportsCreateManyAndReturnArgs} args - Arguments to create many Sla_reports.
     * @example
     * // Create many Sla_reports
     * const sla_reports = await prisma.sla_reports.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sla_reports and only return the `id`
     * const sla_reportsWithIdOnly = await prisma.sla_reports.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sla_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, sla_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sla_reports.
     * @param {sla_reportsDeleteArgs} args - Arguments to delete one Sla_reports.
     * @example
     * // Delete one Sla_reports
     * const Sla_reports = await prisma.sla_reports.delete({
     *   where: {
     *     // ... filter to delete one Sla_reports
     *   }
     * })
     * 
     */
    delete<T extends sla_reportsDeleteArgs>(args: SelectSubset<T, sla_reportsDeleteArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sla_reports.
     * @param {sla_reportsUpdateArgs} args - Arguments to update one Sla_reports.
     * @example
     * // Update one Sla_reports
     * const sla_reports = await prisma.sla_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sla_reportsUpdateArgs>(args: SelectSubset<T, sla_reportsUpdateArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sla_reports.
     * @param {sla_reportsDeleteManyArgs} args - Arguments to filter Sla_reports to delete.
     * @example
     * // Delete a few Sla_reports
     * const { count } = await prisma.sla_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sla_reportsDeleteManyArgs>(args?: SelectSubset<T, sla_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sla_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sla_reports
     * const sla_reports = await prisma.sla_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sla_reportsUpdateManyArgs>(args: SelectSubset<T, sla_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sla_reports and returns the data updated in the database.
     * @param {sla_reportsUpdateManyAndReturnArgs} args - Arguments to update many Sla_reports.
     * @example
     * // Update many Sla_reports
     * const sla_reports = await prisma.sla_reports.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sla_reports and only return the `id`
     * const sla_reportsWithIdOnly = await prisma.sla_reports.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sla_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, sla_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sla_reports.
     * @param {sla_reportsUpsertArgs} args - Arguments to update or create a Sla_reports.
     * @example
     * // Update or create a Sla_reports
     * const sla_reports = await prisma.sla_reports.upsert({
     *   create: {
     *     // ... data to create a Sla_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sla_reports we want to update
     *   }
     * })
     */
    upsert<T extends sla_reportsUpsertArgs>(args: SelectSubset<T, sla_reportsUpsertArgs<ExtArgs>>): Prisma__sla_reportsClient<$Result.GetResult<Prisma.$sla_reportsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sla_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_reportsCountArgs} args - Arguments to filter Sla_reports to count.
     * @example
     * // Count the number of Sla_reports
     * const count = await prisma.sla_reports.count({
     *   where: {
     *     // ... the filter for the Sla_reports we want to count
     *   }
     * })
    **/
    count<T extends sla_reportsCountArgs>(
      args?: Subset<T, sla_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sla_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sla_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sla_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sla_reportsAggregateArgs>(args: Subset<T, Sla_reportsAggregateArgs>): Prisma.PrismaPromise<GetSla_reportsAggregateType<T>>

    /**
     * Group by Sla_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sla_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sla_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sla_reportsGroupByArgs['orderBy'] }
        : { orderBy?: sla_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sla_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSla_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sla_reports model
   */
  readonly fields: sla_reportsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sla_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sla_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    system<T extends systemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, systemsDefaultArgs<ExtArgs>>): Prisma__systemsClient<$Result.GetResult<Prisma.$systemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sla_reports model
   */
  interface sla_reportsFieldRefs {
    readonly id: FieldRef<"sla_reports", 'String'>
    readonly system_id: FieldRef<"sla_reports", 'String'>
    readonly month: FieldRef<"sla_reports", 'Int'>
    readonly year: FieldRef<"sla_reports", 'Int'>
    readonly total_checks: FieldRef<"sla_reports", 'Int'>
    readonly successful_checks: FieldRef<"sla_reports", 'Int'>
    readonly uptime_percentage: FieldRef<"sla_reports", 'Float'>
    readonly average_response_time: FieldRef<"sla_reports", 'Float'>
    readonly total_downtime: FieldRef<"sla_reports", 'Int'>
    readonly created_at: FieldRef<"sla_reports", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sla_reports findUnique
   */
  export type sla_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * Filter, which sla_reports to fetch.
     */
    where: sla_reportsWhereUniqueInput
  }

  /**
   * sla_reports findUniqueOrThrow
   */
  export type sla_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * Filter, which sla_reports to fetch.
     */
    where: sla_reportsWhereUniqueInput
  }

  /**
   * sla_reports findFirst
   */
  export type sla_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * Filter, which sla_reports to fetch.
     */
    where?: sla_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_reports to fetch.
     */
    orderBy?: sla_reportsOrderByWithRelationInput | sla_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sla_reports.
     */
    cursor?: sla_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sla_reports.
     */
    distinct?: Sla_reportsScalarFieldEnum | Sla_reportsScalarFieldEnum[]
  }

  /**
   * sla_reports findFirstOrThrow
   */
  export type sla_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * Filter, which sla_reports to fetch.
     */
    where?: sla_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_reports to fetch.
     */
    orderBy?: sla_reportsOrderByWithRelationInput | sla_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sla_reports.
     */
    cursor?: sla_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sla_reports.
     */
    distinct?: Sla_reportsScalarFieldEnum | Sla_reportsScalarFieldEnum[]
  }

  /**
   * sla_reports findMany
   */
  export type sla_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * Filter, which sla_reports to fetch.
     */
    where?: sla_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sla_reports to fetch.
     */
    orderBy?: sla_reportsOrderByWithRelationInput | sla_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sla_reports.
     */
    cursor?: sla_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sla_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sla_reports.
     */
    skip?: number
    distinct?: Sla_reportsScalarFieldEnum | Sla_reportsScalarFieldEnum[]
  }

  /**
   * sla_reports create
   */
  export type sla_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * The data needed to create a sla_reports.
     */
    data: XOR<sla_reportsCreateInput, sla_reportsUncheckedCreateInput>
  }

  /**
   * sla_reports createMany
   */
  export type sla_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sla_reports.
     */
    data: sla_reportsCreateManyInput | sla_reportsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sla_reports createManyAndReturn
   */
  export type sla_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * The data used to create many sla_reports.
     */
    data: sla_reportsCreateManyInput | sla_reportsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sla_reports update
   */
  export type sla_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * The data needed to update a sla_reports.
     */
    data: XOR<sla_reportsUpdateInput, sla_reportsUncheckedUpdateInput>
    /**
     * Choose, which sla_reports to update.
     */
    where: sla_reportsWhereUniqueInput
  }

  /**
   * sla_reports updateMany
   */
  export type sla_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sla_reports.
     */
    data: XOR<sla_reportsUpdateManyMutationInput, sla_reportsUncheckedUpdateManyInput>
    /**
     * Filter which sla_reports to update
     */
    where?: sla_reportsWhereInput
    /**
     * Limit how many sla_reports to update.
     */
    limit?: number
  }

  /**
   * sla_reports updateManyAndReturn
   */
  export type sla_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * The data used to update sla_reports.
     */
    data: XOR<sla_reportsUpdateManyMutationInput, sla_reportsUncheckedUpdateManyInput>
    /**
     * Filter which sla_reports to update
     */
    where?: sla_reportsWhereInput
    /**
     * Limit how many sla_reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * sla_reports upsert
   */
  export type sla_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * The filter to search for the sla_reports to update in case it exists.
     */
    where: sla_reportsWhereUniqueInput
    /**
     * In case the sla_reports found by the `where` argument doesn't exist, create a new sla_reports with this data.
     */
    create: XOR<sla_reportsCreateInput, sla_reportsUncheckedCreateInput>
    /**
     * In case the sla_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sla_reportsUpdateInput, sla_reportsUncheckedUpdateInput>
  }

  /**
   * sla_reports delete
   */
  export type sla_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
    /**
     * Filter which sla_reports to delete.
     */
    where: sla_reportsWhereUniqueInput
  }

  /**
   * sla_reports deleteMany
   */
  export type sla_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sla_reports to delete
     */
    where?: sla_reportsWhereInput
    /**
     * Limit how many sla_reports to delete.
     */
    limit?: number
  }

  /**
   * sla_reports without action
   */
  export type sla_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sla_reports
     */
    select?: sla_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sla_reports
     */
    omit?: sla_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sla_reportsInclude<ExtArgs> | null
  }


  /**
   * Model audit_logs
   */

  export type AggregateAudit_logs = {
    _count: Audit_logsCountAggregateOutputType | null
    _min: Audit_logsMinAggregateOutputType | null
    _max: Audit_logsMaxAggregateOutputType | null
  }

  export type Audit_logsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    action: string | null
    object_type: string | null
    object_id: string | null
    created_at: Date | null
  }

  export type Audit_logsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    action: string | null
    object_type: string | null
    object_id: string | null
    created_at: Date | null
  }

  export type Audit_logsCountAggregateOutputType = {
    id: number
    user_id: number
    action: number
    object_type: number
    object_id: number
    details: number
    created_at: number
    _all: number
  }


  export type Audit_logsMinAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    object_type?: true
    object_id?: true
    created_at?: true
  }

  export type Audit_logsMaxAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    object_type?: true
    object_id?: true
    created_at?: true
  }

  export type Audit_logsCountAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    object_type?: true
    object_id?: true
    details?: true
    created_at?: true
    _all?: true
  }

  export type Audit_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_logs to aggregate.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned audit_logs
    **/
    _count?: true | Audit_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Audit_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Audit_logsMaxAggregateInputType
  }

  export type GetAudit_logsAggregateType<T extends Audit_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateAudit_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAudit_logs[P]>
      : GetScalarType<T[P], AggregateAudit_logs[P]>
  }




  export type audit_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_logsWhereInput
    orderBy?: audit_logsOrderByWithAggregationInput | audit_logsOrderByWithAggregationInput[]
    by: Audit_logsScalarFieldEnum[] | Audit_logsScalarFieldEnum
    having?: audit_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Audit_logsCountAggregateInputType | true
    _min?: Audit_logsMinAggregateInputType
    _max?: Audit_logsMaxAggregateInputType
  }

  export type Audit_logsGroupByOutputType = {
    id: string
    user_id: string | null
    action: string
    object_type: string | null
    object_id: string | null
    details: JsonValue | null
    created_at: Date
    _count: Audit_logsCountAggregateOutputType | null
    _min: Audit_logsMinAggregateOutputType | null
    _max: Audit_logsMaxAggregateOutputType | null
  }

  type GetAudit_logsGroupByPayload<T extends audit_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Audit_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Audit_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Audit_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Audit_logsGroupByOutputType[P]>
        }
      >
    >


  export type audit_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    object_type?: boolean
    object_id?: boolean
    details?: boolean
    created_at?: boolean
    user?: boolean | audit_logs$userArgs<ExtArgs>
  }, ExtArgs["result"]["audit_logs"]>

  export type audit_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    object_type?: boolean
    object_id?: boolean
    details?: boolean
    created_at?: boolean
    user?: boolean | audit_logs$userArgs<ExtArgs>
  }, ExtArgs["result"]["audit_logs"]>

  export type audit_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    object_type?: boolean
    object_id?: boolean
    details?: boolean
    created_at?: boolean
    user?: boolean | audit_logs$userArgs<ExtArgs>
  }, ExtArgs["result"]["audit_logs"]>

  export type audit_logsSelectScalar = {
    id?: boolean
    user_id?: boolean
    action?: boolean
    object_type?: boolean
    object_id?: boolean
    details?: boolean
    created_at?: boolean
  }

  export type audit_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "action" | "object_type" | "object_id" | "details" | "created_at", ExtArgs["result"]["audit_logs"]>
  export type audit_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | audit_logs$userArgs<ExtArgs>
  }
  export type audit_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | audit_logs$userArgs<ExtArgs>
  }
  export type audit_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | audit_logs$userArgs<ExtArgs>
  }

  export type $audit_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "audit_logs"
    objects: {
      user: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      action: string
      object_type: string | null
      object_id: string | null
      details: Prisma.JsonValue | null
      created_at: Date
    }, ExtArgs["result"]["audit_logs"]>
    composites: {}
  }

  type audit_logsGetPayload<S extends boolean | null | undefined | audit_logsDefaultArgs> = $Result.GetResult<Prisma.$audit_logsPayload, S>

  type audit_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<audit_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Audit_logsCountAggregateInputType | true
    }

  export interface audit_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['audit_logs'], meta: { name: 'audit_logs' } }
    /**
     * Find zero or one Audit_logs that matches the filter.
     * @param {audit_logsFindUniqueArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends audit_logsFindUniqueArgs>(args: SelectSubset<T, audit_logsFindUniqueArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Audit_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {audit_logsFindUniqueOrThrowArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends audit_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, audit_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsFindFirstArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends audit_logsFindFirstArgs>(args?: SelectSubset<T, audit_logsFindFirstArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsFindFirstOrThrowArgs} args - Arguments to find a Audit_logs
     * @example
     * // Get one Audit_logs
     * const audit_logs = await prisma.audit_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends audit_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, audit_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Audit_logs
     * const audit_logs = await prisma.audit_logs.findMany()
     * 
     * // Get first 10 Audit_logs
     * const audit_logs = await prisma.audit_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const audit_logsWithIdOnly = await prisma.audit_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends audit_logsFindManyArgs>(args?: SelectSubset<T, audit_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Audit_logs.
     * @param {audit_logsCreateArgs} args - Arguments to create a Audit_logs.
     * @example
     * // Create one Audit_logs
     * const Audit_logs = await prisma.audit_logs.create({
     *   data: {
     *     // ... data to create a Audit_logs
     *   }
     * })
     * 
     */
    create<T extends audit_logsCreateArgs>(args: SelectSubset<T, audit_logsCreateArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Audit_logs.
     * @param {audit_logsCreateManyArgs} args - Arguments to create many Audit_logs.
     * @example
     * // Create many Audit_logs
     * const audit_logs = await prisma.audit_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends audit_logsCreateManyArgs>(args?: SelectSubset<T, audit_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Audit_logs and returns the data saved in the database.
     * @param {audit_logsCreateManyAndReturnArgs} args - Arguments to create many Audit_logs.
     * @example
     * // Create many Audit_logs
     * const audit_logs = await prisma.audit_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Audit_logs and only return the `id`
     * const audit_logsWithIdOnly = await prisma.audit_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends audit_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, audit_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Audit_logs.
     * @param {audit_logsDeleteArgs} args - Arguments to delete one Audit_logs.
     * @example
     * // Delete one Audit_logs
     * const Audit_logs = await prisma.audit_logs.delete({
     *   where: {
     *     // ... filter to delete one Audit_logs
     *   }
     * })
     * 
     */
    delete<T extends audit_logsDeleteArgs>(args: SelectSubset<T, audit_logsDeleteArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Audit_logs.
     * @param {audit_logsUpdateArgs} args - Arguments to update one Audit_logs.
     * @example
     * // Update one Audit_logs
     * const audit_logs = await prisma.audit_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends audit_logsUpdateArgs>(args: SelectSubset<T, audit_logsUpdateArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Audit_logs.
     * @param {audit_logsDeleteManyArgs} args - Arguments to filter Audit_logs to delete.
     * @example
     * // Delete a few Audit_logs
     * const { count } = await prisma.audit_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends audit_logsDeleteManyArgs>(args?: SelectSubset<T, audit_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Audit_logs
     * const audit_logs = await prisma.audit_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends audit_logsUpdateManyArgs>(args: SelectSubset<T, audit_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_logs and returns the data updated in the database.
     * @param {audit_logsUpdateManyAndReturnArgs} args - Arguments to update many Audit_logs.
     * @example
     * // Update many Audit_logs
     * const audit_logs = await prisma.audit_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Audit_logs and only return the `id`
     * const audit_logsWithIdOnly = await prisma.audit_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends audit_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, audit_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Audit_logs.
     * @param {audit_logsUpsertArgs} args - Arguments to update or create a Audit_logs.
     * @example
     * // Update or create a Audit_logs
     * const audit_logs = await prisma.audit_logs.upsert({
     *   create: {
     *     // ... data to create a Audit_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Audit_logs we want to update
     *   }
     * })
     */
    upsert<T extends audit_logsUpsertArgs>(args: SelectSubset<T, audit_logsUpsertArgs<ExtArgs>>): Prisma__audit_logsClient<$Result.GetResult<Prisma.$audit_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsCountArgs} args - Arguments to filter Audit_logs to count.
     * @example
     * // Count the number of Audit_logs
     * const count = await prisma.audit_logs.count({
     *   where: {
     *     // ... the filter for the Audit_logs we want to count
     *   }
     * })
    **/
    count<T extends audit_logsCountArgs>(
      args?: Subset<T, audit_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Audit_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Audit_logsAggregateArgs>(args: Subset<T, Audit_logsAggregateArgs>): Prisma.PrismaPromise<GetAudit_logsAggregateType<T>>

    /**
     * Group by Audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends audit_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: audit_logsGroupByArgs['orderBy'] }
        : { orderBy?: audit_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, audit_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAudit_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the audit_logs model
   */
  readonly fields: audit_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for audit_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__audit_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends audit_logs$userArgs<ExtArgs> = {}>(args?: Subset<T, audit_logs$userArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the audit_logs model
   */
  interface audit_logsFieldRefs {
    readonly id: FieldRef<"audit_logs", 'String'>
    readonly user_id: FieldRef<"audit_logs", 'String'>
    readonly action: FieldRef<"audit_logs", 'String'>
    readonly object_type: FieldRef<"audit_logs", 'String'>
    readonly object_id: FieldRef<"audit_logs", 'String'>
    readonly details: FieldRef<"audit_logs", 'Json'>
    readonly created_at: FieldRef<"audit_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * audit_logs findUnique
   */
  export type audit_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs findUniqueOrThrow
   */
  export type audit_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs findFirst
   */
  export type audit_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_logs.
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_logs.
     */
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * audit_logs findFirstOrThrow
   */
  export type audit_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_logs.
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_logs.
     */
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * audit_logs findMany
   */
  export type audit_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which audit_logs to fetch.
     */
    where?: audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_logs to fetch.
     */
    orderBy?: audit_logsOrderByWithRelationInput | audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing audit_logs.
     */
    cursor?: audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_logs.
     */
    skip?: number
    distinct?: Audit_logsScalarFieldEnum | Audit_logsScalarFieldEnum[]
  }

  /**
   * audit_logs create
   */
  export type audit_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a audit_logs.
     */
    data: XOR<audit_logsCreateInput, audit_logsUncheckedCreateInput>
  }

  /**
   * audit_logs createMany
   */
  export type audit_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many audit_logs.
     */
    data: audit_logsCreateManyInput | audit_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * audit_logs createManyAndReturn
   */
  export type audit_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * The data used to create many audit_logs.
     */
    data: audit_logsCreateManyInput | audit_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * audit_logs update
   */
  export type audit_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a audit_logs.
     */
    data: XOR<audit_logsUpdateInput, audit_logsUncheckedUpdateInput>
    /**
     * Choose, which audit_logs to update.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs updateMany
   */
  export type audit_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update audit_logs.
     */
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyInput>
    /**
     * Filter which audit_logs to update
     */
    where?: audit_logsWhereInput
    /**
     * Limit how many audit_logs to update.
     */
    limit?: number
  }

  /**
   * audit_logs updateManyAndReturn
   */
  export type audit_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * The data used to update audit_logs.
     */
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyInput>
    /**
     * Filter which audit_logs to update
     */
    where?: audit_logsWhereInput
    /**
     * Limit how many audit_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * audit_logs upsert
   */
  export type audit_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the audit_logs to update in case it exists.
     */
    where: audit_logsWhereUniqueInput
    /**
     * In case the audit_logs found by the `where` argument doesn't exist, create a new audit_logs with this data.
     */
    create: XOR<audit_logsCreateInput, audit_logsUncheckedCreateInput>
    /**
     * In case the audit_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<audit_logsUpdateInput, audit_logsUncheckedUpdateInput>
  }

  /**
   * audit_logs delete
   */
  export type audit_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
    /**
     * Filter which audit_logs to delete.
     */
    where: audit_logsWhereUniqueInput
  }

  /**
   * audit_logs deleteMany
   */
  export type audit_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_logs to delete
     */
    where?: audit_logsWhereInput
    /**
     * Limit how many audit_logs to delete.
     */
    limit?: number
  }

  /**
   * audit_logs.user
   */
  export type audit_logs$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * audit_logs without action
   */
  export type audit_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_logs
     */
    select?: audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_logs
     */
    omit?: audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: audit_logsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const SessionsScalarFieldEnum: {
    sid: 'sid',
    sess: 'sess',
    expire: 'expire'
  };

  export type SessionsScalarFieldEnum = (typeof SessionsScalarFieldEnum)[keyof typeof SessionsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    senha: 'senha',
    first_name: 'first_name',
    last_name: 'last_name',
    profile_image_url: 'profile_image_url',
    role: 'role',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SystemsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    url: 'url',
    monitor_type: 'monitor_type',
    check_interval: 'check_interval',
    timeout: 'timeout',
    status: 'status',
    is_enabled: 'is_enabled',
    alert_email: 'alert_email',
    description: 'description',
    created_by: 'created_by',
    updated_by: 'updated_by',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type SystemsScalarFieldEnum = (typeof SystemsScalarFieldEnum)[keyof typeof SystemsScalarFieldEnum]


  export const Status_logsScalarFieldEnum: {
    id: 'id',
    system_id: 'system_id',
    status: 'status',
    response_time: 'response_time',
    status_code: 'status_code',
    error_message: 'error_message',
    checked_at: 'checked_at'
  };

  export type Status_logsScalarFieldEnum = (typeof Status_logsScalarFieldEnum)[keyof typeof Status_logsScalarFieldEnum]


  export const AlertsScalarFieldEnum: {
    id: 'id',
    system_id: 'system_id',
    severity: 'severity',
    status: 'status',
    title: 'title',
    message: 'message',
    acknowledged_by: 'acknowledged_by',
    acknowledged_at: 'acknowledged_at',
    resolved_at: 'resolved_at',
    created_at: 'created_at'
  };

  export type AlertsScalarFieldEnum = (typeof AlertsScalarFieldEnum)[keyof typeof AlertsScalarFieldEnum]


  export const Sla_configsScalarFieldEnum: {
    id: 'id',
    system_id: 'system_id',
    uptime_target: 'uptime_target',
    response_time_target: 'response_time_target',
    alert_on_sla_violation: 'alert_on_sla_violation',
    alert_threshold_minutes: 'alert_threshold_minutes',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sla_configsScalarFieldEnum = (typeof Sla_configsScalarFieldEnum)[keyof typeof Sla_configsScalarFieldEnum]


  export const Sla_reportsScalarFieldEnum: {
    id: 'id',
    system_id: 'system_id',
    month: 'month',
    year: 'year',
    total_checks: 'total_checks',
    successful_checks: 'successful_checks',
    uptime_percentage: 'uptime_percentage',
    average_response_time: 'average_response_time',
    total_downtime: 'total_downtime',
    created_at: 'created_at'
  };

  export type Sla_reportsScalarFieldEnum = (typeof Sla_reportsScalarFieldEnum)[keyof typeof Sla_reportsScalarFieldEnum]


  export const Audit_logsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    action: 'action',
    object_type: 'object_type',
    object_id: 'object_id',
    details: 'details',
    created_at: 'created_at'
  };

  export type Audit_logsScalarFieldEnum = (typeof Audit_logsScalarFieldEnum)[keyof typeof Audit_logsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'monitor_type'
   */
  export type Enummonitor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'monitor_type'>
    


  /**
   * Reference to a field of type 'monitor_type[]'
   */
  export type ListEnummonitor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'monitor_type[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'status'
   */
  export type EnumstatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'status'>
    


  /**
   * Reference to a field of type 'status[]'
   */
  export type ListEnumstatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'status[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'severity'
   */
  export type EnumseverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'severity'>
    


  /**
   * Reference to a field of type 'severity[]'
   */
  export type ListEnumseverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'severity[]'>
    


  /**
   * Reference to a field of type 'alert_status'
   */
  export type Enumalert_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'alert_status'>
    


  /**
   * Reference to a field of type 'alert_status[]'
   */
  export type ListEnumalert_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'alert_status[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type sessionsWhereInput = {
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    sid?: StringFilter<"sessions"> | string
    sess?: JsonFilter<"sessions">
    expire?: DateTimeFilter<"sessions"> | Date | string
  }

  export type sessionsOrderByWithRelationInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
  }

  export type sessionsWhereUniqueInput = Prisma.AtLeast<{
    sid?: string
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    sess?: JsonFilter<"sessions">
    expire?: DateTimeFilter<"sessions"> | Date | string
  }, "sid">

  export type sessionsOrderByWithAggregationInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
    _count?: sessionsCountOrderByAggregateInput
    _max?: sessionsMaxOrderByAggregateInput
    _min?: sessionsMinOrderByAggregateInput
  }

  export type sessionsScalarWhereWithAggregatesInput = {
    AND?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    OR?: sessionsScalarWhereWithAggregatesInput[]
    NOT?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    sid?: StringWithAggregatesFilter<"sessions"> | string
    sess?: JsonWithAggregatesFilter<"sessions">
    expire?: DateTimeWithAggregatesFilter<"sessions"> | Date | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    senha?: StringFilter<"users"> | string
    first_name?: StringFilter<"users"> | string
    last_name?: StringFilter<"users"> | string
    profile_image_url?: StringNullableFilter<"users"> | string | null
    role?: StringFilter<"users"> | string
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    systems_created?: SystemsListRelationFilter
    systems_updated?: SystemsListRelationFilter
    alerts_ack?: AlertsListRelationFilter
    audit_logs?: Audit_logsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_image_url?: SortOrderInput | SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    systems_created?: systemsOrderByRelationAggregateInput
    systems_updated?: systemsOrderByRelationAggregateInput
    alerts_ack?: alertsOrderByRelationAggregateInput
    audit_logs?: audit_logsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    senha?: StringFilter<"users"> | string
    first_name?: StringFilter<"users"> | string
    last_name?: StringFilter<"users"> | string
    profile_image_url?: StringNullableFilter<"users"> | string | null
    role?: StringFilter<"users"> | string
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    systems_created?: SystemsListRelationFilter
    systems_updated?: SystemsListRelationFilter
    alerts_ack?: AlertsListRelationFilter
    audit_logs?: Audit_logsListRelationFilter
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_image_url?: SortOrderInput | SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    senha?: StringWithAggregatesFilter<"users"> | string
    first_name?: StringWithAggregatesFilter<"users"> | string
    last_name?: StringWithAggregatesFilter<"users"> | string
    profile_image_url?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: StringWithAggregatesFilter<"users"> | string
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
  }

  export type systemsWhereInput = {
    AND?: systemsWhereInput | systemsWhereInput[]
    OR?: systemsWhereInput[]
    NOT?: systemsWhereInput | systemsWhereInput[]
    id?: StringFilter<"systems"> | string
    name?: StringFilter<"systems"> | string
    url?: StringFilter<"systems"> | string
    monitor_type?: Enummonitor_typeFilter<"systems"> | $Enums.monitor_type
    check_interval?: IntFilter<"systems"> | number
    timeout?: IntFilter<"systems"> | number
    status?: EnumstatusFilter<"systems"> | $Enums.status
    is_enabled?: BoolFilter<"systems"> | boolean
    alert_email?: StringFilter<"systems"> | string
    description?: StringFilter<"systems"> | string
    created_by?: StringNullableFilter<"systems"> | string | null
    updated_by?: StringNullableFilter<"systems"> | string | null
    created_at?: DateTimeFilter<"systems"> | Date | string
    updated_at?: DateTimeFilter<"systems"> | Date | string
    user_created?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    user_updated?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    status_logs?: Status_logsListRelationFilter
    alerts?: AlertsListRelationFilter
    sla_configs?: XOR<Sla_configsNullableScalarRelationFilter, sla_configsWhereInput> | null
    sla_reports?: Sla_reportsListRelationFilter
  }

  export type systemsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    monitor_type?: SortOrder
    check_interval?: SortOrder
    timeout?: SortOrder
    status?: SortOrder
    is_enabled?: SortOrder
    alert_email?: SortOrder
    description?: SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_created?: usersOrderByWithRelationInput
    user_updated?: usersOrderByWithRelationInput
    status_logs?: status_logsOrderByRelationAggregateInput
    alerts?: alertsOrderByRelationAggregateInput
    sla_configs?: sla_configsOrderByWithRelationInput
    sla_reports?: sla_reportsOrderByRelationAggregateInput
  }

  export type systemsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: systemsWhereInput | systemsWhereInput[]
    OR?: systemsWhereInput[]
    NOT?: systemsWhereInput | systemsWhereInput[]
    name?: StringFilter<"systems"> | string
    url?: StringFilter<"systems"> | string
    monitor_type?: Enummonitor_typeFilter<"systems"> | $Enums.monitor_type
    check_interval?: IntFilter<"systems"> | number
    timeout?: IntFilter<"systems"> | number
    status?: EnumstatusFilter<"systems"> | $Enums.status
    is_enabled?: BoolFilter<"systems"> | boolean
    alert_email?: StringFilter<"systems"> | string
    description?: StringFilter<"systems"> | string
    created_by?: StringNullableFilter<"systems"> | string | null
    updated_by?: StringNullableFilter<"systems"> | string | null
    created_at?: DateTimeFilter<"systems"> | Date | string
    updated_at?: DateTimeFilter<"systems"> | Date | string
    user_created?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    user_updated?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    status_logs?: Status_logsListRelationFilter
    alerts?: AlertsListRelationFilter
    sla_configs?: XOR<Sla_configsNullableScalarRelationFilter, sla_configsWhereInput> | null
    sla_reports?: Sla_reportsListRelationFilter
  }, "id">

  export type systemsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    monitor_type?: SortOrder
    check_interval?: SortOrder
    timeout?: SortOrder
    status?: SortOrder
    is_enabled?: SortOrder
    alert_email?: SortOrder
    description?: SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: systemsCountOrderByAggregateInput
    _avg?: systemsAvgOrderByAggregateInput
    _max?: systemsMaxOrderByAggregateInput
    _min?: systemsMinOrderByAggregateInput
    _sum?: systemsSumOrderByAggregateInput
  }

  export type systemsScalarWhereWithAggregatesInput = {
    AND?: systemsScalarWhereWithAggregatesInput | systemsScalarWhereWithAggregatesInput[]
    OR?: systemsScalarWhereWithAggregatesInput[]
    NOT?: systemsScalarWhereWithAggregatesInput | systemsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"systems"> | string
    name?: StringWithAggregatesFilter<"systems"> | string
    url?: StringWithAggregatesFilter<"systems"> | string
    monitor_type?: Enummonitor_typeWithAggregatesFilter<"systems"> | $Enums.monitor_type
    check_interval?: IntWithAggregatesFilter<"systems"> | number
    timeout?: IntWithAggregatesFilter<"systems"> | number
    status?: EnumstatusWithAggregatesFilter<"systems"> | $Enums.status
    is_enabled?: BoolWithAggregatesFilter<"systems"> | boolean
    alert_email?: StringWithAggregatesFilter<"systems"> | string
    description?: StringWithAggregatesFilter<"systems"> | string
    created_by?: StringNullableWithAggregatesFilter<"systems"> | string | null
    updated_by?: StringNullableWithAggregatesFilter<"systems"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"systems"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"systems"> | Date | string
  }

  export type status_logsWhereInput = {
    AND?: status_logsWhereInput | status_logsWhereInput[]
    OR?: status_logsWhereInput[]
    NOT?: status_logsWhereInput | status_logsWhereInput[]
    id?: StringFilter<"status_logs"> | string
    system_id?: StringFilter<"status_logs"> | string
    status?: EnumstatusFilter<"status_logs"> | $Enums.status
    response_time?: IntNullableFilter<"status_logs"> | number | null
    status_code?: IntNullableFilter<"status_logs"> | number | null
    error_message?: StringNullableFilter<"status_logs"> | string | null
    checked_at?: DateTimeFilter<"status_logs"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
  }

  export type status_logsOrderByWithRelationInput = {
    id?: SortOrder
    system_id?: SortOrder
    status?: SortOrder
    response_time?: SortOrderInput | SortOrder
    status_code?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    checked_at?: SortOrder
    system?: systemsOrderByWithRelationInput
  }

  export type status_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: status_logsWhereInput | status_logsWhereInput[]
    OR?: status_logsWhereInput[]
    NOT?: status_logsWhereInput | status_logsWhereInput[]
    system_id?: StringFilter<"status_logs"> | string
    status?: EnumstatusFilter<"status_logs"> | $Enums.status
    response_time?: IntNullableFilter<"status_logs"> | number | null
    status_code?: IntNullableFilter<"status_logs"> | number | null
    error_message?: StringNullableFilter<"status_logs"> | string | null
    checked_at?: DateTimeFilter<"status_logs"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
  }, "id">

  export type status_logsOrderByWithAggregationInput = {
    id?: SortOrder
    system_id?: SortOrder
    status?: SortOrder
    response_time?: SortOrderInput | SortOrder
    status_code?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    checked_at?: SortOrder
    _count?: status_logsCountOrderByAggregateInput
    _avg?: status_logsAvgOrderByAggregateInput
    _max?: status_logsMaxOrderByAggregateInput
    _min?: status_logsMinOrderByAggregateInput
    _sum?: status_logsSumOrderByAggregateInput
  }

  export type status_logsScalarWhereWithAggregatesInput = {
    AND?: status_logsScalarWhereWithAggregatesInput | status_logsScalarWhereWithAggregatesInput[]
    OR?: status_logsScalarWhereWithAggregatesInput[]
    NOT?: status_logsScalarWhereWithAggregatesInput | status_logsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"status_logs"> | string
    system_id?: StringWithAggregatesFilter<"status_logs"> | string
    status?: EnumstatusWithAggregatesFilter<"status_logs"> | $Enums.status
    response_time?: IntNullableWithAggregatesFilter<"status_logs"> | number | null
    status_code?: IntNullableWithAggregatesFilter<"status_logs"> | number | null
    error_message?: StringNullableWithAggregatesFilter<"status_logs"> | string | null
    checked_at?: DateTimeWithAggregatesFilter<"status_logs"> | Date | string
  }

  export type alertsWhereInput = {
    AND?: alertsWhereInput | alertsWhereInput[]
    OR?: alertsWhereInput[]
    NOT?: alertsWhereInput | alertsWhereInput[]
    id?: StringFilter<"alerts"> | string
    system_id?: StringFilter<"alerts"> | string
    severity?: EnumseverityFilter<"alerts"> | $Enums.severity
    status?: Enumalert_statusFilter<"alerts"> | $Enums.alert_status
    title?: StringFilter<"alerts"> | string
    message?: StringFilter<"alerts"> | string
    acknowledged_by?: StringNullableFilter<"alerts"> | string | null
    acknowledged_at?: DateTimeNullableFilter<"alerts"> | Date | string | null
    resolved_at?: DateTimeNullableFilter<"alerts"> | Date | string | null
    created_at?: DateTimeFilter<"alerts"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
    ack_user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type alertsOrderByWithRelationInput = {
    id?: SortOrder
    system_id?: SortOrder
    severity?: SortOrder
    status?: SortOrder
    title?: SortOrder
    message?: SortOrder
    acknowledged_by?: SortOrderInput | SortOrder
    acknowledged_at?: SortOrderInput | SortOrder
    resolved_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    system?: systemsOrderByWithRelationInput
    ack_user?: usersOrderByWithRelationInput
  }

  export type alertsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: alertsWhereInput | alertsWhereInput[]
    OR?: alertsWhereInput[]
    NOT?: alertsWhereInput | alertsWhereInput[]
    system_id?: StringFilter<"alerts"> | string
    severity?: EnumseverityFilter<"alerts"> | $Enums.severity
    status?: Enumalert_statusFilter<"alerts"> | $Enums.alert_status
    title?: StringFilter<"alerts"> | string
    message?: StringFilter<"alerts"> | string
    acknowledged_by?: StringNullableFilter<"alerts"> | string | null
    acknowledged_at?: DateTimeNullableFilter<"alerts"> | Date | string | null
    resolved_at?: DateTimeNullableFilter<"alerts"> | Date | string | null
    created_at?: DateTimeFilter<"alerts"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
    ack_user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type alertsOrderByWithAggregationInput = {
    id?: SortOrder
    system_id?: SortOrder
    severity?: SortOrder
    status?: SortOrder
    title?: SortOrder
    message?: SortOrder
    acknowledged_by?: SortOrderInput | SortOrder
    acknowledged_at?: SortOrderInput | SortOrder
    resolved_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: alertsCountOrderByAggregateInput
    _max?: alertsMaxOrderByAggregateInput
    _min?: alertsMinOrderByAggregateInput
  }

  export type alertsScalarWhereWithAggregatesInput = {
    AND?: alertsScalarWhereWithAggregatesInput | alertsScalarWhereWithAggregatesInput[]
    OR?: alertsScalarWhereWithAggregatesInput[]
    NOT?: alertsScalarWhereWithAggregatesInput | alertsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"alerts"> | string
    system_id?: StringWithAggregatesFilter<"alerts"> | string
    severity?: EnumseverityWithAggregatesFilter<"alerts"> | $Enums.severity
    status?: Enumalert_statusWithAggregatesFilter<"alerts"> | $Enums.alert_status
    title?: StringWithAggregatesFilter<"alerts"> | string
    message?: StringWithAggregatesFilter<"alerts"> | string
    acknowledged_by?: StringNullableWithAggregatesFilter<"alerts"> | string | null
    acknowledged_at?: DateTimeNullableWithAggregatesFilter<"alerts"> | Date | string | null
    resolved_at?: DateTimeNullableWithAggregatesFilter<"alerts"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"alerts"> | Date | string
  }

  export type sla_configsWhereInput = {
    AND?: sla_configsWhereInput | sla_configsWhereInput[]
    OR?: sla_configsWhereInput[]
    NOT?: sla_configsWhereInput | sla_configsWhereInput[]
    id?: StringFilter<"sla_configs"> | string
    system_id?: StringFilter<"sla_configs"> | string
    uptime_target?: FloatFilter<"sla_configs"> | number
    response_time_target?: IntFilter<"sla_configs"> | number
    alert_on_sla_violation?: BoolFilter<"sla_configs"> | boolean
    alert_threshold_minutes?: IntFilter<"sla_configs"> | number
    created_at?: DateTimeFilter<"sla_configs"> | Date | string
    updated_at?: DateTimeFilter<"sla_configs"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
  }

  export type sla_configsOrderByWithRelationInput = {
    id?: SortOrder
    system_id?: SortOrder
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_on_sla_violation?: SortOrder
    alert_threshold_minutes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    system?: systemsOrderByWithRelationInput
  }

  export type sla_configsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    system_id?: string
    AND?: sla_configsWhereInput | sla_configsWhereInput[]
    OR?: sla_configsWhereInput[]
    NOT?: sla_configsWhereInput | sla_configsWhereInput[]
    uptime_target?: FloatFilter<"sla_configs"> | number
    response_time_target?: IntFilter<"sla_configs"> | number
    alert_on_sla_violation?: BoolFilter<"sla_configs"> | boolean
    alert_threshold_minutes?: IntFilter<"sla_configs"> | number
    created_at?: DateTimeFilter<"sla_configs"> | Date | string
    updated_at?: DateTimeFilter<"sla_configs"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
  }, "id" | "system_id">

  export type sla_configsOrderByWithAggregationInput = {
    id?: SortOrder
    system_id?: SortOrder
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_on_sla_violation?: SortOrder
    alert_threshold_minutes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: sla_configsCountOrderByAggregateInput
    _avg?: sla_configsAvgOrderByAggregateInput
    _max?: sla_configsMaxOrderByAggregateInput
    _min?: sla_configsMinOrderByAggregateInput
    _sum?: sla_configsSumOrderByAggregateInput
  }

  export type sla_configsScalarWhereWithAggregatesInput = {
    AND?: sla_configsScalarWhereWithAggregatesInput | sla_configsScalarWhereWithAggregatesInput[]
    OR?: sla_configsScalarWhereWithAggregatesInput[]
    NOT?: sla_configsScalarWhereWithAggregatesInput | sla_configsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"sla_configs"> | string
    system_id?: StringWithAggregatesFilter<"sla_configs"> | string
    uptime_target?: FloatWithAggregatesFilter<"sla_configs"> | number
    response_time_target?: IntWithAggregatesFilter<"sla_configs"> | number
    alert_on_sla_violation?: BoolWithAggregatesFilter<"sla_configs"> | boolean
    alert_threshold_minutes?: IntWithAggregatesFilter<"sla_configs"> | number
    created_at?: DateTimeWithAggregatesFilter<"sla_configs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"sla_configs"> | Date | string
  }

  export type sla_reportsWhereInput = {
    AND?: sla_reportsWhereInput | sla_reportsWhereInput[]
    OR?: sla_reportsWhereInput[]
    NOT?: sla_reportsWhereInput | sla_reportsWhereInput[]
    id?: StringFilter<"sla_reports"> | string
    system_id?: StringFilter<"sla_reports"> | string
    month?: IntFilter<"sla_reports"> | number
    year?: IntFilter<"sla_reports"> | number
    total_checks?: IntFilter<"sla_reports"> | number
    successful_checks?: IntFilter<"sla_reports"> | number
    uptime_percentage?: FloatFilter<"sla_reports"> | number
    average_response_time?: FloatNullableFilter<"sla_reports"> | number | null
    total_downtime?: IntFilter<"sla_reports"> | number
    created_at?: DateTimeFilter<"sla_reports"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
  }

  export type sla_reportsOrderByWithRelationInput = {
    id?: SortOrder
    system_id?: SortOrder
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrderInput | SortOrder
    total_downtime?: SortOrder
    created_at?: SortOrder
    system?: systemsOrderByWithRelationInput
  }

  export type sla_reportsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sla_reportsWhereInput | sla_reportsWhereInput[]
    OR?: sla_reportsWhereInput[]
    NOT?: sla_reportsWhereInput | sla_reportsWhereInput[]
    system_id?: StringFilter<"sla_reports"> | string
    month?: IntFilter<"sla_reports"> | number
    year?: IntFilter<"sla_reports"> | number
    total_checks?: IntFilter<"sla_reports"> | number
    successful_checks?: IntFilter<"sla_reports"> | number
    uptime_percentage?: FloatFilter<"sla_reports"> | number
    average_response_time?: FloatNullableFilter<"sla_reports"> | number | null
    total_downtime?: IntFilter<"sla_reports"> | number
    created_at?: DateTimeFilter<"sla_reports"> | Date | string
    system?: XOR<SystemsScalarRelationFilter, systemsWhereInput>
  }, "id">

  export type sla_reportsOrderByWithAggregationInput = {
    id?: SortOrder
    system_id?: SortOrder
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrderInput | SortOrder
    total_downtime?: SortOrder
    created_at?: SortOrder
    _count?: sla_reportsCountOrderByAggregateInput
    _avg?: sla_reportsAvgOrderByAggregateInput
    _max?: sla_reportsMaxOrderByAggregateInput
    _min?: sla_reportsMinOrderByAggregateInput
    _sum?: sla_reportsSumOrderByAggregateInput
  }

  export type sla_reportsScalarWhereWithAggregatesInput = {
    AND?: sla_reportsScalarWhereWithAggregatesInput | sla_reportsScalarWhereWithAggregatesInput[]
    OR?: sla_reportsScalarWhereWithAggregatesInput[]
    NOT?: sla_reportsScalarWhereWithAggregatesInput | sla_reportsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"sla_reports"> | string
    system_id?: StringWithAggregatesFilter<"sla_reports"> | string
    month?: IntWithAggregatesFilter<"sla_reports"> | number
    year?: IntWithAggregatesFilter<"sla_reports"> | number
    total_checks?: IntWithAggregatesFilter<"sla_reports"> | number
    successful_checks?: IntWithAggregatesFilter<"sla_reports"> | number
    uptime_percentage?: FloatWithAggregatesFilter<"sla_reports"> | number
    average_response_time?: FloatNullableWithAggregatesFilter<"sla_reports"> | number | null
    total_downtime?: IntWithAggregatesFilter<"sla_reports"> | number
    created_at?: DateTimeWithAggregatesFilter<"sla_reports"> | Date | string
  }

  export type audit_logsWhereInput = {
    AND?: audit_logsWhereInput | audit_logsWhereInput[]
    OR?: audit_logsWhereInput[]
    NOT?: audit_logsWhereInput | audit_logsWhereInput[]
    id?: StringFilter<"audit_logs"> | string
    user_id?: StringNullableFilter<"audit_logs"> | string | null
    action?: StringFilter<"audit_logs"> | string
    object_type?: StringNullableFilter<"audit_logs"> | string | null
    object_id?: StringNullableFilter<"audit_logs"> | string | null
    details?: JsonNullableFilter<"audit_logs">
    created_at?: DateTimeFilter<"audit_logs"> | Date | string
    user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type audit_logsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    action?: SortOrder
    object_type?: SortOrderInput | SortOrder
    object_id?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    created_at?: SortOrder
    user?: usersOrderByWithRelationInput
  }

  export type audit_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: audit_logsWhereInput | audit_logsWhereInput[]
    OR?: audit_logsWhereInput[]
    NOT?: audit_logsWhereInput | audit_logsWhereInput[]
    user_id?: StringNullableFilter<"audit_logs"> | string | null
    action?: StringFilter<"audit_logs"> | string
    object_type?: StringNullableFilter<"audit_logs"> | string | null
    object_id?: StringNullableFilter<"audit_logs"> | string | null
    details?: JsonNullableFilter<"audit_logs">
    created_at?: DateTimeFilter<"audit_logs"> | Date | string
    user?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type audit_logsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    action?: SortOrder
    object_type?: SortOrderInput | SortOrder
    object_id?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: audit_logsCountOrderByAggregateInput
    _max?: audit_logsMaxOrderByAggregateInput
    _min?: audit_logsMinOrderByAggregateInput
  }

  export type audit_logsScalarWhereWithAggregatesInput = {
    AND?: audit_logsScalarWhereWithAggregatesInput | audit_logsScalarWhereWithAggregatesInput[]
    OR?: audit_logsScalarWhereWithAggregatesInput[]
    NOT?: audit_logsScalarWhereWithAggregatesInput | audit_logsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"audit_logs"> | string
    user_id?: StringNullableWithAggregatesFilter<"audit_logs"> | string | null
    action?: StringWithAggregatesFilter<"audit_logs"> | string
    object_type?: StringNullableWithAggregatesFilter<"audit_logs"> | string | null
    object_id?: StringNullableWithAggregatesFilter<"audit_logs"> | string | null
    details?: JsonNullableWithAggregatesFilter<"audit_logs">
    created_at?: DateTimeWithAggregatesFilter<"audit_logs"> | Date | string
  }

  export type sessionsCreateInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type sessionsUncheckedCreateInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type sessionsUpdateInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUncheckedUpdateInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsCreateManyInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type sessionsUpdateManyMutationInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUncheckedUpdateManyInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsCreateNestedManyWithoutUser_createdInput
    systems_updated?: systemsCreateNestedManyWithoutUser_updatedInput
    alerts_ack?: alertsCreateNestedManyWithoutAck_userInput
    audit_logs?: audit_logsCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsUncheckedCreateNestedManyWithoutUser_createdInput
    systems_updated?: systemsUncheckedCreateNestedManyWithoutUser_updatedInput
    alerts_ack?: alertsUncheckedCreateNestedManyWithoutAck_userInput
    audit_logs?: audit_logsUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUpdateManyWithoutUser_createdNestedInput
    systems_updated?: systemsUpdateManyWithoutUser_updatedNestedInput
    alerts_ack?: alertsUpdateManyWithoutAck_userNestedInput
    audit_logs?: audit_logsUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUncheckedUpdateManyWithoutUser_createdNestedInput
    systems_updated?: systemsUncheckedUpdateManyWithoutUser_updatedNestedInput
    alerts_ack?: alertsUncheckedUpdateManyWithoutAck_userNestedInput
    audit_logs?: audit_logsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type systemsCreateInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_created?: usersCreateNestedOneWithoutSystems_createdInput
    user_updated?: usersCreateNestedOneWithoutSystems_updatedInput
    status_logs?: status_logsCreateNestedManyWithoutSystemInput
    alerts?: alertsCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsCreateNestedManyWithoutSystemInput
  }

  export type systemsUncheckedCreateInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    status_logs?: status_logsUncheckedCreateNestedManyWithoutSystemInput
    alerts?: alertsUncheckedCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsUncheckedCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsUncheckedCreateNestedManyWithoutSystemInput
  }

  export type systemsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_created?: usersUpdateOneWithoutSystems_createdNestedInput
    user_updated?: usersUpdateOneWithoutSystems_updatedNestedInput
    status_logs?: status_logsUpdateManyWithoutSystemNestedInput
    alerts?: alertsUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    status_logs?: status_logsUncheckedUpdateManyWithoutSystemNestedInput
    alerts?: alertsUncheckedUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUncheckedUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type systemsCreateManyInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type systemsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type systemsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type status_logsCreateInput = {
    id?: string
    status: $Enums.status
    response_time?: number | null
    status_code?: number | null
    error_message?: string | null
    checked_at?: Date | string
    system: systemsCreateNestedOneWithoutStatus_logsInput
  }

  export type status_logsUncheckedCreateInput = {
    id?: string
    system_id: string
    status: $Enums.status
    response_time?: number | null
    status_code?: number | null
    error_message?: string | null
    checked_at?: Date | string
  }

  export type status_logsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: systemsUpdateOneRequiredWithoutStatus_logsNestedInput
  }

  export type status_logsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type status_logsCreateManyInput = {
    id?: string
    system_id: string
    status: $Enums.status
    response_time?: number | null
    status_code?: number | null
    error_message?: string | null
    checked_at?: Date | string
  }

  export type status_logsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type status_logsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsCreateInput = {
    id?: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
    system: systemsCreateNestedOneWithoutAlertsInput
    ack_user?: usersCreateNestedOneWithoutAlerts_ackInput
  }

  export type alertsUncheckedCreateInput = {
    id?: string
    system_id: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_by?: string | null
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
  }

  export type alertsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: systemsUpdateOneRequiredWithoutAlertsNestedInput
    ack_user?: usersUpdateOneWithoutAlerts_ackNestedInput
  }

  export type alertsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_by?: NullableStringFieldUpdateOperationsInput | string | null
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsCreateManyInput = {
    id?: string
    system_id: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_by?: string | null
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
  }

  export type alertsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_by?: NullableStringFieldUpdateOperationsInput | string | null
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_configsCreateInput = {
    id?: string
    uptime_target?: number
    response_time_target?: number
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: number
    created_at?: Date | string
    updated_at?: Date | string
    system: systemsCreateNestedOneWithoutSla_configsInput
  }

  export type sla_configsUncheckedCreateInput = {
    id?: string
    system_id: string
    uptime_target?: number
    response_time_target?: number
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type sla_configsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uptime_target?: FloatFieldUpdateOperationsInput | number
    response_time_target?: IntFieldUpdateOperationsInput | number
    alert_on_sla_violation?: BoolFieldUpdateOperationsInput | boolean
    alert_threshold_minutes?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: systemsUpdateOneRequiredWithoutSla_configsNestedInput
  }

  export type sla_configsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    uptime_target?: FloatFieldUpdateOperationsInput | number
    response_time_target?: IntFieldUpdateOperationsInput | number
    alert_on_sla_violation?: BoolFieldUpdateOperationsInput | boolean
    alert_threshold_minutes?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_configsCreateManyInput = {
    id?: string
    system_id: string
    uptime_target?: number
    response_time_target?: number
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type sla_configsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    uptime_target?: FloatFieldUpdateOperationsInput | number
    response_time_target?: IntFieldUpdateOperationsInput | number
    alert_on_sla_violation?: BoolFieldUpdateOperationsInput | boolean
    alert_threshold_minutes?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_configsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    uptime_target?: FloatFieldUpdateOperationsInput | number
    response_time_target?: IntFieldUpdateOperationsInput | number
    alert_on_sla_violation?: BoolFieldUpdateOperationsInput | boolean
    alert_threshold_minutes?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsCreateInput = {
    id?: string
    month: number
    year: number
    total_checks?: number
    successful_checks?: number
    uptime_percentage?: number
    average_response_time?: number | null
    total_downtime?: number
    created_at?: Date | string
    system: systemsCreateNestedOneWithoutSla_reportsInput
  }

  export type sla_reportsUncheckedCreateInput = {
    id?: string
    system_id: string
    month: number
    year: number
    total_checks?: number
    successful_checks?: number
    uptime_percentage?: number
    average_response_time?: number | null
    total_downtime?: number
    created_at?: Date | string
  }

  export type sla_reportsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: systemsUpdateOneRequiredWithoutSla_reportsNestedInput
  }

  export type sla_reportsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsCreateManyInput = {
    id?: string
    system_id: string
    month: number
    year: number
    total_checks?: number
    successful_checks?: number
    uptime_percentage?: number
    average_response_time?: number | null
    total_downtime?: number
    created_at?: Date | string
  }

  export type sla_reportsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type audit_logsCreateInput = {
    id?: string
    action: string
    object_type?: string | null
    object_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    user?: usersCreateNestedOneWithoutAudit_logsInput
  }

  export type audit_logsUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    action: string
    object_type?: string | null
    object_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type audit_logsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneWithoutAudit_logsNestedInput
  }

  export type audit_logsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type audit_logsCreateManyInput = {
    id?: string
    user_id?: string | null
    action: string
    object_type?: string | null
    object_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type audit_logsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type audit_logsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type sessionsCountOrderByAggregateInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
  }

  export type sessionsMaxOrderByAggregateInput = {
    sid?: SortOrder
    expire?: SortOrder
  }

  export type sessionsMinOrderByAggregateInput = {
    sid?: SortOrder
    expire?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SystemsListRelationFilter = {
    every?: systemsWhereInput
    some?: systemsWhereInput
    none?: systemsWhereInput
  }

  export type AlertsListRelationFilter = {
    every?: alertsWhereInput
    some?: alertsWhereInput
    none?: alertsWhereInput
  }

  export type Audit_logsListRelationFilter = {
    every?: audit_logsWhereInput
    some?: audit_logsWhereInput
    none?: audit_logsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type systemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type alertsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type audit_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_image_url?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_image_url?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_image_url?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Enummonitor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.monitor_type | Enummonitor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnummonitor_typeFilter<$PrismaModel> | $Enums.monitor_type
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumstatusFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumstatusFilter<$PrismaModel> | $Enums.status
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type Status_logsListRelationFilter = {
    every?: status_logsWhereInput
    some?: status_logsWhereInput
    none?: status_logsWhereInput
  }

  export type Sla_configsNullableScalarRelationFilter = {
    is?: sla_configsWhereInput | null
    isNot?: sla_configsWhereInput | null
  }

  export type Sla_reportsListRelationFilter = {
    every?: sla_reportsWhereInput
    some?: sla_reportsWhereInput
    none?: sla_reportsWhereInput
  }

  export type status_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sla_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type systemsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    monitor_type?: SortOrder
    check_interval?: SortOrder
    timeout?: SortOrder
    status?: SortOrder
    is_enabled?: SortOrder
    alert_email?: SortOrder
    description?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type systemsAvgOrderByAggregateInput = {
    check_interval?: SortOrder
    timeout?: SortOrder
  }

  export type systemsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    monitor_type?: SortOrder
    check_interval?: SortOrder
    timeout?: SortOrder
    status?: SortOrder
    is_enabled?: SortOrder
    alert_email?: SortOrder
    description?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type systemsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    monitor_type?: SortOrder
    check_interval?: SortOrder
    timeout?: SortOrder
    status?: SortOrder
    is_enabled?: SortOrder
    alert_email?: SortOrder
    description?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type systemsSumOrderByAggregateInput = {
    check_interval?: SortOrder
    timeout?: SortOrder
  }

  export type Enummonitor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.monitor_type | Enummonitor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnummonitor_typeWithAggregatesFilter<$PrismaModel> | $Enums.monitor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnummonitor_typeFilter<$PrismaModel>
    _max?: NestedEnummonitor_typeFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumstatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumstatusWithAggregatesFilter<$PrismaModel> | $Enums.status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumstatusFilter<$PrismaModel>
    _max?: NestedEnumstatusFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type SystemsScalarRelationFilter = {
    is?: systemsWhereInput
    isNot?: systemsWhereInput
  }

  export type status_logsCountOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    status?: SortOrder
    response_time?: SortOrder
    status_code?: SortOrder
    error_message?: SortOrder
    checked_at?: SortOrder
  }

  export type status_logsAvgOrderByAggregateInput = {
    response_time?: SortOrder
    status_code?: SortOrder
  }

  export type status_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    status?: SortOrder
    response_time?: SortOrder
    status_code?: SortOrder
    error_message?: SortOrder
    checked_at?: SortOrder
  }

  export type status_logsMinOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    status?: SortOrder
    response_time?: SortOrder
    status_code?: SortOrder
    error_message?: SortOrder
    checked_at?: SortOrder
  }

  export type status_logsSumOrderByAggregateInput = {
    response_time?: SortOrder
    status_code?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumseverityFilter<$PrismaModel = never> = {
    equals?: $Enums.severity | EnumseverityFieldRefInput<$PrismaModel>
    in?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    not?: NestedEnumseverityFilter<$PrismaModel> | $Enums.severity
  }

  export type Enumalert_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_status | Enumalert_statusFieldRefInput<$PrismaModel>
    in?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_statusFilter<$PrismaModel> | $Enums.alert_status
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type alertsCountOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    severity?: SortOrder
    status?: SortOrder
    title?: SortOrder
    message?: SortOrder
    acknowledged_by?: SortOrder
    acknowledged_at?: SortOrder
    resolved_at?: SortOrder
    created_at?: SortOrder
  }

  export type alertsMaxOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    severity?: SortOrder
    status?: SortOrder
    title?: SortOrder
    message?: SortOrder
    acknowledged_by?: SortOrder
    acknowledged_at?: SortOrder
    resolved_at?: SortOrder
    created_at?: SortOrder
  }

  export type alertsMinOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    severity?: SortOrder
    status?: SortOrder
    title?: SortOrder
    message?: SortOrder
    acknowledged_by?: SortOrder
    acknowledged_at?: SortOrder
    resolved_at?: SortOrder
    created_at?: SortOrder
  }

  export type EnumseverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.severity | EnumseverityFieldRefInput<$PrismaModel>
    in?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    not?: NestedEnumseverityWithAggregatesFilter<$PrismaModel> | $Enums.severity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumseverityFilter<$PrismaModel>
    _max?: NestedEnumseverityFilter<$PrismaModel>
  }

  export type Enumalert_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_status | Enumalert_statusFieldRefInput<$PrismaModel>
    in?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_statusWithAggregatesFilter<$PrismaModel> | $Enums.alert_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumalert_statusFilter<$PrismaModel>
    _max?: NestedEnumalert_statusFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type sla_configsCountOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_on_sla_violation?: SortOrder
    alert_threshold_minutes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sla_configsAvgOrderByAggregateInput = {
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_threshold_minutes?: SortOrder
  }

  export type sla_configsMaxOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_on_sla_violation?: SortOrder
    alert_threshold_minutes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sla_configsMinOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_on_sla_violation?: SortOrder
    alert_threshold_minutes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sla_configsSumOrderByAggregateInput = {
    uptime_target?: SortOrder
    response_time_target?: SortOrder
    alert_threshold_minutes?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type sla_reportsCountOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrder
    total_downtime?: SortOrder
    created_at?: SortOrder
  }

  export type sla_reportsAvgOrderByAggregateInput = {
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrder
    total_downtime?: SortOrder
  }

  export type sla_reportsMaxOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrder
    total_downtime?: SortOrder
    created_at?: SortOrder
  }

  export type sla_reportsMinOrderByAggregateInput = {
    id?: SortOrder
    system_id?: SortOrder
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrder
    total_downtime?: SortOrder
    created_at?: SortOrder
  }

  export type sla_reportsSumOrderByAggregateInput = {
    month?: SortOrder
    year?: SortOrder
    total_checks?: SortOrder
    successful_checks?: SortOrder
    uptime_percentage?: SortOrder
    average_response_time?: SortOrder
    total_downtime?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type audit_logsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    object_type?: SortOrder
    object_id?: SortOrder
    details?: SortOrder
    created_at?: SortOrder
  }

  export type audit_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    object_type?: SortOrder
    object_id?: SortOrder
    created_at?: SortOrder
  }

  export type audit_logsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    object_type?: SortOrder
    object_id?: SortOrder
    created_at?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type systemsCreateNestedManyWithoutUser_createdInput = {
    create?: XOR<systemsCreateWithoutUser_createdInput, systemsUncheckedCreateWithoutUser_createdInput> | systemsCreateWithoutUser_createdInput[] | systemsUncheckedCreateWithoutUser_createdInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_createdInput | systemsCreateOrConnectWithoutUser_createdInput[]
    createMany?: systemsCreateManyUser_createdInputEnvelope
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
  }

  export type systemsCreateNestedManyWithoutUser_updatedInput = {
    create?: XOR<systemsCreateWithoutUser_updatedInput, systemsUncheckedCreateWithoutUser_updatedInput> | systemsCreateWithoutUser_updatedInput[] | systemsUncheckedCreateWithoutUser_updatedInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_updatedInput | systemsCreateOrConnectWithoutUser_updatedInput[]
    createMany?: systemsCreateManyUser_updatedInputEnvelope
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
  }

  export type alertsCreateNestedManyWithoutAck_userInput = {
    create?: XOR<alertsCreateWithoutAck_userInput, alertsUncheckedCreateWithoutAck_userInput> | alertsCreateWithoutAck_userInput[] | alertsUncheckedCreateWithoutAck_userInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutAck_userInput | alertsCreateOrConnectWithoutAck_userInput[]
    createMany?: alertsCreateManyAck_userInputEnvelope
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
  }

  export type audit_logsCreateNestedManyWithoutUserInput = {
    create?: XOR<audit_logsCreateWithoutUserInput, audit_logsUncheckedCreateWithoutUserInput> | audit_logsCreateWithoutUserInput[] | audit_logsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutUserInput | audit_logsCreateOrConnectWithoutUserInput[]
    createMany?: audit_logsCreateManyUserInputEnvelope
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
  }

  export type systemsUncheckedCreateNestedManyWithoutUser_createdInput = {
    create?: XOR<systemsCreateWithoutUser_createdInput, systemsUncheckedCreateWithoutUser_createdInput> | systemsCreateWithoutUser_createdInput[] | systemsUncheckedCreateWithoutUser_createdInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_createdInput | systemsCreateOrConnectWithoutUser_createdInput[]
    createMany?: systemsCreateManyUser_createdInputEnvelope
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
  }

  export type systemsUncheckedCreateNestedManyWithoutUser_updatedInput = {
    create?: XOR<systemsCreateWithoutUser_updatedInput, systemsUncheckedCreateWithoutUser_updatedInput> | systemsCreateWithoutUser_updatedInput[] | systemsUncheckedCreateWithoutUser_updatedInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_updatedInput | systemsCreateOrConnectWithoutUser_updatedInput[]
    createMany?: systemsCreateManyUser_updatedInputEnvelope
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
  }

  export type alertsUncheckedCreateNestedManyWithoutAck_userInput = {
    create?: XOR<alertsCreateWithoutAck_userInput, alertsUncheckedCreateWithoutAck_userInput> | alertsCreateWithoutAck_userInput[] | alertsUncheckedCreateWithoutAck_userInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutAck_userInput | alertsCreateOrConnectWithoutAck_userInput[]
    createMany?: alertsCreateManyAck_userInputEnvelope
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
  }

  export type audit_logsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<audit_logsCreateWithoutUserInput, audit_logsUncheckedCreateWithoutUserInput> | audit_logsCreateWithoutUserInput[] | audit_logsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutUserInput | audit_logsCreateOrConnectWithoutUserInput[]
    createMany?: audit_logsCreateManyUserInputEnvelope
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type systemsUpdateManyWithoutUser_createdNestedInput = {
    create?: XOR<systemsCreateWithoutUser_createdInput, systemsUncheckedCreateWithoutUser_createdInput> | systemsCreateWithoutUser_createdInput[] | systemsUncheckedCreateWithoutUser_createdInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_createdInput | systemsCreateOrConnectWithoutUser_createdInput[]
    upsert?: systemsUpsertWithWhereUniqueWithoutUser_createdInput | systemsUpsertWithWhereUniqueWithoutUser_createdInput[]
    createMany?: systemsCreateManyUser_createdInputEnvelope
    set?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    disconnect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    delete?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    update?: systemsUpdateWithWhereUniqueWithoutUser_createdInput | systemsUpdateWithWhereUniqueWithoutUser_createdInput[]
    updateMany?: systemsUpdateManyWithWhereWithoutUser_createdInput | systemsUpdateManyWithWhereWithoutUser_createdInput[]
    deleteMany?: systemsScalarWhereInput | systemsScalarWhereInput[]
  }

  export type systemsUpdateManyWithoutUser_updatedNestedInput = {
    create?: XOR<systemsCreateWithoutUser_updatedInput, systemsUncheckedCreateWithoutUser_updatedInput> | systemsCreateWithoutUser_updatedInput[] | systemsUncheckedCreateWithoutUser_updatedInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_updatedInput | systemsCreateOrConnectWithoutUser_updatedInput[]
    upsert?: systemsUpsertWithWhereUniqueWithoutUser_updatedInput | systemsUpsertWithWhereUniqueWithoutUser_updatedInput[]
    createMany?: systemsCreateManyUser_updatedInputEnvelope
    set?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    disconnect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    delete?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    update?: systemsUpdateWithWhereUniqueWithoutUser_updatedInput | systemsUpdateWithWhereUniqueWithoutUser_updatedInput[]
    updateMany?: systemsUpdateManyWithWhereWithoutUser_updatedInput | systemsUpdateManyWithWhereWithoutUser_updatedInput[]
    deleteMany?: systemsScalarWhereInput | systemsScalarWhereInput[]
  }

  export type alertsUpdateManyWithoutAck_userNestedInput = {
    create?: XOR<alertsCreateWithoutAck_userInput, alertsUncheckedCreateWithoutAck_userInput> | alertsCreateWithoutAck_userInput[] | alertsUncheckedCreateWithoutAck_userInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutAck_userInput | alertsCreateOrConnectWithoutAck_userInput[]
    upsert?: alertsUpsertWithWhereUniqueWithoutAck_userInput | alertsUpsertWithWhereUniqueWithoutAck_userInput[]
    createMany?: alertsCreateManyAck_userInputEnvelope
    set?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    disconnect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    delete?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    update?: alertsUpdateWithWhereUniqueWithoutAck_userInput | alertsUpdateWithWhereUniqueWithoutAck_userInput[]
    updateMany?: alertsUpdateManyWithWhereWithoutAck_userInput | alertsUpdateManyWithWhereWithoutAck_userInput[]
    deleteMany?: alertsScalarWhereInput | alertsScalarWhereInput[]
  }

  export type audit_logsUpdateManyWithoutUserNestedInput = {
    create?: XOR<audit_logsCreateWithoutUserInput, audit_logsUncheckedCreateWithoutUserInput> | audit_logsCreateWithoutUserInput[] | audit_logsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutUserInput | audit_logsCreateOrConnectWithoutUserInput[]
    upsert?: audit_logsUpsertWithWhereUniqueWithoutUserInput | audit_logsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: audit_logsCreateManyUserInputEnvelope
    set?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    disconnect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    delete?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    update?: audit_logsUpdateWithWhereUniqueWithoutUserInput | audit_logsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: audit_logsUpdateManyWithWhereWithoutUserInput | audit_logsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
  }

  export type systemsUncheckedUpdateManyWithoutUser_createdNestedInput = {
    create?: XOR<systemsCreateWithoutUser_createdInput, systemsUncheckedCreateWithoutUser_createdInput> | systemsCreateWithoutUser_createdInput[] | systemsUncheckedCreateWithoutUser_createdInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_createdInput | systemsCreateOrConnectWithoutUser_createdInput[]
    upsert?: systemsUpsertWithWhereUniqueWithoutUser_createdInput | systemsUpsertWithWhereUniqueWithoutUser_createdInput[]
    createMany?: systemsCreateManyUser_createdInputEnvelope
    set?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    disconnect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    delete?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    update?: systemsUpdateWithWhereUniqueWithoutUser_createdInput | systemsUpdateWithWhereUniqueWithoutUser_createdInput[]
    updateMany?: systemsUpdateManyWithWhereWithoutUser_createdInput | systemsUpdateManyWithWhereWithoutUser_createdInput[]
    deleteMany?: systemsScalarWhereInput | systemsScalarWhereInput[]
  }

  export type systemsUncheckedUpdateManyWithoutUser_updatedNestedInput = {
    create?: XOR<systemsCreateWithoutUser_updatedInput, systemsUncheckedCreateWithoutUser_updatedInput> | systemsCreateWithoutUser_updatedInput[] | systemsUncheckedCreateWithoutUser_updatedInput[]
    connectOrCreate?: systemsCreateOrConnectWithoutUser_updatedInput | systemsCreateOrConnectWithoutUser_updatedInput[]
    upsert?: systemsUpsertWithWhereUniqueWithoutUser_updatedInput | systemsUpsertWithWhereUniqueWithoutUser_updatedInput[]
    createMany?: systemsCreateManyUser_updatedInputEnvelope
    set?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    disconnect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    delete?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    connect?: systemsWhereUniqueInput | systemsWhereUniqueInput[]
    update?: systemsUpdateWithWhereUniqueWithoutUser_updatedInput | systemsUpdateWithWhereUniqueWithoutUser_updatedInput[]
    updateMany?: systemsUpdateManyWithWhereWithoutUser_updatedInput | systemsUpdateManyWithWhereWithoutUser_updatedInput[]
    deleteMany?: systemsScalarWhereInput | systemsScalarWhereInput[]
  }

  export type alertsUncheckedUpdateManyWithoutAck_userNestedInput = {
    create?: XOR<alertsCreateWithoutAck_userInput, alertsUncheckedCreateWithoutAck_userInput> | alertsCreateWithoutAck_userInput[] | alertsUncheckedCreateWithoutAck_userInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutAck_userInput | alertsCreateOrConnectWithoutAck_userInput[]
    upsert?: alertsUpsertWithWhereUniqueWithoutAck_userInput | alertsUpsertWithWhereUniqueWithoutAck_userInput[]
    createMany?: alertsCreateManyAck_userInputEnvelope
    set?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    disconnect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    delete?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    update?: alertsUpdateWithWhereUniqueWithoutAck_userInput | alertsUpdateWithWhereUniqueWithoutAck_userInput[]
    updateMany?: alertsUpdateManyWithWhereWithoutAck_userInput | alertsUpdateManyWithWhereWithoutAck_userInput[]
    deleteMany?: alertsScalarWhereInput | alertsScalarWhereInput[]
  }

  export type audit_logsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<audit_logsCreateWithoutUserInput, audit_logsUncheckedCreateWithoutUserInput> | audit_logsCreateWithoutUserInput[] | audit_logsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: audit_logsCreateOrConnectWithoutUserInput | audit_logsCreateOrConnectWithoutUserInput[]
    upsert?: audit_logsUpsertWithWhereUniqueWithoutUserInput | audit_logsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: audit_logsCreateManyUserInputEnvelope
    set?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    disconnect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    delete?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    connect?: audit_logsWhereUniqueInput | audit_logsWhereUniqueInput[]
    update?: audit_logsUpdateWithWhereUniqueWithoutUserInput | audit_logsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: audit_logsUpdateManyWithWhereWithoutUserInput | audit_logsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutSystems_createdInput = {
    create?: XOR<usersCreateWithoutSystems_createdInput, usersUncheckedCreateWithoutSystems_createdInput>
    connectOrCreate?: usersCreateOrConnectWithoutSystems_createdInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutSystems_updatedInput = {
    create?: XOR<usersCreateWithoutSystems_updatedInput, usersUncheckedCreateWithoutSystems_updatedInput>
    connectOrCreate?: usersCreateOrConnectWithoutSystems_updatedInput
    connect?: usersWhereUniqueInput
  }

  export type status_logsCreateNestedManyWithoutSystemInput = {
    create?: XOR<status_logsCreateWithoutSystemInput, status_logsUncheckedCreateWithoutSystemInput> | status_logsCreateWithoutSystemInput[] | status_logsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: status_logsCreateOrConnectWithoutSystemInput | status_logsCreateOrConnectWithoutSystemInput[]
    createMany?: status_logsCreateManySystemInputEnvelope
    connect?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
  }

  export type alertsCreateNestedManyWithoutSystemInput = {
    create?: XOR<alertsCreateWithoutSystemInput, alertsUncheckedCreateWithoutSystemInput> | alertsCreateWithoutSystemInput[] | alertsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutSystemInput | alertsCreateOrConnectWithoutSystemInput[]
    createMany?: alertsCreateManySystemInputEnvelope
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
  }

  export type sla_configsCreateNestedOneWithoutSystemInput = {
    create?: XOR<sla_configsCreateWithoutSystemInput, sla_configsUncheckedCreateWithoutSystemInput>
    connectOrCreate?: sla_configsCreateOrConnectWithoutSystemInput
    connect?: sla_configsWhereUniqueInput
  }

  export type sla_reportsCreateNestedManyWithoutSystemInput = {
    create?: XOR<sla_reportsCreateWithoutSystemInput, sla_reportsUncheckedCreateWithoutSystemInput> | sla_reportsCreateWithoutSystemInput[] | sla_reportsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: sla_reportsCreateOrConnectWithoutSystemInput | sla_reportsCreateOrConnectWithoutSystemInput[]
    createMany?: sla_reportsCreateManySystemInputEnvelope
    connect?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
  }

  export type status_logsUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<status_logsCreateWithoutSystemInput, status_logsUncheckedCreateWithoutSystemInput> | status_logsCreateWithoutSystemInput[] | status_logsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: status_logsCreateOrConnectWithoutSystemInput | status_logsCreateOrConnectWithoutSystemInput[]
    createMany?: status_logsCreateManySystemInputEnvelope
    connect?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
  }

  export type alertsUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<alertsCreateWithoutSystemInput, alertsUncheckedCreateWithoutSystemInput> | alertsCreateWithoutSystemInput[] | alertsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutSystemInput | alertsCreateOrConnectWithoutSystemInput[]
    createMany?: alertsCreateManySystemInputEnvelope
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
  }

  export type sla_configsUncheckedCreateNestedOneWithoutSystemInput = {
    create?: XOR<sla_configsCreateWithoutSystemInput, sla_configsUncheckedCreateWithoutSystemInput>
    connectOrCreate?: sla_configsCreateOrConnectWithoutSystemInput
    connect?: sla_configsWhereUniqueInput
  }

  export type sla_reportsUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<sla_reportsCreateWithoutSystemInput, sla_reportsUncheckedCreateWithoutSystemInput> | sla_reportsCreateWithoutSystemInput[] | sla_reportsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: sla_reportsCreateOrConnectWithoutSystemInput | sla_reportsCreateOrConnectWithoutSystemInput[]
    createMany?: sla_reportsCreateManySystemInputEnvelope
    connect?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
  }

  export type Enummonitor_typeFieldUpdateOperationsInput = {
    set?: $Enums.monitor_type
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumstatusFieldUpdateOperationsInput = {
    set?: $Enums.status
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type usersUpdateOneWithoutSystems_createdNestedInput = {
    create?: XOR<usersCreateWithoutSystems_createdInput, usersUncheckedCreateWithoutSystems_createdInput>
    connectOrCreate?: usersCreateOrConnectWithoutSystems_createdInput
    upsert?: usersUpsertWithoutSystems_createdInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSystems_createdInput, usersUpdateWithoutSystems_createdInput>, usersUncheckedUpdateWithoutSystems_createdInput>
  }

  export type usersUpdateOneWithoutSystems_updatedNestedInput = {
    create?: XOR<usersCreateWithoutSystems_updatedInput, usersUncheckedCreateWithoutSystems_updatedInput>
    connectOrCreate?: usersCreateOrConnectWithoutSystems_updatedInput
    upsert?: usersUpsertWithoutSystems_updatedInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSystems_updatedInput, usersUpdateWithoutSystems_updatedInput>, usersUncheckedUpdateWithoutSystems_updatedInput>
  }

  export type status_logsUpdateManyWithoutSystemNestedInput = {
    create?: XOR<status_logsCreateWithoutSystemInput, status_logsUncheckedCreateWithoutSystemInput> | status_logsCreateWithoutSystemInput[] | status_logsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: status_logsCreateOrConnectWithoutSystemInput | status_logsCreateOrConnectWithoutSystemInput[]
    upsert?: status_logsUpsertWithWhereUniqueWithoutSystemInput | status_logsUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: status_logsCreateManySystemInputEnvelope
    set?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    disconnect?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    delete?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    connect?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    update?: status_logsUpdateWithWhereUniqueWithoutSystemInput | status_logsUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: status_logsUpdateManyWithWhereWithoutSystemInput | status_logsUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: status_logsScalarWhereInput | status_logsScalarWhereInput[]
  }

  export type alertsUpdateManyWithoutSystemNestedInput = {
    create?: XOR<alertsCreateWithoutSystemInput, alertsUncheckedCreateWithoutSystemInput> | alertsCreateWithoutSystemInput[] | alertsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutSystemInput | alertsCreateOrConnectWithoutSystemInput[]
    upsert?: alertsUpsertWithWhereUniqueWithoutSystemInput | alertsUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: alertsCreateManySystemInputEnvelope
    set?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    disconnect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    delete?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    update?: alertsUpdateWithWhereUniqueWithoutSystemInput | alertsUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: alertsUpdateManyWithWhereWithoutSystemInput | alertsUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: alertsScalarWhereInput | alertsScalarWhereInput[]
  }

  export type sla_configsUpdateOneWithoutSystemNestedInput = {
    create?: XOR<sla_configsCreateWithoutSystemInput, sla_configsUncheckedCreateWithoutSystemInput>
    connectOrCreate?: sla_configsCreateOrConnectWithoutSystemInput
    upsert?: sla_configsUpsertWithoutSystemInput
    disconnect?: sla_configsWhereInput | boolean
    delete?: sla_configsWhereInput | boolean
    connect?: sla_configsWhereUniqueInput
    update?: XOR<XOR<sla_configsUpdateToOneWithWhereWithoutSystemInput, sla_configsUpdateWithoutSystemInput>, sla_configsUncheckedUpdateWithoutSystemInput>
  }

  export type sla_reportsUpdateManyWithoutSystemNestedInput = {
    create?: XOR<sla_reportsCreateWithoutSystemInput, sla_reportsUncheckedCreateWithoutSystemInput> | sla_reportsCreateWithoutSystemInput[] | sla_reportsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: sla_reportsCreateOrConnectWithoutSystemInput | sla_reportsCreateOrConnectWithoutSystemInput[]
    upsert?: sla_reportsUpsertWithWhereUniqueWithoutSystemInput | sla_reportsUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: sla_reportsCreateManySystemInputEnvelope
    set?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    disconnect?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    delete?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    connect?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    update?: sla_reportsUpdateWithWhereUniqueWithoutSystemInput | sla_reportsUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: sla_reportsUpdateManyWithWhereWithoutSystemInput | sla_reportsUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: sla_reportsScalarWhereInput | sla_reportsScalarWhereInput[]
  }

  export type status_logsUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<status_logsCreateWithoutSystemInput, status_logsUncheckedCreateWithoutSystemInput> | status_logsCreateWithoutSystemInput[] | status_logsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: status_logsCreateOrConnectWithoutSystemInput | status_logsCreateOrConnectWithoutSystemInput[]
    upsert?: status_logsUpsertWithWhereUniqueWithoutSystemInput | status_logsUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: status_logsCreateManySystemInputEnvelope
    set?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    disconnect?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    delete?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    connect?: status_logsWhereUniqueInput | status_logsWhereUniqueInput[]
    update?: status_logsUpdateWithWhereUniqueWithoutSystemInput | status_logsUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: status_logsUpdateManyWithWhereWithoutSystemInput | status_logsUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: status_logsScalarWhereInput | status_logsScalarWhereInput[]
  }

  export type alertsUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<alertsCreateWithoutSystemInput, alertsUncheckedCreateWithoutSystemInput> | alertsCreateWithoutSystemInput[] | alertsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: alertsCreateOrConnectWithoutSystemInput | alertsCreateOrConnectWithoutSystemInput[]
    upsert?: alertsUpsertWithWhereUniqueWithoutSystemInput | alertsUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: alertsCreateManySystemInputEnvelope
    set?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    disconnect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    delete?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    connect?: alertsWhereUniqueInput | alertsWhereUniqueInput[]
    update?: alertsUpdateWithWhereUniqueWithoutSystemInput | alertsUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: alertsUpdateManyWithWhereWithoutSystemInput | alertsUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: alertsScalarWhereInput | alertsScalarWhereInput[]
  }

  export type sla_configsUncheckedUpdateOneWithoutSystemNestedInput = {
    create?: XOR<sla_configsCreateWithoutSystemInput, sla_configsUncheckedCreateWithoutSystemInput>
    connectOrCreate?: sla_configsCreateOrConnectWithoutSystemInput
    upsert?: sla_configsUpsertWithoutSystemInput
    disconnect?: sla_configsWhereInput | boolean
    delete?: sla_configsWhereInput | boolean
    connect?: sla_configsWhereUniqueInput
    update?: XOR<XOR<sla_configsUpdateToOneWithWhereWithoutSystemInput, sla_configsUpdateWithoutSystemInput>, sla_configsUncheckedUpdateWithoutSystemInput>
  }

  export type sla_reportsUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<sla_reportsCreateWithoutSystemInput, sla_reportsUncheckedCreateWithoutSystemInput> | sla_reportsCreateWithoutSystemInput[] | sla_reportsUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: sla_reportsCreateOrConnectWithoutSystemInput | sla_reportsCreateOrConnectWithoutSystemInput[]
    upsert?: sla_reportsUpsertWithWhereUniqueWithoutSystemInput | sla_reportsUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: sla_reportsCreateManySystemInputEnvelope
    set?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    disconnect?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    delete?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    connect?: sla_reportsWhereUniqueInput | sla_reportsWhereUniqueInput[]
    update?: sla_reportsUpdateWithWhereUniqueWithoutSystemInput | sla_reportsUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: sla_reportsUpdateManyWithWhereWithoutSystemInput | sla_reportsUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: sla_reportsScalarWhereInput | sla_reportsScalarWhereInput[]
  }

  export type systemsCreateNestedOneWithoutStatus_logsInput = {
    create?: XOR<systemsCreateWithoutStatus_logsInput, systemsUncheckedCreateWithoutStatus_logsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutStatus_logsInput
    connect?: systemsWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type systemsUpdateOneRequiredWithoutStatus_logsNestedInput = {
    create?: XOR<systemsCreateWithoutStatus_logsInput, systemsUncheckedCreateWithoutStatus_logsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutStatus_logsInput
    upsert?: systemsUpsertWithoutStatus_logsInput
    connect?: systemsWhereUniqueInput
    update?: XOR<XOR<systemsUpdateToOneWithWhereWithoutStatus_logsInput, systemsUpdateWithoutStatus_logsInput>, systemsUncheckedUpdateWithoutStatus_logsInput>
  }

  export type systemsCreateNestedOneWithoutAlertsInput = {
    create?: XOR<systemsCreateWithoutAlertsInput, systemsUncheckedCreateWithoutAlertsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutAlertsInput
    connect?: systemsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutAlerts_ackInput = {
    create?: XOR<usersCreateWithoutAlerts_ackInput, usersUncheckedCreateWithoutAlerts_ackInput>
    connectOrCreate?: usersCreateOrConnectWithoutAlerts_ackInput
    connect?: usersWhereUniqueInput
  }

  export type EnumseverityFieldUpdateOperationsInput = {
    set?: $Enums.severity
  }

  export type Enumalert_statusFieldUpdateOperationsInput = {
    set?: $Enums.alert_status
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type systemsUpdateOneRequiredWithoutAlertsNestedInput = {
    create?: XOR<systemsCreateWithoutAlertsInput, systemsUncheckedCreateWithoutAlertsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutAlertsInput
    upsert?: systemsUpsertWithoutAlertsInput
    connect?: systemsWhereUniqueInput
    update?: XOR<XOR<systemsUpdateToOneWithWhereWithoutAlertsInput, systemsUpdateWithoutAlertsInput>, systemsUncheckedUpdateWithoutAlertsInput>
  }

  export type usersUpdateOneWithoutAlerts_ackNestedInput = {
    create?: XOR<usersCreateWithoutAlerts_ackInput, usersUncheckedCreateWithoutAlerts_ackInput>
    connectOrCreate?: usersCreateOrConnectWithoutAlerts_ackInput
    upsert?: usersUpsertWithoutAlerts_ackInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAlerts_ackInput, usersUpdateWithoutAlerts_ackInput>, usersUncheckedUpdateWithoutAlerts_ackInput>
  }

  export type systemsCreateNestedOneWithoutSla_configsInput = {
    create?: XOR<systemsCreateWithoutSla_configsInput, systemsUncheckedCreateWithoutSla_configsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutSla_configsInput
    connect?: systemsWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type systemsUpdateOneRequiredWithoutSla_configsNestedInput = {
    create?: XOR<systemsCreateWithoutSla_configsInput, systemsUncheckedCreateWithoutSla_configsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutSla_configsInput
    upsert?: systemsUpsertWithoutSla_configsInput
    connect?: systemsWhereUniqueInput
    update?: XOR<XOR<systemsUpdateToOneWithWhereWithoutSla_configsInput, systemsUpdateWithoutSla_configsInput>, systemsUncheckedUpdateWithoutSla_configsInput>
  }

  export type systemsCreateNestedOneWithoutSla_reportsInput = {
    create?: XOR<systemsCreateWithoutSla_reportsInput, systemsUncheckedCreateWithoutSla_reportsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutSla_reportsInput
    connect?: systemsWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type systemsUpdateOneRequiredWithoutSla_reportsNestedInput = {
    create?: XOR<systemsCreateWithoutSla_reportsInput, systemsUncheckedCreateWithoutSla_reportsInput>
    connectOrCreate?: systemsCreateOrConnectWithoutSla_reportsInput
    upsert?: systemsUpsertWithoutSla_reportsInput
    connect?: systemsWhereUniqueInput
    update?: XOR<XOR<systemsUpdateToOneWithWhereWithoutSla_reportsInput, systemsUpdateWithoutSla_reportsInput>, systemsUncheckedUpdateWithoutSla_reportsInput>
  }

  export type usersCreateNestedOneWithoutAudit_logsInput = {
    create?: XOR<usersCreateWithoutAudit_logsInput, usersUncheckedCreateWithoutAudit_logsInput>
    connectOrCreate?: usersCreateOrConnectWithoutAudit_logsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutAudit_logsNestedInput = {
    create?: XOR<usersCreateWithoutAudit_logsInput, usersUncheckedCreateWithoutAudit_logsInput>
    connectOrCreate?: usersCreateOrConnectWithoutAudit_logsInput
    upsert?: usersUpsertWithoutAudit_logsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAudit_logsInput, usersUpdateWithoutAudit_logsInput>, usersUncheckedUpdateWithoutAudit_logsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnummonitor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.monitor_type | Enummonitor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnummonitor_typeFilter<$PrismaModel> | $Enums.monitor_type
  }

  export type NestedEnumstatusFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumstatusFilter<$PrismaModel> | $Enums.status
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnummonitor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.monitor_type | Enummonitor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.monitor_type[] | ListEnummonitor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnummonitor_typeWithAggregatesFilter<$PrismaModel> | $Enums.monitor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnummonitor_typeFilter<$PrismaModel>
    _max?: NestedEnummonitor_typeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumstatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.status[] | ListEnumstatusFieldRefInput<$PrismaModel>
    not?: NestedEnumstatusWithAggregatesFilter<$PrismaModel> | $Enums.status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumstatusFilter<$PrismaModel>
    _max?: NestedEnumstatusFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumseverityFilter<$PrismaModel = never> = {
    equals?: $Enums.severity | EnumseverityFieldRefInput<$PrismaModel>
    in?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    not?: NestedEnumseverityFilter<$PrismaModel> | $Enums.severity
  }

  export type NestedEnumalert_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_status | Enumalert_statusFieldRefInput<$PrismaModel>
    in?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_statusFilter<$PrismaModel> | $Enums.alert_status
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumseverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.severity | EnumseverityFieldRefInput<$PrismaModel>
    in?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.severity[] | ListEnumseverityFieldRefInput<$PrismaModel>
    not?: NestedEnumseverityWithAggregatesFilter<$PrismaModel> | $Enums.severity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumseverityFilter<$PrismaModel>
    _max?: NestedEnumseverityFilter<$PrismaModel>
  }

  export type NestedEnumalert_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.alert_status | Enumalert_statusFieldRefInput<$PrismaModel>
    in?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.alert_status[] | ListEnumalert_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumalert_statusWithAggregatesFilter<$PrismaModel> | $Enums.alert_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumalert_statusFilter<$PrismaModel>
    _max?: NestedEnumalert_statusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type systemsCreateWithoutUser_createdInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_updated?: usersCreateNestedOneWithoutSystems_updatedInput
    status_logs?: status_logsCreateNestedManyWithoutSystemInput
    alerts?: alertsCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsCreateNestedManyWithoutSystemInput
  }

  export type systemsUncheckedCreateWithoutUser_createdInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    status_logs?: status_logsUncheckedCreateNestedManyWithoutSystemInput
    alerts?: alertsUncheckedCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsUncheckedCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsUncheckedCreateNestedManyWithoutSystemInput
  }

  export type systemsCreateOrConnectWithoutUser_createdInput = {
    where: systemsWhereUniqueInput
    create: XOR<systemsCreateWithoutUser_createdInput, systemsUncheckedCreateWithoutUser_createdInput>
  }

  export type systemsCreateManyUser_createdInputEnvelope = {
    data: systemsCreateManyUser_createdInput | systemsCreateManyUser_createdInput[]
    skipDuplicates?: boolean
  }

  export type systemsCreateWithoutUser_updatedInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_created?: usersCreateNestedOneWithoutSystems_createdInput
    status_logs?: status_logsCreateNestedManyWithoutSystemInput
    alerts?: alertsCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsCreateNestedManyWithoutSystemInput
  }

  export type systemsUncheckedCreateWithoutUser_updatedInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    status_logs?: status_logsUncheckedCreateNestedManyWithoutSystemInput
    alerts?: alertsUncheckedCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsUncheckedCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsUncheckedCreateNestedManyWithoutSystemInput
  }

  export type systemsCreateOrConnectWithoutUser_updatedInput = {
    where: systemsWhereUniqueInput
    create: XOR<systemsCreateWithoutUser_updatedInput, systemsUncheckedCreateWithoutUser_updatedInput>
  }

  export type systemsCreateManyUser_updatedInputEnvelope = {
    data: systemsCreateManyUser_updatedInput | systemsCreateManyUser_updatedInput[]
    skipDuplicates?: boolean
  }

  export type alertsCreateWithoutAck_userInput = {
    id?: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
    system: systemsCreateNestedOneWithoutAlertsInput
  }

  export type alertsUncheckedCreateWithoutAck_userInput = {
    id?: string
    system_id: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
  }

  export type alertsCreateOrConnectWithoutAck_userInput = {
    where: alertsWhereUniqueInput
    create: XOR<alertsCreateWithoutAck_userInput, alertsUncheckedCreateWithoutAck_userInput>
  }

  export type alertsCreateManyAck_userInputEnvelope = {
    data: alertsCreateManyAck_userInput | alertsCreateManyAck_userInput[]
    skipDuplicates?: boolean
  }

  export type audit_logsCreateWithoutUserInput = {
    id?: string
    action: string
    object_type?: string | null
    object_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type audit_logsUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    object_type?: string | null
    object_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type audit_logsCreateOrConnectWithoutUserInput = {
    where: audit_logsWhereUniqueInput
    create: XOR<audit_logsCreateWithoutUserInput, audit_logsUncheckedCreateWithoutUserInput>
  }

  export type audit_logsCreateManyUserInputEnvelope = {
    data: audit_logsCreateManyUserInput | audit_logsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type systemsUpsertWithWhereUniqueWithoutUser_createdInput = {
    where: systemsWhereUniqueInput
    update: XOR<systemsUpdateWithoutUser_createdInput, systemsUncheckedUpdateWithoutUser_createdInput>
    create: XOR<systemsCreateWithoutUser_createdInput, systemsUncheckedCreateWithoutUser_createdInput>
  }

  export type systemsUpdateWithWhereUniqueWithoutUser_createdInput = {
    where: systemsWhereUniqueInput
    data: XOR<systemsUpdateWithoutUser_createdInput, systemsUncheckedUpdateWithoutUser_createdInput>
  }

  export type systemsUpdateManyWithWhereWithoutUser_createdInput = {
    where: systemsScalarWhereInput
    data: XOR<systemsUpdateManyMutationInput, systemsUncheckedUpdateManyWithoutUser_createdInput>
  }

  export type systemsScalarWhereInput = {
    AND?: systemsScalarWhereInput | systemsScalarWhereInput[]
    OR?: systemsScalarWhereInput[]
    NOT?: systemsScalarWhereInput | systemsScalarWhereInput[]
    id?: StringFilter<"systems"> | string
    name?: StringFilter<"systems"> | string
    url?: StringFilter<"systems"> | string
    monitor_type?: Enummonitor_typeFilter<"systems"> | $Enums.monitor_type
    check_interval?: IntFilter<"systems"> | number
    timeout?: IntFilter<"systems"> | number
    status?: EnumstatusFilter<"systems"> | $Enums.status
    is_enabled?: BoolFilter<"systems"> | boolean
    alert_email?: StringFilter<"systems"> | string
    description?: StringFilter<"systems"> | string
    created_by?: StringNullableFilter<"systems"> | string | null
    updated_by?: StringNullableFilter<"systems"> | string | null
    created_at?: DateTimeFilter<"systems"> | Date | string
    updated_at?: DateTimeFilter<"systems"> | Date | string
  }

  export type systemsUpsertWithWhereUniqueWithoutUser_updatedInput = {
    where: systemsWhereUniqueInput
    update: XOR<systemsUpdateWithoutUser_updatedInput, systemsUncheckedUpdateWithoutUser_updatedInput>
    create: XOR<systemsCreateWithoutUser_updatedInput, systemsUncheckedCreateWithoutUser_updatedInput>
  }

  export type systemsUpdateWithWhereUniqueWithoutUser_updatedInput = {
    where: systemsWhereUniqueInput
    data: XOR<systemsUpdateWithoutUser_updatedInput, systemsUncheckedUpdateWithoutUser_updatedInput>
  }

  export type systemsUpdateManyWithWhereWithoutUser_updatedInput = {
    where: systemsScalarWhereInput
    data: XOR<systemsUpdateManyMutationInput, systemsUncheckedUpdateManyWithoutUser_updatedInput>
  }

  export type alertsUpsertWithWhereUniqueWithoutAck_userInput = {
    where: alertsWhereUniqueInput
    update: XOR<alertsUpdateWithoutAck_userInput, alertsUncheckedUpdateWithoutAck_userInput>
    create: XOR<alertsCreateWithoutAck_userInput, alertsUncheckedCreateWithoutAck_userInput>
  }

  export type alertsUpdateWithWhereUniqueWithoutAck_userInput = {
    where: alertsWhereUniqueInput
    data: XOR<alertsUpdateWithoutAck_userInput, alertsUncheckedUpdateWithoutAck_userInput>
  }

  export type alertsUpdateManyWithWhereWithoutAck_userInput = {
    where: alertsScalarWhereInput
    data: XOR<alertsUpdateManyMutationInput, alertsUncheckedUpdateManyWithoutAck_userInput>
  }

  export type alertsScalarWhereInput = {
    AND?: alertsScalarWhereInput | alertsScalarWhereInput[]
    OR?: alertsScalarWhereInput[]
    NOT?: alertsScalarWhereInput | alertsScalarWhereInput[]
    id?: StringFilter<"alerts"> | string
    system_id?: StringFilter<"alerts"> | string
    severity?: EnumseverityFilter<"alerts"> | $Enums.severity
    status?: Enumalert_statusFilter<"alerts"> | $Enums.alert_status
    title?: StringFilter<"alerts"> | string
    message?: StringFilter<"alerts"> | string
    acknowledged_by?: StringNullableFilter<"alerts"> | string | null
    acknowledged_at?: DateTimeNullableFilter<"alerts"> | Date | string | null
    resolved_at?: DateTimeNullableFilter<"alerts"> | Date | string | null
    created_at?: DateTimeFilter<"alerts"> | Date | string
  }

  export type audit_logsUpsertWithWhereUniqueWithoutUserInput = {
    where: audit_logsWhereUniqueInput
    update: XOR<audit_logsUpdateWithoutUserInput, audit_logsUncheckedUpdateWithoutUserInput>
    create: XOR<audit_logsCreateWithoutUserInput, audit_logsUncheckedCreateWithoutUserInput>
  }

  export type audit_logsUpdateWithWhereUniqueWithoutUserInput = {
    where: audit_logsWhereUniqueInput
    data: XOR<audit_logsUpdateWithoutUserInput, audit_logsUncheckedUpdateWithoutUserInput>
  }

  export type audit_logsUpdateManyWithWhereWithoutUserInput = {
    where: audit_logsScalarWhereInput
    data: XOR<audit_logsUpdateManyMutationInput, audit_logsUncheckedUpdateManyWithoutUserInput>
  }

  export type audit_logsScalarWhereInput = {
    AND?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
    OR?: audit_logsScalarWhereInput[]
    NOT?: audit_logsScalarWhereInput | audit_logsScalarWhereInput[]
    id?: StringFilter<"audit_logs"> | string
    user_id?: StringNullableFilter<"audit_logs"> | string | null
    action?: StringFilter<"audit_logs"> | string
    object_type?: StringNullableFilter<"audit_logs"> | string | null
    object_id?: StringNullableFilter<"audit_logs"> | string | null
    details?: JsonNullableFilter<"audit_logs">
    created_at?: DateTimeFilter<"audit_logs"> | Date | string
  }

  export type usersCreateWithoutSystems_createdInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_updated?: systemsCreateNestedManyWithoutUser_updatedInput
    alerts_ack?: alertsCreateNestedManyWithoutAck_userInput
    audit_logs?: audit_logsCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutSystems_createdInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_updated?: systemsUncheckedCreateNestedManyWithoutUser_updatedInput
    alerts_ack?: alertsUncheckedCreateNestedManyWithoutAck_userInput
    audit_logs?: audit_logsUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutSystems_createdInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSystems_createdInput, usersUncheckedCreateWithoutSystems_createdInput>
  }

  export type usersCreateWithoutSystems_updatedInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsCreateNestedManyWithoutUser_createdInput
    alerts_ack?: alertsCreateNestedManyWithoutAck_userInput
    audit_logs?: audit_logsCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutSystems_updatedInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsUncheckedCreateNestedManyWithoutUser_createdInput
    alerts_ack?: alertsUncheckedCreateNestedManyWithoutAck_userInput
    audit_logs?: audit_logsUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutSystems_updatedInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSystems_updatedInput, usersUncheckedCreateWithoutSystems_updatedInput>
  }

  export type status_logsCreateWithoutSystemInput = {
    id?: string
    status: $Enums.status
    response_time?: number | null
    status_code?: number | null
    error_message?: string | null
    checked_at?: Date | string
  }

  export type status_logsUncheckedCreateWithoutSystemInput = {
    id?: string
    status: $Enums.status
    response_time?: number | null
    status_code?: number | null
    error_message?: string | null
    checked_at?: Date | string
  }

  export type status_logsCreateOrConnectWithoutSystemInput = {
    where: status_logsWhereUniqueInput
    create: XOR<status_logsCreateWithoutSystemInput, status_logsUncheckedCreateWithoutSystemInput>
  }

  export type status_logsCreateManySystemInputEnvelope = {
    data: status_logsCreateManySystemInput | status_logsCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type alertsCreateWithoutSystemInput = {
    id?: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
    ack_user?: usersCreateNestedOneWithoutAlerts_ackInput
  }

  export type alertsUncheckedCreateWithoutSystemInput = {
    id?: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_by?: string | null
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
  }

  export type alertsCreateOrConnectWithoutSystemInput = {
    where: alertsWhereUniqueInput
    create: XOR<alertsCreateWithoutSystemInput, alertsUncheckedCreateWithoutSystemInput>
  }

  export type alertsCreateManySystemInputEnvelope = {
    data: alertsCreateManySystemInput | alertsCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type sla_configsCreateWithoutSystemInput = {
    id?: string
    uptime_target?: number
    response_time_target?: number
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type sla_configsUncheckedCreateWithoutSystemInput = {
    id?: string
    uptime_target?: number
    response_time_target?: number
    alert_on_sla_violation?: boolean
    alert_threshold_minutes?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type sla_configsCreateOrConnectWithoutSystemInput = {
    where: sla_configsWhereUniqueInput
    create: XOR<sla_configsCreateWithoutSystemInput, sla_configsUncheckedCreateWithoutSystemInput>
  }

  export type sla_reportsCreateWithoutSystemInput = {
    id?: string
    month: number
    year: number
    total_checks?: number
    successful_checks?: number
    uptime_percentage?: number
    average_response_time?: number | null
    total_downtime?: number
    created_at?: Date | string
  }

  export type sla_reportsUncheckedCreateWithoutSystemInput = {
    id?: string
    month: number
    year: number
    total_checks?: number
    successful_checks?: number
    uptime_percentage?: number
    average_response_time?: number | null
    total_downtime?: number
    created_at?: Date | string
  }

  export type sla_reportsCreateOrConnectWithoutSystemInput = {
    where: sla_reportsWhereUniqueInput
    create: XOR<sla_reportsCreateWithoutSystemInput, sla_reportsUncheckedCreateWithoutSystemInput>
  }

  export type sla_reportsCreateManySystemInputEnvelope = {
    data: sla_reportsCreateManySystemInput | sla_reportsCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutSystems_createdInput = {
    update: XOR<usersUpdateWithoutSystems_createdInput, usersUncheckedUpdateWithoutSystems_createdInput>
    create: XOR<usersCreateWithoutSystems_createdInput, usersUncheckedCreateWithoutSystems_createdInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSystems_createdInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSystems_createdInput, usersUncheckedUpdateWithoutSystems_createdInput>
  }

  export type usersUpdateWithoutSystems_createdInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_updated?: systemsUpdateManyWithoutUser_updatedNestedInput
    alerts_ack?: alertsUpdateManyWithoutAck_userNestedInput
    audit_logs?: audit_logsUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutSystems_createdInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_updated?: systemsUncheckedUpdateManyWithoutUser_updatedNestedInput
    alerts_ack?: alertsUncheckedUpdateManyWithoutAck_userNestedInput
    audit_logs?: audit_logsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersUpsertWithoutSystems_updatedInput = {
    update: XOR<usersUpdateWithoutSystems_updatedInput, usersUncheckedUpdateWithoutSystems_updatedInput>
    create: XOR<usersCreateWithoutSystems_updatedInput, usersUncheckedCreateWithoutSystems_updatedInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSystems_updatedInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSystems_updatedInput, usersUncheckedUpdateWithoutSystems_updatedInput>
  }

  export type usersUpdateWithoutSystems_updatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUpdateManyWithoutUser_createdNestedInput
    alerts_ack?: alertsUpdateManyWithoutAck_userNestedInput
    audit_logs?: audit_logsUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutSystems_updatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUncheckedUpdateManyWithoutUser_createdNestedInput
    alerts_ack?: alertsUncheckedUpdateManyWithoutAck_userNestedInput
    audit_logs?: audit_logsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type status_logsUpsertWithWhereUniqueWithoutSystemInput = {
    where: status_logsWhereUniqueInput
    update: XOR<status_logsUpdateWithoutSystemInput, status_logsUncheckedUpdateWithoutSystemInput>
    create: XOR<status_logsCreateWithoutSystemInput, status_logsUncheckedCreateWithoutSystemInput>
  }

  export type status_logsUpdateWithWhereUniqueWithoutSystemInput = {
    where: status_logsWhereUniqueInput
    data: XOR<status_logsUpdateWithoutSystemInput, status_logsUncheckedUpdateWithoutSystemInput>
  }

  export type status_logsUpdateManyWithWhereWithoutSystemInput = {
    where: status_logsScalarWhereInput
    data: XOR<status_logsUpdateManyMutationInput, status_logsUncheckedUpdateManyWithoutSystemInput>
  }

  export type status_logsScalarWhereInput = {
    AND?: status_logsScalarWhereInput | status_logsScalarWhereInput[]
    OR?: status_logsScalarWhereInput[]
    NOT?: status_logsScalarWhereInput | status_logsScalarWhereInput[]
    id?: StringFilter<"status_logs"> | string
    system_id?: StringFilter<"status_logs"> | string
    status?: EnumstatusFilter<"status_logs"> | $Enums.status
    response_time?: IntNullableFilter<"status_logs"> | number | null
    status_code?: IntNullableFilter<"status_logs"> | number | null
    error_message?: StringNullableFilter<"status_logs"> | string | null
    checked_at?: DateTimeFilter<"status_logs"> | Date | string
  }

  export type alertsUpsertWithWhereUniqueWithoutSystemInput = {
    where: alertsWhereUniqueInput
    update: XOR<alertsUpdateWithoutSystemInput, alertsUncheckedUpdateWithoutSystemInput>
    create: XOR<alertsCreateWithoutSystemInput, alertsUncheckedCreateWithoutSystemInput>
  }

  export type alertsUpdateWithWhereUniqueWithoutSystemInput = {
    where: alertsWhereUniqueInput
    data: XOR<alertsUpdateWithoutSystemInput, alertsUncheckedUpdateWithoutSystemInput>
  }

  export type alertsUpdateManyWithWhereWithoutSystemInput = {
    where: alertsScalarWhereInput
    data: XOR<alertsUpdateManyMutationInput, alertsUncheckedUpdateManyWithoutSystemInput>
  }

  export type sla_configsUpsertWithoutSystemInput = {
    update: XOR<sla_configsUpdateWithoutSystemInput, sla_configsUncheckedUpdateWithoutSystemInput>
    create: XOR<sla_configsCreateWithoutSystemInput, sla_configsUncheckedCreateWithoutSystemInput>
    where?: sla_configsWhereInput
  }

  export type sla_configsUpdateToOneWithWhereWithoutSystemInput = {
    where?: sla_configsWhereInput
    data: XOR<sla_configsUpdateWithoutSystemInput, sla_configsUncheckedUpdateWithoutSystemInput>
  }

  export type sla_configsUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    uptime_target?: FloatFieldUpdateOperationsInput | number
    response_time_target?: IntFieldUpdateOperationsInput | number
    alert_on_sla_violation?: BoolFieldUpdateOperationsInput | boolean
    alert_threshold_minutes?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_configsUncheckedUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    uptime_target?: FloatFieldUpdateOperationsInput | number
    response_time_target?: IntFieldUpdateOperationsInput | number
    alert_on_sla_violation?: BoolFieldUpdateOperationsInput | boolean
    alert_threshold_minutes?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsUpsertWithWhereUniqueWithoutSystemInput = {
    where: sla_reportsWhereUniqueInput
    update: XOR<sla_reportsUpdateWithoutSystemInput, sla_reportsUncheckedUpdateWithoutSystemInput>
    create: XOR<sla_reportsCreateWithoutSystemInput, sla_reportsUncheckedCreateWithoutSystemInput>
  }

  export type sla_reportsUpdateWithWhereUniqueWithoutSystemInput = {
    where: sla_reportsWhereUniqueInput
    data: XOR<sla_reportsUpdateWithoutSystemInput, sla_reportsUncheckedUpdateWithoutSystemInput>
  }

  export type sla_reportsUpdateManyWithWhereWithoutSystemInput = {
    where: sla_reportsScalarWhereInput
    data: XOR<sla_reportsUpdateManyMutationInput, sla_reportsUncheckedUpdateManyWithoutSystemInput>
  }

  export type sla_reportsScalarWhereInput = {
    AND?: sla_reportsScalarWhereInput | sla_reportsScalarWhereInput[]
    OR?: sla_reportsScalarWhereInput[]
    NOT?: sla_reportsScalarWhereInput | sla_reportsScalarWhereInput[]
    id?: StringFilter<"sla_reports"> | string
    system_id?: StringFilter<"sla_reports"> | string
    month?: IntFilter<"sla_reports"> | number
    year?: IntFilter<"sla_reports"> | number
    total_checks?: IntFilter<"sla_reports"> | number
    successful_checks?: IntFilter<"sla_reports"> | number
    uptime_percentage?: FloatFilter<"sla_reports"> | number
    average_response_time?: FloatNullableFilter<"sla_reports"> | number | null
    total_downtime?: IntFilter<"sla_reports"> | number
    created_at?: DateTimeFilter<"sla_reports"> | Date | string
  }

  export type systemsCreateWithoutStatus_logsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_created?: usersCreateNestedOneWithoutSystems_createdInput
    user_updated?: usersCreateNestedOneWithoutSystems_updatedInput
    alerts?: alertsCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsCreateNestedManyWithoutSystemInput
  }

  export type systemsUncheckedCreateWithoutStatus_logsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    alerts?: alertsUncheckedCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsUncheckedCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsUncheckedCreateNestedManyWithoutSystemInput
  }

  export type systemsCreateOrConnectWithoutStatus_logsInput = {
    where: systemsWhereUniqueInput
    create: XOR<systemsCreateWithoutStatus_logsInput, systemsUncheckedCreateWithoutStatus_logsInput>
  }

  export type systemsUpsertWithoutStatus_logsInput = {
    update: XOR<systemsUpdateWithoutStatus_logsInput, systemsUncheckedUpdateWithoutStatus_logsInput>
    create: XOR<systemsCreateWithoutStatus_logsInput, systemsUncheckedCreateWithoutStatus_logsInput>
    where?: systemsWhereInput
  }

  export type systemsUpdateToOneWithWhereWithoutStatus_logsInput = {
    where?: systemsWhereInput
    data: XOR<systemsUpdateWithoutStatus_logsInput, systemsUncheckedUpdateWithoutStatus_logsInput>
  }

  export type systemsUpdateWithoutStatus_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_created?: usersUpdateOneWithoutSystems_createdNestedInput
    user_updated?: usersUpdateOneWithoutSystems_updatedNestedInput
    alerts?: alertsUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateWithoutStatus_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alerts?: alertsUncheckedUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUncheckedUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type systemsCreateWithoutAlertsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_created?: usersCreateNestedOneWithoutSystems_createdInput
    user_updated?: usersCreateNestedOneWithoutSystems_updatedInput
    status_logs?: status_logsCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsCreateNestedManyWithoutSystemInput
  }

  export type systemsUncheckedCreateWithoutAlertsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    status_logs?: status_logsUncheckedCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsUncheckedCreateNestedOneWithoutSystemInput
    sla_reports?: sla_reportsUncheckedCreateNestedManyWithoutSystemInput
  }

  export type systemsCreateOrConnectWithoutAlertsInput = {
    where: systemsWhereUniqueInput
    create: XOR<systemsCreateWithoutAlertsInput, systemsUncheckedCreateWithoutAlertsInput>
  }

  export type usersCreateWithoutAlerts_ackInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsCreateNestedManyWithoutUser_createdInput
    systems_updated?: systemsCreateNestedManyWithoutUser_updatedInput
    audit_logs?: audit_logsCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutAlerts_ackInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsUncheckedCreateNestedManyWithoutUser_createdInput
    systems_updated?: systemsUncheckedCreateNestedManyWithoutUser_updatedInput
    audit_logs?: audit_logsUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutAlerts_ackInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAlerts_ackInput, usersUncheckedCreateWithoutAlerts_ackInput>
  }

  export type systemsUpsertWithoutAlertsInput = {
    update: XOR<systemsUpdateWithoutAlertsInput, systemsUncheckedUpdateWithoutAlertsInput>
    create: XOR<systemsCreateWithoutAlertsInput, systemsUncheckedCreateWithoutAlertsInput>
    where?: systemsWhereInput
  }

  export type systemsUpdateToOneWithWhereWithoutAlertsInput = {
    where?: systemsWhereInput
    data: XOR<systemsUpdateWithoutAlertsInput, systemsUncheckedUpdateWithoutAlertsInput>
  }

  export type systemsUpdateWithoutAlertsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_created?: usersUpdateOneWithoutSystems_createdNestedInput
    user_updated?: usersUpdateOneWithoutSystems_updatedNestedInput
    status_logs?: status_logsUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateWithoutAlertsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    status_logs?: status_logsUncheckedUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUncheckedUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type usersUpsertWithoutAlerts_ackInput = {
    update: XOR<usersUpdateWithoutAlerts_ackInput, usersUncheckedUpdateWithoutAlerts_ackInput>
    create: XOR<usersCreateWithoutAlerts_ackInput, usersUncheckedCreateWithoutAlerts_ackInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAlerts_ackInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAlerts_ackInput, usersUncheckedUpdateWithoutAlerts_ackInput>
  }

  export type usersUpdateWithoutAlerts_ackInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUpdateManyWithoutUser_createdNestedInput
    systems_updated?: systemsUpdateManyWithoutUser_updatedNestedInput
    audit_logs?: audit_logsUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutAlerts_ackInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUncheckedUpdateManyWithoutUser_createdNestedInput
    systems_updated?: systemsUncheckedUpdateManyWithoutUser_updatedNestedInput
    audit_logs?: audit_logsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type systemsCreateWithoutSla_configsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_created?: usersCreateNestedOneWithoutSystems_createdInput
    user_updated?: usersCreateNestedOneWithoutSystems_updatedInput
    status_logs?: status_logsCreateNestedManyWithoutSystemInput
    alerts?: alertsCreateNestedManyWithoutSystemInput
    sla_reports?: sla_reportsCreateNestedManyWithoutSystemInput
  }

  export type systemsUncheckedCreateWithoutSla_configsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    status_logs?: status_logsUncheckedCreateNestedManyWithoutSystemInput
    alerts?: alertsUncheckedCreateNestedManyWithoutSystemInput
    sla_reports?: sla_reportsUncheckedCreateNestedManyWithoutSystemInput
  }

  export type systemsCreateOrConnectWithoutSla_configsInput = {
    where: systemsWhereUniqueInput
    create: XOR<systemsCreateWithoutSla_configsInput, systemsUncheckedCreateWithoutSla_configsInput>
  }

  export type systemsUpsertWithoutSla_configsInput = {
    update: XOR<systemsUpdateWithoutSla_configsInput, systemsUncheckedUpdateWithoutSla_configsInput>
    create: XOR<systemsCreateWithoutSla_configsInput, systemsUncheckedCreateWithoutSla_configsInput>
    where?: systemsWhereInput
  }

  export type systemsUpdateToOneWithWhereWithoutSla_configsInput = {
    where?: systemsWhereInput
    data: XOR<systemsUpdateWithoutSla_configsInput, systemsUncheckedUpdateWithoutSla_configsInput>
  }

  export type systemsUpdateWithoutSla_configsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_created?: usersUpdateOneWithoutSystems_createdNestedInput
    user_updated?: usersUpdateOneWithoutSystems_updatedNestedInput
    status_logs?: status_logsUpdateManyWithoutSystemNestedInput
    alerts?: alertsUpdateManyWithoutSystemNestedInput
    sla_reports?: sla_reportsUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateWithoutSla_configsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    status_logs?: status_logsUncheckedUpdateManyWithoutSystemNestedInput
    alerts?: alertsUncheckedUpdateManyWithoutSystemNestedInput
    sla_reports?: sla_reportsUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type systemsCreateWithoutSla_reportsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_at?: Date | string
    updated_at?: Date | string
    user_created?: usersCreateNestedOneWithoutSystems_createdInput
    user_updated?: usersCreateNestedOneWithoutSystems_updatedInput
    status_logs?: status_logsCreateNestedManyWithoutSystemInput
    alerts?: alertsCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsCreateNestedOneWithoutSystemInput
  }

  export type systemsUncheckedCreateWithoutSla_reportsInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    status_logs?: status_logsUncheckedCreateNestedManyWithoutSystemInput
    alerts?: alertsUncheckedCreateNestedManyWithoutSystemInput
    sla_configs?: sla_configsUncheckedCreateNestedOneWithoutSystemInput
  }

  export type systemsCreateOrConnectWithoutSla_reportsInput = {
    where: systemsWhereUniqueInput
    create: XOR<systemsCreateWithoutSla_reportsInput, systemsUncheckedCreateWithoutSla_reportsInput>
  }

  export type systemsUpsertWithoutSla_reportsInput = {
    update: XOR<systemsUpdateWithoutSla_reportsInput, systemsUncheckedUpdateWithoutSla_reportsInput>
    create: XOR<systemsCreateWithoutSla_reportsInput, systemsUncheckedCreateWithoutSla_reportsInput>
    where?: systemsWhereInput
  }

  export type systemsUpdateToOneWithWhereWithoutSla_reportsInput = {
    where?: systemsWhereInput
    data: XOR<systemsUpdateWithoutSla_reportsInput, systemsUncheckedUpdateWithoutSla_reportsInput>
  }

  export type systemsUpdateWithoutSla_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_created?: usersUpdateOneWithoutSystems_createdNestedInput
    user_updated?: usersUpdateOneWithoutSystems_updatedNestedInput
    status_logs?: status_logsUpdateManyWithoutSystemNestedInput
    alerts?: alertsUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUpdateOneWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateWithoutSla_reportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    status_logs?: status_logsUncheckedUpdateManyWithoutSystemNestedInput
    alerts?: alertsUncheckedUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUncheckedUpdateOneWithoutSystemNestedInput
  }

  export type usersCreateWithoutAudit_logsInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsCreateNestedManyWithoutUser_createdInput
    systems_updated?: systemsCreateNestedManyWithoutUser_updatedInput
    alerts_ack?: alertsCreateNestedManyWithoutAck_userInput
  }

  export type usersUncheckedCreateWithoutAudit_logsInput = {
    id?: string
    email: string
    senha: string
    first_name: string
    last_name: string
    profile_image_url?: string | null
    role?: string
    created_at?: Date | string
    updated_at?: Date | string
    systems_created?: systemsUncheckedCreateNestedManyWithoutUser_createdInput
    systems_updated?: systemsUncheckedCreateNestedManyWithoutUser_updatedInput
    alerts_ack?: alertsUncheckedCreateNestedManyWithoutAck_userInput
  }

  export type usersCreateOrConnectWithoutAudit_logsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAudit_logsInput, usersUncheckedCreateWithoutAudit_logsInput>
  }

  export type usersUpsertWithoutAudit_logsInput = {
    update: XOR<usersUpdateWithoutAudit_logsInput, usersUncheckedUpdateWithoutAudit_logsInput>
    create: XOR<usersCreateWithoutAudit_logsInput, usersUncheckedCreateWithoutAudit_logsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAudit_logsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAudit_logsInput, usersUncheckedUpdateWithoutAudit_logsInput>
  }

  export type usersUpdateWithoutAudit_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUpdateManyWithoutUser_createdNestedInput
    systems_updated?: systemsUpdateManyWithoutUser_updatedNestedInput
    alerts_ack?: alertsUpdateManyWithoutAck_userNestedInput
  }

  export type usersUncheckedUpdateWithoutAudit_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    systems_created?: systemsUncheckedUpdateManyWithoutUser_createdNestedInput
    systems_updated?: systemsUncheckedUpdateManyWithoutUser_updatedNestedInput
    alerts_ack?: alertsUncheckedUpdateManyWithoutAck_userNestedInput
  }

  export type systemsCreateManyUser_createdInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    updated_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type systemsCreateManyUser_updatedInput = {
    id?: string
    name: string
    url: string
    monitor_type: $Enums.monitor_type
    check_interval?: number
    timeout?: number
    status?: $Enums.status
    is_enabled?: boolean
    alert_email: string
    description: string
    created_by?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type alertsCreateManyAck_userInput = {
    id?: string
    system_id: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
  }

  export type audit_logsCreateManyUserInput = {
    id?: string
    action: string
    object_type?: string | null
    object_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type systemsUpdateWithoutUser_createdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_updated?: usersUpdateOneWithoutSystems_updatedNestedInput
    status_logs?: status_logsUpdateManyWithoutSystemNestedInput
    alerts?: alertsUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateWithoutUser_createdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    status_logs?: status_logsUncheckedUpdateManyWithoutSystemNestedInput
    alerts?: alertsUncheckedUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUncheckedUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateManyWithoutUser_createdInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type systemsUpdateWithoutUser_updatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_created?: usersUpdateOneWithoutSystems_createdNestedInput
    status_logs?: status_logsUpdateManyWithoutSystemNestedInput
    alerts?: alertsUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateWithoutUser_updatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    status_logs?: status_logsUncheckedUpdateManyWithoutSystemNestedInput
    alerts?: alertsUncheckedUpdateManyWithoutSystemNestedInput
    sla_configs?: sla_configsUncheckedUpdateOneWithoutSystemNestedInput
    sla_reports?: sla_reportsUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type systemsUncheckedUpdateManyWithoutUser_updatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    monitor_type?: Enummonitor_typeFieldUpdateOperationsInput | $Enums.monitor_type
    check_interval?: IntFieldUpdateOperationsInput | number
    timeout?: IntFieldUpdateOperationsInput | number
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    is_enabled?: BoolFieldUpdateOperationsInput | boolean
    alert_email?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsUpdateWithoutAck_userInput = {
    id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    system?: systemsUpdateOneRequiredWithoutAlertsNestedInput
  }

  export type alertsUncheckedUpdateWithoutAck_userInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsUncheckedUpdateManyWithoutAck_userInput = {
    id?: StringFieldUpdateOperationsInput | string
    system_id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type audit_logsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type audit_logsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type audit_logsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type status_logsCreateManySystemInput = {
    id?: string
    status: $Enums.status
    response_time?: number | null
    status_code?: number | null
    error_message?: string | null
    checked_at?: Date | string
  }

  export type alertsCreateManySystemInput = {
    id?: string
    severity: $Enums.severity
    status?: $Enums.alert_status
    title: string
    message: string
    acknowledged_by?: string | null
    acknowledged_at?: Date | string | null
    resolved_at?: Date | string | null
    created_at?: Date | string
  }

  export type sla_reportsCreateManySystemInput = {
    id?: string
    month: number
    year: number
    total_checks?: number
    successful_checks?: number
    uptime_percentage?: number
    average_response_time?: number | null
    total_downtime?: number
    created_at?: Date | string
  }

  export type status_logsUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type status_logsUncheckedUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type status_logsUncheckedUpdateManyWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    response_time?: NullableIntFieldUpdateOperationsInput | number | null
    status_code?: NullableIntFieldUpdateOperationsInput | number | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    checked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ack_user?: usersUpdateOneWithoutAlerts_ackNestedInput
  }

  export type alertsUncheckedUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_by?: NullableStringFieldUpdateOperationsInput | string | null
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type alertsUncheckedUpdateManyWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    severity?: EnumseverityFieldUpdateOperationsInput | $Enums.severity
    status?: Enumalert_statusFieldUpdateOperationsInput | $Enums.alert_status
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    acknowledged_by?: NullableStringFieldUpdateOperationsInput | string | null
    acknowledged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsUncheckedUpdateWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sla_reportsUncheckedUpdateManyWithoutSystemInput = {
    id?: StringFieldUpdateOperationsInput | string
    month?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    total_checks?: IntFieldUpdateOperationsInput | number
    successful_checks?: IntFieldUpdateOperationsInput | number
    uptime_percentage?: FloatFieldUpdateOperationsInput | number
    average_response_time?: NullableFloatFieldUpdateOperationsInput | number | null
    total_downtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}